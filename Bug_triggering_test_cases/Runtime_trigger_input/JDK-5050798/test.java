






public class GCbench
        extends Thread
{

///////////////////////////////////////////////////////////////////////////////////////
// Class interfaces
///////////////////////////////////////////////////////////////////////////////////////

    public static void main(String[] sArgs)
    {
        GCbench aGCbench1 = new GCbench();
        GCbench aGCbench2 = new GCbench();

        long lTime = System.currentTimeMillis();
        aGCbench1.start();
        aGCbench2.start();

        try
        {
            aGCbench1.join();
            aGCbench2.join();
        }
        catch(InterruptedException e)
        {

        }

        lTime = System.currentTimeMillis() - lTime;
        System.out.println("GCbench: " + lTime + " [mSec]");
    }
///////////////////////////////////////////////////////////////////////////////////////
// Class package internals
///////////////////////////////////////////////////////////////////////////////////////

    private static final int NUM_OF_LOOP = 100000;
    private static final int DATA_SIZE = 1000;
///////////////////////////////////////////////////////////////////////////////////////
// Instance  interfaces
///////////////////////////////////////////////////////////////////////////////////////

    public void run()
    {
        Object[] aData = new Object[DATA_SIZE];

        for(int i = 0; i < NUM_OF_LOOP; i++)
        {
            for(int j = 0; j < DATA_SIZE; j++)
            {
                aData[j] = new Integer(j);
            }

            for(int j = 0; j < DATA_SIZE; j++)
            {
                aData[j] = null;
            }
        }
    }
///////////////////////////////////////////////////////////////////////////////////////
// Instance package  interfaces
///////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////
// Instance internals
///////////////////////////////////////////////////////////////////////////////////////




}

