
/*
 * SpuriousWakeUp.java
 *
 * Created on September 28, 2006, 9:33 PM
 */

/**
 *
 * @author  gat
 */
import  java.lang.Runnable;


public class SpuriousWakeUp extends java.awt.Frame implements Runnable {

    /** Creates new form SpuriousWakeUp */
    public SpuriousWakeUp() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel1 = new java.awt.Panel();
        spuriousButton = new java.awt.Button();
        wait30Button = new java.awt.Button();
        waitStatusLabel = new java.awt.Label();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panel1.setLayout(new java.awt.GridBagLayout());

        spuriousButton.setLabel("Spurious");
        spuriousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spuriousButtonMouseClicked(evt);
            }
        });

        panel1.add(spuriousButton, new java.awt.GridBagConstraints());

        wait30Button.setLabel("wait30");
        wait30Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wait30ButtonMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        panel1.add(wait30Button, gridBagConstraints);

        waitStatusLabel.setText("Not Waiting");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        panel1.add(waitStatusLabel, gridBagConstraints);

        add(panel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Thread  runThread;

    private void spuriousButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spuriousButtonMouseClicked
// TODO add your handling code here:
        spuriousButton.setEnabled( false );
        wait30Button.setEnabled( false );
        Thread runThread = new Thread ( this );
        runThread.setPriority( Thread.MIN_PRIORITY );
        runThread.start();
        waitStatusLabel.setText( "Waiting" );
        try {
            synchronized( runThread ) {
                runThread.wait( 30 * 1000 );
            }
        } catch ( Exception e ) {
            e.printStackTrace();
        }
        waitStatusLabel.setText( "Not Waiting" );
        spuriousButton.setEnabled( true );
        wait30Button.setEnabled( true );
    }//GEN-LAST:event_spuriousButtonMouseClicked

    private void wait30ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wait30ButtonMouseClicked
// TODO add your handling code here:
        spuriousButton.setEnabled( false );
        wait30Button.setEnabled( false );
        Thread runThread = new Thread( this );
        runThread.setPriority( Thread.MIN_PRIORITY );
        runThread.start();
        waitStatusLabel.setText( "Waiting" );
        Object foo = new Object();
        try {
            synchronized( foo ) {
                foo.wait( 30 * 1000 );
            }
        } catch ( Exception e ) {
            e.printStackTrace();
        }
        waitStatusLabel.setText( "Not Waiting" );
        spuriousButton.setEnabled( true );
        wait30Button.setEnabled( true );
    }//GEN-LAST:event_wait30ButtonMouseClicked

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpuriousWakeUp().setVisible(true);
            }
        });
    }

    public void run() {
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel panel1;
    private java.awt.Button spuriousButton;
    private java.awt.Button wait30Button;
    private java.awt.Label waitStatusLabel;
    // End of variables declaration//GEN-END:variables

}

