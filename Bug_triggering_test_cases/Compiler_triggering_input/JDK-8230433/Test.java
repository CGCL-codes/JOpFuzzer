// Generated by Java* Fuzzer test generator (1.0.001). Mon Sep  2 11:31:35 2019
public class Test {

    public static final int N = 400;

public Test setinstanceCount(long tmp) { Test.instanceCount = tmp; return this; };
public Test setfFld(float tmp) { Test.fFld = tmp; return this; };
public Test setdFld(double tmp) { Test.dFld = tmp; return this; };
public Test setsFld(short tmp) { Test.sFld = tmp; return this; };
public Test setiArrFld1(int tmp[]) { Test.iArrFld1 = tmp; return this; };
public Test setfArrFld(float tmp[]) { Test.fArrFld = tmp; return this; };
public Test setbArrFld(boolean tmp[]) { Test.bArrFld = tmp; return this; };
public Test setOFld(Cls1 tmp) { Test.OFld = tmp; return this; };
    public static long instanceCount=7855804341752244251L;
    public static float fFld=-2.672F;
    public static double dFld=107.53883;
    public static short sFld=21912;
    public static int iArrFld1[]=new int[N];
    public static float fArrFld[]=new float[N];
    public static boolean bArrFld[]=new boolean[N];
    public static Cls1 OFld=new Cls1();

    static {
        FuzzerUtils.init(Test.iArrFld1, 37535);
        FuzzerUtils.init(Test.fArrFld, -1.194F);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long iMeth_check_sum = 0;
    public static long iMeth1_check_sum = 0;

    public static int iMeth1(float f) {

        float f1=-2.378F;
        long l=539468206L;
        int i6=-30791, i7=53756, i8=-7, i9=-11;

        FuzzerUtils.init(Test.OFld.iArrFld2, 47539);

        f1 = 362;
        do {
            l = 1;
            do {
                boolean b1=false;
                Test.fArrFld[(int)(f1 - 1)] += Test.OFld.iFld1;
                b1 = b1;
                for (i6 = 1; i6 < 1; i6++) {
                    Test.OFld = Test.OFld.setiFld1((int)(Test.OFld.iFld1>>(int)(i6))); /* Test.OFld.iFld1 >>= i6 */ ;
                    Test.OFld = Test.OFld.setiArrFld2(Test.OFld.iArrFld2); /* Test.OFld.iArrFld2 = Test.OFld.iArrFld2
                        */ ;
                    switch ((int)(((f1 % 1) * 5) + 4)) {
                    case 6:
                        Cls1.byFld -= (byte)i6;
                        break;
                    }
                }
                Test.bArrFld[(int)(l + 1)] = true;
            } while (++l < 9);
            for (i8 = 1; 9 > i8; ++i8) {
                i9 += (i8 * i8);
                Cls1.instanceCount = l;
                i7 = (int)Cls.instanceCount;
            }
            Cls.instanceCount += Test.instanceCount;
        } while ((f1 -= 2) > 0);
        long meth_res = Float.floatToIntBits(f) + Float.floatToIntBits(f1) + l + Test.OFld.iFld1 + i6 + i7 + i8 + i9 +
            FuzzerUtils.checkSum(Test.OFld.iArrFld2);
        iMeth1_check_sum += meth_res;
        return (int)meth_res;
    }

    public static int iMeth() {

        int i10=15593, i11=4, i12=-18909, i13=-13, i14=-55, i15=-1;

        Test.iArrFld1[(-57858 >>> 1) % N] -= iMeth1(Test.fFld);
        Test.OFld = Test.OFld.setOFld2(Test.OFld.OFld2.setiFld2((int)(Test.OFld.OFld2.iFld2*(int)(Cls1.byFld)))); /*
            Test.OFld.OFld2.iFld2 *= Cls1.byFld */ ;
        Test.fFld -= Test.OFld.OFld2.iFld2;
        for (i10 = 3; 152 > i10; ++i10) {
            i12 = 1;
            while (++i12 < 11) {
                try {
                    Test.OFld = Test.OFld.setOFld2(Test.OFld.OFld2.setiFld2((int)((int)(38 % i10)))); /*
                        Test.OFld.OFld2.iFld2 = (38 % i10) */ ;
                    Test.iArrFld1[i10] = (Test.iArrFld1[i10] / i10);
                    Test.iArrFld1[i12] = (i12 / 119);
                } catch (ArithmeticException a_e) {}
            }
            Test.iArrFld1[i10] = Test.OFld.OFld2.iFld2;
            i11 -= (int)Test.instanceCount;
            i13 = 1;
            do {
                Cls1.instanceCount += (i13 * i13);
                for (i14 = 1; i14 < 1; ++i14) {
                    i15 += i14;
                    Test.fFld -= Test.OFld.OFld2.iFld2;
                    i15 += (int)Cls.instanceCount;
                    if (false) break;
                }
            } while (++i13 < 11);
        }
        long meth_res = Test.OFld.OFld2.iFld2 + i10 + i11 + i12 + i13 + i14 + i15 +
            FuzzerUtils.checkSum(Test.OFld.OFld2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-3, i18=-1, i19=-32, i20=-84, i21=-13, i22=-12, i23=7;

        FuzzerUtils.init(Test.OFld.OFld1.iArrFld, 2);
        FuzzerUtils.init(Test.OFld.OFld1.sArrFld, (short)-19669);

        Test.OFld.OFld1.iArrFld[(Test.OFld.OFld1.iFld >>> 1) % N] = (int)Test.fFld;
        Test.OFld =
            Test.OFld.setOFld1(Test.OFld.OFld1.setiFld((int)(Test.OFld.OFld1.iFld+(int)(((Test.OFld.OFld1.sArrFld[(Test.OFld.OFld1.iFld
            >>> 1) % N] - Test.OFld.OFld1.iFld) * -19684))))); /* Test.OFld.OFld1.iFld +=
            ((Test.OFld.OFld1.sArrFld[(Test.OFld.OFld1.iFld >>> 1) % N] - Test.OFld.OFld1.iFld) * -19684) */ ;
        Test.OFld =
            Test.OFld.setOFld1(Test.OFld.OFld1.setiFld((int)(Test.OFld.OFld1.iFld-(int)(Cls1.lMeth(Test.OFld.OFld1.bFld,
            Test.dFld))))); /* Test.OFld.OFld1.iFld -= (int)Cls1.lMeth(Test.OFld.OFld1.bFld, Test.dFld) */ ;
        Test.dFld += -28871;
        i17 = 1;
        while (++i17 < 168) {
            for (i18 = 5; i18 < 149; ++i18) {
                try {
                    Test.OFld = Test.OFld.setOFld1(Test.OFld.OFld1.setiFld((int)((int)(i18 / -230)))); /*
                        Test.OFld.OFld1.iFld = (i18 / -230) */ ;
                    i19 = (-1735115865 / Test.OFld.OFld1.iArrFld[i17 + 1]);
                    i19 = (i18 % -3469);
                } catch (ArithmeticException a_e) {}
            }
            for (i20 = 149; i20 > 5; i20--) {
                i19 = 11372;
                Test.fFld += Cls.instanceCount;
                for (i22 = 1; i22 < 2; i22++) {
                    i19 += (int)Test.fFld;
                    Cls1.byFld = (byte)Test.sFld;
                    switch (((i17 % 4) * 5) + 84) {
                    case 88:
                        switch (((i17 % 1) * 5) + 27) {
                        case 28:
                            i19 -= -28;
                            break;
                        }
                        Cls.instanceCount <<= Cls.instanceCount;
                    case 91:
                        switch ((i22 % 2) + 121) {
                        case 121:
                            i23 += (int)Cls.instanceCount;
                            i19 = (int)Cls1.instanceCount;
                            Test.fFld += -5;
                            break;
                        case 122:
                            Test.OFld.OFld1.iArrFld[i17] *= (int)Test.fFld;
                            i21 += (i22 * i18);
                        default:
                            Test.OFld.OFld1.iArrFld[i17 - 1] >>= i19;
                        }
                        break;
                    case 104:
                        Test.OFld.OFld1.iArrFld[i17 - 1] &= Test.OFld.OFld1.iFld;
                        break;
                    case 96:
                        switch ((i17 % 5) + 34) {
                        case 34:
                            i23 <<= -192;
                            Test.fArrFld = FuzzerUtils.float1array(N, (float)1.763F);
                            Test.fArrFld[i20] = Cls.instanceCount;
                            i19 -= (int)101.810F;
                            break;
                        case 35:
                            Cls1.instanceCount <<= i18;
                            break;
                        case 36:
                            i19 %= (int)(i17 | 1);
                        case 37:
                            Test.OFld =
                                Test.OFld.setOFld1(Test.OFld.OFld1.setiFld((int)(Test.OFld.OFld1.iFld-(int)(244)))); /*
                                Test.OFld.OFld1.iFld -= 244 */ ;
                        case 38:
                            Cls1.instanceCount += (i22 * Test.OFld.OFld1.iFld);
                            break;
                        }
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("Test.OFld.OFld1.iFld Test.OFld.OFld1.bFld i17 = " + Test.OFld.OFld1.iFld + "," +
            (Test.OFld.OFld1.bFld ? 1 : 0) + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("Test.OFld.OFld1.iArrFld Test.OFld.OFld1.sArrFld Test.OFld.OFld1 = " +
            FuzzerUtils.checkSum(Test.OFld.OFld1.iArrFld) + "," + FuzzerUtils.checkSum(Test.OFld.OFld1.sArrFld) + "," +
            FuzzerUtils.checkSum(Test.OFld.OFld1));
        FuzzerUtils.out.println("Cls Cls1 = " + Cls.instanceCount + "," + Cls1.instanceCount);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.sFld Test.iArrFld1 Test.fArrFld = " + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld1) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.bArrFld Test.OFld Cls = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            FuzzerUtils.checkSum(Test.OFld) + "," + Cls.instanceCount);
        FuzzerUtils.out.println("Cls1 = " + Cls1.instanceCount);

        FuzzerUtils.out.println("iMeth1_check_sum: " + iMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
inline class Cls {

    public static final int N = 400;

public Cls setinstanceCount(long tmp) { Cls.instanceCount = tmp; return this; };
public Cls setiFld(int tmp) { return __WithField(iFld, tmp); };
public Cls setiFld2(int tmp) { return __WithField(iFld2, tmp); };
public Cls setbFld(boolean tmp) { return __WithField(bFld, tmp); };
public Cls setiArrFld(int tmp[]) { return __WithField(iArrFld, tmp); };
public Cls setsArrFld(short tmp[]) { return __WithField(sArrFld, tmp); };
    public static long instanceCount=46142L;
    public int iFld=-31770;
    public int iFld2=61589;
    public boolean bFld=true;
    public int iArrFld[]=new int[N];
    public short sArrFld[]=new short[N];

}
///////////////////////////////////////////////////////////////////////
inline class Cls1 {

    public static final int N = 400;

public Cls1 setinstanceCount(long tmp) { Cls1.instanceCount = tmp; return this; };
public Cls1 setbyFld(byte tmp) { Cls1.byFld = tmp; return this; };
public Cls1 setiFld1(int tmp) { return __WithField(iFld1, tmp); };
public Cls1 setiArrFld2(int tmp[][]) { return __WithField(iArrFld2, tmp); };
public Cls1 setsArrFld1(short tmp[]) { Cls1.sArrFld1 = tmp; return this; };
public Cls1 setOFld1(Cls tmp) { return __WithField(OFld1, tmp); };
public Cls1 setOFld2(Cls tmp) { return __WithField(OFld2, tmp); };
    public static long instanceCount=6133280654890500706L;
    public static byte byFld=-29;
    public int iFld1=51441;
    public int iArrFld2[][]=new int[N][N];
    public static short sArrFld1[]=new short[N];
    public Cls OFld1=new Cls();
    public Cls OFld2=new Cls();

    static {
        FuzzerUtils.init(Cls1.sArrFld1, (short)-14374);
    }

    public static long lMeth_check_sum = 0;

    public static long lMeth(boolean b, double d) {

        int i=-184, i1=6502, i2=-7437, i3=-191, i4=-12, i5=34866, i16=3;

        for (i = 7; i < 136; i += 2) {
            Cls1.instanceCount += (i * Cls1.byFld);
        }
        for (i2 = 3; i2 < 362; i2++) {
            i3 += (int)(((i3 + d) + (i + i)) - i3);
            for (i4 = i2; 5 > i4; ++i4) {
                Cls.instanceCount >>= (long)(Test.instanceCount = (long)((95.304F + i) - Test.iMeth()));
                if (i3 != 0) {
                }
                i16 = 1;
                while (++i16 < 1) {
                    i1 = 21282;
                    Cls1.sArrFld1[i16] = (short)i1;
                    i1 >>>= i4;
                    i5 -= Cls1.byFld;
                }
                i1 *= i3;
                Cls.instanceCount = i2;
                i3 += (i4 * i4);
            }
        }
        long meth_res = (b ? 1 : 0) + Double.doubleToLongBits(d) + i + i1 + i2 + i3 + i4 + i5 + i16;
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  Cls ->  Cls Cls1 Test mainTest iMeth1 iMeth lMeth
//DEBUG  Cls1 ->  Cls1 Test mainTest iMeth1 iMeth lMeth
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  iMeth ->  iMeth lMeth mainTest
//DEBUG  iMeth1 ->  iMeth1 iMeth lMeth mainTest
//DEBUG  Depth = 5
//DEBUG  Classes = 3
//DEBUG  static objects = {Cls1: [, Test.OFld], Cls: [], }
