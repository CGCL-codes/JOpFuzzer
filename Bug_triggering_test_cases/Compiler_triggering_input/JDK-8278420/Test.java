// Generated by Java* Fuzzer test generator (1.0.001). Mon Dec  6 18:33:30 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-1386257957L;
    public static int iFld=13640;
    public static short sFld=31946;
    public byte byFld=-22;
    public static int iFld1=-174;
    public int iArrFld[]=new int[N];
    public static int iArrFld1[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld1, 215);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l1) {

        long l2=-1783523852414899760L;

        l2 *= Test.iFld;
        vMeth1_check_sum += l1 + l2;
    }

    public static int iMeth(long l, int i4, double d) {

        int i5=3, i6=0, i7=-5, i8=-232, i9=-83;
        byte by1=90, byArr[]=new byte[N];
        float f1=-1.756F, f2=-114.117F;
        long lArr1[]=new long[N];
        short sArr[][]=new short[N][N];

        FuzzerUtils.init(byArr, (byte)42);
        FuzzerUtils.init(lArr1, 16L);
        FuzzerUtils.init(sArr, (short)-26158);

        for (i5 = 3; i5 < 125; i5++) {
            byArr[i5 - 1] >>= (byte)(-i6);
            if (((-(i5 * i4)) - ((Test.instanceCount - Test.sFld) - (i6++))) < Test.iArrFld1[i5 + 1]) {
                Test.iFld += (((i5 * i4) + i4) - Test.instanceCount);
            }
            vMeth1(-2610598473L);
            Test.instanceCount += (54142 + (i5 * i5));
            for (i7 = 1; i7 < 13; ++i7) {
                switch ((i5 % 7) + 32) {
                case 32:
                    lArr1[i7] = by1;
                    break;
                case 33:
                    sArr[i7 - 1][i7] -= (short)49949;
                    break;
                case 34:
                    Test.iFld += i8;
                    f1 += 12699L;
                    for (f2 = 1; f2 < 2; f2++) {
                        i9 >>= i4;
                        i6 += (int)f2;
                    }
                    break;
                case 35:
                    Test.iFld -= i9;
                    break;
                case 36:
                    i6 >>= (int)Test.instanceCount;
                    break;
                case 37:
                    i9 *= (int)Test.instanceCount;
                    break;
                case 38:
                    l <<= Test.instanceCount;
                default:
                    i4 += (int)l;
                }
            }
        }
        long meth_res = l + i4 + Double.doubleToLongBits(d) + i5 + i6 + i7 + i8 + by1 + Float.floatToIntBits(f1) +
            Float.floatToIntBits(f2) + i9 + FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr1) +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i2, int i3) {

        byte by=70;
        float f=124.135F, f3=1.79F;
        double d1=0.100935;
        int i10=31929, i11=-16505, i12=-57067, i13=-1, iArr[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr, -104);

        Test.iFld = (i3 += by);
        by = (byte)iArr[(i3 >>> 1) % N];
        f += (iMeth(Test.instanceCount, -2, d1) * f3);
        Test.instanceCount *= Test.iFld;
        for (i10 = 11; i10 < 301; i10++) {
            b = b;
            Test.instanceCount = i11;
            for (i12 = i10; i12 < 6; i12++) {
                Test.instanceCount = (long)d1;
                Test.instanceCount += (((i12 * i10) + Test.iFld) - f);
                iArr[i12 - 1] = (int)Test.instanceCount;
                f += Test.instanceCount;
                i2 = Test.iFld;
                i11 = -119;
                i3 -= by;
            }
        }
        vMeth_check_sum += i2 + i3 + by + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) +
            Float.floatToIntBits(f3) + i10 + i11 + (b ? 1 : 0) + i12 + i13 + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=24978, i1=158, i14=-52535, i15=-249, i16=-12, i17=6949, i18=-14, i19=-197, i20=1, i21=-9, i22=131;
        float f4=-96.488F;
        boolean b1=false;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 3297796682L);

        iArrFld[(Test.iFld >>> 1) % N] = (int)lArr[(12 >>> 1) % N];
        for (i = 15; i < 383; ++i) {
            Test.iFld -= i;
            vMeth(Test.iFld, i14);
            i14 = Test.iFld;
        }
        for (i15 = 171; i15 > 3; --i15) {
            switch (((2 >>> 1) % 8) + 113) {
            case 113:
                Test.instanceCount = byFld;
            case 114:
                for (i17 = 3; i17 < 149; ++i17) {
                    Test.iFld -= (int)Test.instanceCount;
                }
                i19 = 1;
                do {
                    for (i20 = 1; i20 > i15; i20 -= 3) {
                        i16 += i20;
                        i21 <<= (int)Test.instanceCount;
                        switch (((i19 % 2) * 5) + 37) {
                        case 43:
                            iArrFld[i19 - 1] += byFld;
                            lArr[i19] |= i16;
                            f4 = Test.instanceCount;
                            break;
                        case 38:
                            f4 += i19;
                            i1 = i19;
                        default:
                            i16 += -13;
                            i16 -= 143;
                            Test.sFld = (short)i;
                            i21 <<= Test.iFld1;
                        }
                        lArr[i19 + 1] -= i14;
                        Test.iArrFld1[i20] -= (int)Test.instanceCount;
                        if (b1) break;
                        f4 = -4;
                        i16 >>= i15;
                    }
                    Test.iFld1 = i16;
                } while (++i19 < 149);
                break;
            case 115:
                byFld = (byte)-227L;
            case 116:
                i1 = i21;
                break;
            case 117:
                i21 = i1;
                break;
            case 118:
                i22 = i;
                break;
            case 119:
                i16 &= i17;
                break;
            case 120:
                lArr[i15] = Test.instanceCount;
                break;
            default:
                f4 += Test.instanceCount;
            }
        }

        FuzzerUtils.out.println("i i1 i14 = " + i + "," + i1 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 f4 b1 = " + i21 + "," + Float.floatToIntBits(f4) + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i22 lArr = " + i22 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.sFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Test.sFld);
        FuzzerUtils.out.println("byFld Test.iFld1 iArrFld = " + byFld + "," + Test.iFld1 + "," +
            FuzzerUtils.checkSum(iArrFld));
        FuzzerUtils.out.println("Test.iArrFld1 = " + FuzzerUtils.checkSum(Test.iArrFld1));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
