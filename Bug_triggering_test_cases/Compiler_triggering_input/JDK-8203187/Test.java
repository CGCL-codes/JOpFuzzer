// Generated by Java* Fuzzer test generator (1.0.001). Tue Apr 10 01:35:14 2018
public class Test {

    public static final int N = 400;

    public static long instanceCount=2724391858L;
    public byte byFld=14;
    public static volatile double dArrFld[]=new double[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.dArrFld, 2.32918);
        FuzzerUtils.init(Test.lArrFld, 1260331205L);
    }

    public static long byMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i5=4, i6=4, iArr1[]=new int[N];
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr1, -23285);
        FuzzerUtils.init(bArr, true);

        for (i5 = 338; i5 > 18; i5 -= 3) {
            iArr1 = FuzzerUtils.int1array(N, (int)-10);
            i6 += (i5 * Test.instanceCount);
            i6 = i5;
            i6 >>= -16794;
            i6 *= i6;
        }
        for (double d2 : Test.dArrFld) {
            bArr = bArr;
        }
        vMeth1_check_sum += i5 + i6 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(double d1) {

        int i7=-8, i8=5, i9=151, i10=-11, iArr2[][]=new int[N][N];
        short s=7652;
        byte by=13;

        FuzzerUtils.init(iArr2, -180);

        vMeth1();
        iArr2[(i7 >>> 1) % N][(i7 >>> 1) % N] *= i7;
        i7 -= (int)159L;
        for (i8 = 388; i8 > 18; i8--) {
            i10 = 1;
            do {
                i9 >>>= i9;
                i9 -= 55221;
                s += (short)(i10 + i10);
                iArr2[i10] = iArr2[i8];
                if (i10 != 0) {
                    vMeth_check_sum += Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + s + by +
                        FuzzerUtils.checkSum(iArr2);
                    return;
                }
                i9 = i7;
                i7 -= (int)d1;
                Test.instanceCount -= Test.instanceCount;
                Test.instanceCount -= i9;
                by = by;
            } while (++i10 < 5);
        }
        vMeth_check_sum += Double.doubleToLongBits(d1) + i7 + i8 + i9 + i10 + s + by + FuzzerUtils.checkSum(iArr2);
    }

    public static byte byMeth() {

        double d3=-124.68813;
        float f1=-93.163F;
        short s1=25249;
        int i11=-4769, i12=163, i13=-719, i14=18800, i15=-37964;

        vMeth(d3);
        f1 = s1;
        i11 = i11;
        for (i12 = 9; i12 < 394; i12++) {
            i11 >>>= i12;
            i11 = (int)Test.instanceCount;
            i11 = (int)Test.instanceCount;
            i14 = 1;
            do {
                i11 += (((i14 * Test.instanceCount) + i11) - i13);
                i13 += (0 + (i14 * i14));
                i13 += (0 + (i14 * i14));
                i11 += (int)(12808L + (i14 * i14));
                s1 *= (short)d3;
                f1 += (((i14 * i14) + i12) - i15);
                i11 -= i12;
            } while (++i14 < 4);
        }
        long meth_res = Double.doubleToLongBits(d3) + Float.floatToIntBits(f1) + s1 + i11 + i12 + i13 + i14 + i15;
        byMeth_check_sum += meth_res;
        return (byte)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i=0, i1=0, i2=-17175, i3=46345, i4=9, i16=37028, i17=-185, i18=-109, i19=30820, i20=-18961, i21=3,
            iArr[]=new int[N];
        float f=38.922F;
        double d=-59.32843;
        long l=2347977434L;
        boolean b=false, bArr1[]=new boolean[N];

        FuzzerUtils.init(iArr, 162);
        FuzzerUtils.init(bArr1, false);

        for (i = 216; i > 7; --i) {
            for (i2 = 120; i2 > 1; i2--) {
                i1 = (int)(((i2 * -31.930F) - (-50 - (i1 + f))) + (i1 + (i2 * d)));
                for (l = 1; 2 > l; ++l) {
                    iArr[i2] = (int)(-(-(0 + (f + i1))));
                    i1 += (int)(l * l);
                    b = (((i4 + i4) - (7780 - i1)) != (i3++));
                    i4 += (int)l;
                    i1 += (int)(29403L + (l * l));
                }
                Test.instanceCount = byMeth();
                if (false) break;
                i4 -= (int)d;
                Test.instanceCount *= i1;
            }
            i4 *= i4;
            Test.lArrFld = Test.lArrFld;
            i4 += i1;
            i1 <<= -8;
        }
        for (i16 = 5; i16 < 275; ++i16) {
            i4 *= (int)l;
            i1 = i3;
            Test.instanceCount = l;
            byFld = (byte)f;
            for (i18 = 93; 2 < i18; i18--) {
                for (i20 = 1; i20 < 2; ++i20) {
                    Test.instanceCount = i3;
                    if (b) continue;
                    bArr1[i16 + 1] = b;
                    if (b) continue;
                    i21 = i17;
                    i4 += i3;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 f d = " + i3 + "," + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("l i4 b = " + l + "," + i4 + "," + (b ? 1 : 0));
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("iArr bArr1 = " + FuzzerUtils.checkSum(iArr) + "," + FuzzerUtils.checkSum(bArr1));

        FuzzerUtils.out.println("Test.instanceCount byFld Test.dArrFld = " + Test.instanceCount + "," + byFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("byMeth_check_sum: " + byMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  byMeth ->  byMeth mainTest
//DEBUG  vMeth ->  vMeth byMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth byMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
