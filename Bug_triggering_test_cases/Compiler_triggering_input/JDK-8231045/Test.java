// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep 13 17:30:57 2019
// srand = 317232552873288717471310125097544537771

public inline class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static short sFld=-13343;
    public long lFld=-8740607959686649480L;
    public float fFld2=46.977F;
    public double dFld1=0.106061;
    public int iArrFld1[]=new int[N];
    public static Cls2 OFld=new Cls2();
    public Test setinstanceCount(long value) { Test.instanceCount = value; return this; };
    public Test setsFld(short value) { Test.sFld = value; return this; };
    public Test setlFld(long value) { return __WithField(lFld, value); };
    public Test setfFld2(float value) { return __WithField(fFld2, value); };
    public Test setdFld1(double value) { return __WithField(dFld1, value); };
    public Test setiArrFld1(int value[]) { return __WithField(iArrFld1, value); };
    public Test setOFld(Cls2 value) { Test.OFld = value; return this; };

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i5, int i6) {

        int i7=6, i8=-15143, i9=-5;

        FuzzerUtils.init(Test.OFld.OFld1.iArrFld, -126);
        FuzzerUtils.init(Test.OFld.OFld1.lArrFld, 7045505574015153207L);

        Test.OFld =
            Test.OFld.setOFld1(Test.OFld.OFld1.setdFld((double)(Test.OFld.OFld1.dFld-(double)(Cls1.instanceCount))));
            /* Test.OFld.OFld1.dFld -= Cls1.instanceCount */ ;
        Cls1.instanceCount = Cls2.instanceCount;
        Test.instanceCount += Test.sFld;
        Test.OFld.OFld1.iArrFld[(i6 >>> 1) % N] |= (int)Test.instanceCount;
        Test.OFld = Test.OFld.setOFld1(Test.OFld.OFld1.setdFld((double)((double)i5))); /* Test.OFld.OFld1.dFld = i5 */ ;
        i7 = 1;
        while (++i7 < 379) {
            for (i8 = 1; i8 < 4; i8++) {
                Test.OFld.OFld1.iArrFld[i7 - 1] = (int)Test.OFld.OFld1.dFld;
                i5 *= i9;
                Test.OFld.OFld1.lArrFld[i8 + 1][i7 - 1] ^= -62744;
                i5 <<= i8;
                Test.OFld = Test.OFld.setfFld((float)((float)i8)); /* Test.OFld.fFld = i8 */ ;
                Test.OFld =
                    Test.OFld.setOFld1(Test.OFld.OFld1.setdFld((double)(Test.OFld.OFld1.dFld*(double)(Test.sFld)))); /*
                    Test.OFld.OFld1.dFld *= Test.sFld */ ;
                i5 >>= i9;
            }
            Test.sFld -= (short)Test.OFld.fFld;
        }
        long meth_res = i5 + i6 + Double.doubleToLongBits(Test.OFld.OFld1.dFld) + i7 + i8 + i9 +
            Float.floatToIntBits(Test.OFld.fFld) + FuzzerUtils.checkSum(Test.OFld.OFld1.iArrFld) +
            FuzzerUtils.checkSum(Test.OFld.OFld1.lArrFld) + FuzzerUtils.checkSum(Test.OFld.OFld1);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i3, int i4) {


        Test.instanceCount *= iMeth(i3, i3);
        vMeth_check_sum += i3 + i4;
    }

    public void mainTest(String[] strArr1) {

        int i=196, i13=-20068, i14=0, i15=-53513, i16=-41961;
        Cls O=new Cls();

        FuzzerUtils.init(O.fArrFld, 0.928F);
        FuzzerUtils.init(Cls.OFld2.lArrFld2, -1692159489589449794L);

        i = 1;
        do {
            O.fArrFld[i] = i;
            for (i13 = 144; 7 < i13; i13 -= 2) {
                Test.instanceCount -= i13;
                for (i15 = 3; i15 > 1; --i15) {
                    Test.instanceCount *= i15;
                    Test.sFld += (short)(i15 * i13);
                    switch ((i % 5) + 37) {
                    case 37:
                    case 38:
                        i14 = (int)-1.790F;
                        Cls.OFld2.lArrFld2[(i14 >>> 1) % N] = lFld;
                        i14 += i15;
                        switch (((i15 % 5) * 5) + 87) {
                        case 106:
                            i16 *= i;
                            break;
                        case 105:
                            Test.instanceCount &= -2518763743L;
                            break;
                        case 91:
                            switch ((i15 % 9) + 22) {
                            case 22:
                                setfFld2((float)(fFld2-(float)(i13))); /* fFld2 -= i13 */ ;
                            case 23:
                                iArrFld1[i + 1] -= (int)lFld;
                                i16 = (int)fFld2;
                                break;
                            case 24:
                                setfFld2((float)(fFld2+(float)((-47 + (i15 * i15))))); /* fFld2 += (-47 + (i15 * i15))
                                    */ ;
                                break;
                            case 25:
                                i16 |= (int)9061481773404195315L;
                                break;
                            case 26:
                                Cls1.instanceCount = 142;
                                break;
                            case 27:
                                Test.instanceCount *= O.byFld1;
                                setdFld1((double)((double)i16)); /* dFld1 = i16 */ ;
                            case 28:
                                i16 *= 104;
                                break;
                            case 29:
                                setiArrFld1(iArrFld1); /* iArrFld1 = iArrFld1 */ ;
                                i14 ^= i16;
                                switch ((((156 >>> 1) % 4) * 5) + 95) {
                                case 114:
                                    Test.sFld *= (short)i16;
                                    iArrFld1[i - 1] -= i14;
                                    break;
                                case 96:
                                    Test.instanceCount *= O.byFld1;
                                    break;
                                case 103:
                                    i14 += i15;
                                    break;
                                case 113:
                                    i16 *= i;
                                    break;
                                }
                                break;
                            case 30:
                            default:
                                Cls.OFld2.lArrFld2[i - 1] = -113;
                            }
                            break;
                        case 101:
                            i16 = (int)Cls.instanceCount;
                            break;
                        case 88:
                            setdFld1((double)(dFld1*(double)(i))); /* dFld1 *= i */ ;
                        }
                        break;
                    case 39:
                        setdFld1((double)(dFld1+(double)(i16))); /* dFld1 += i16 */ ;
                        break;
                    case 40:
                        Cls1.instanceCount <<= i14;
                        break;
                    case 41:
                        i14 += (i15 | i16);
                    }
                }
            }
        } while (++i < 174);

        FuzzerUtils.out.println("i i13 i14 = " + i + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 O.byFld1 = " + i15 + "," + i16 + "," + O.byFld1);
        FuzzerUtils.out.println("O.fArrFld Cls.OFld2.lArrFld2 O = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(O.fArrFld)) + "," + FuzzerUtils.checkSum(Cls.OFld2.lArrFld2) +
            "," + FuzzerUtils.checkSum(O));
        FuzzerUtils.out.println("Cls Cls1 Cls2 = " + Cls.instanceCount + "," + Cls1.instanceCount + "," +
            Cls2.instanceCount);

        FuzzerUtils.out.println("Test.instanceCount Test.sFld lFld = " + Test.instanceCount + "," + Test.sFld + "," +
            lFld);
        FuzzerUtils.out.println("fFld2 dFld1 iArrFld1 = " + Float.floatToIntBits(fFld2) + "," +
            Double.doubleToLongBits(dFld1) + "," + FuzzerUtils.checkSum(iArrFld1));
        FuzzerUtils.out.println("Test.OFld Cls Cls1 = " + FuzzerUtils.checkSum(Test.OFld) + "," + Cls.instanceCount +
            "," + Cls1.instanceCount);
        FuzzerUtils.out.println("Cls2 = " + Cls2.instanceCount);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
inline class Cls {

    public static final int N = 400;

    public static long instanceCount=-3L;
    public byte byFld=-57;
    public byte byFld1=77;
    public float fArrFld[]=new float[N];
    public static Cls1 OFld2=new Cls1();
    public Cls setinstanceCount(long value) { Cls.instanceCount = value; return this; };
    public Cls setbyFld(byte value) { return __WithField(byFld, value); };
    public Cls setbyFld1(byte value) { return __WithField(byFld1, value); };
    public Cls setfArrFld(float value[]) { return __WithField(fArrFld, value); };
    public Cls setOFld2(Cls1 value) { Cls.OFld2 = value; return this; };

    public static long Cls_check_sum = 0;

    public  Cls() {

        instanceCount++;
        int i1=-55145, i2=-13, i10=-11, i11=-37, i12=-13055, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -68);
        FuzzerUtils.init(Cls.OFld2.lArrFld1, 3762004047L);

        for (i1 = 8; i1 < 136; ++i1) {
            Test.vMeth(i2, i2);
            i2 *= -75;
            try {
                iArr[i1 + 1] = (-326673242 % i1);
                i2 = (i1 % i1);
                i2 = (135 % i1);
            } catch (ArithmeticException a_e) {}
            if (Test.OFld.bFld) {
                Cls2.instanceCount = i2;
            } else if (true) {
                i10 = 1;
                do {
                    try {
                        i2 = (i2 / i2);
                        iArr[i10 + 1] = (i2 % -16133);
                        i2 = (-45861 / i1);
                    } catch (ArithmeticException a_e) {}
                    i2 = (int)Test.instanceCount;
                    switch (((i1 % 7) * 5) + 99) {
                    case 114:
                        for (i11 = 1; i11 < 1; ++i11) {
                            switch (((i11 % 2) * 5) + 108) {
                            case 113:
                                i2 = i2;
                                i2 -= (int)Cls.instanceCount;
                                break;
                            case 115:
                            }
                            i12 += (i11 - i10);
                        }
                        break;
                    case 108:
                        Test.sFld &= (short)Cls.instanceCount;
                        break;
                    case 125:
                        i2 = -125;
                        break;
                    case 124:
                        Cls.OFld2.lArrFld1[i10 + 1] >>= i10;
                        break;
                    case 120:
                        Test.OFld = Test.OFld.setfFld1((float)(Test.OFld.fFld1+(float)(Cls2.instanceCount))); /*
                            Test.OFld.fFld1 += Cls2.instanceCount */ ;
                    case 115:
                        i2 = byFld;
                    case 105:
                        i12 += (i10 * i10);
                        break;
                    default:
                        if (Test.OFld.bFld) continue;
                    }
                } while (++i10 < 12);
            }
        }
        long meth_res = i1 + i2 + i10 + i11 + i12 + Float.floatToIntBits(Test.OFld.fFld1) + (Test.OFld.bFld ? 1 : 0) +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(Cls.OFld2.lArrFld1);
        Cls_check_sum += meth_res;
        return;
    }

}
///////////////////////////////////////////////////////////////////////
inline class Cls1 {

    public static final int N = 400;

    public static long instanceCount=1L;
    public double dFld=-2.101606;
    public int iArrFld[]=new int[N];
    public long lArrFld[][]=new long[N][N];
    public long lArrFld1[]=new long[N];
    public long lArrFld2[]=new long[N];
    public Cls1 setinstanceCount(long value) { Cls1.instanceCount = value; return this; };
    public Cls1 setdFld(double value) { return __WithField(dFld, value); };
    public Cls1 setiArrFld(int value[]) { return __WithField(iArrFld, value); };
    public Cls1 setlArrFld(long value[][]) { return __WithField(lArrFld, value); };
    public Cls1 setlArrFld1(long value[]) { return __WithField(lArrFld1, value); };
    public Cls1 setlArrFld2(long value[]) { return __WithField(lArrFld2, value); };

}
///////////////////////////////////////////////////////////////////////
inline class Cls2 {

    public static final int N = 400;

    public static long instanceCount=-4149981327L;
    public float fFld=-22.727F;
    public float fFld1=2.744F;
    public boolean bFld=false;
    public Cls1 OFld1=new Cls1();
    public Cls2 setinstanceCount(long value) { Cls2.instanceCount = value; return this; };
    public Cls2 setfFld(float value) { return __WithField(fFld, value); };
    public Cls2 setfFld1(float value) { return __WithField(fFld1, value); };
    public Cls2 setbFld(boolean value) { return __WithField(bFld, value); };
    public Cls2 setOFld1(Cls1 value) { return __WithField(OFld1, value); };

}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  Cls ->  Cls mainTest
//DEBUG  vMeth ->  vMeth Cls mainTest
//DEBUG  iMeth ->  iMeth vMeth Cls mainTest
//DEBUG  Cls1 ->  Cls1 Cls2 Test iMeth vMeth Cls mainTest
//DEBUG  Cls2 ->  Cls2 Test iMeth vMeth Cls mainTest
//DEBUG  Depth = 5
//DEBUG  Classes = 4
//DEBUG  static objects = {Cls2: [, Test.OFld], Cls1: [, Cls.OFld2], }
