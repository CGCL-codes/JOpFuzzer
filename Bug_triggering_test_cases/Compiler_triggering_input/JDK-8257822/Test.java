// Generated by Java* Fuzzer test generator (1.0.001). Sun Dec  6 22:06:07 2020
public class Test {

    public static final int N = 400;

    public static long instanceCount=-4L;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -53773);
        FuzzerUtils.init(Test.fArrFld, 0.640F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f, float f1, float f2) {

        int i15=183, i16=-17678, i17=-204, i18=5, iArr1[]=new int[N];
        float f3=1.333F;
        double d=120.63259, d1=18.64230, d2=1.46914;
        boolean b=true;

        FuzzerUtils.init(iArr1, 10);

        Test.instanceCount |= i15;
        for (i16 = 359; i16 > 8; i16 -= 3) {
            i17 = (int)Test.instanceCount;
            iArr1[i16 - 1] += (int)Test.instanceCount;
            i17 <<= i17;
            f3 += (-5013 + (i16 * i16));
            for (d = 1; d < 13; d++) {
                i17 = (int)35725L;
                d1 = 1;
                do {
                    i15 = i17;
                    d2 -= i17;
                    i18 = i18;
                    i15 = (int)Test.instanceCount;
                    i18 -= (int)f;
                    if (b) continue;
                } while (++d1 < 2);
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + i15 + i16 +
            i17 + Float.floatToIntBits(f3) + Double.doubleToLongBits(d) + i18 + Double.doubleToLongBits(d1) +
            Double.doubleToLongBits(d2) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i8, int i9, long l) {

        int i10=13, i11=-5, i12=-42074, i13=156, i14=-126, i19=4;
        float f4=-79.154F;
        double d3=-1.100754;
        short s1=3844;

        for (i10 = 13; i10 < 215; i10++) {
            i9 = i9;
            for (i12 = 8; i12 > 1; --i12) {
                i11 += (i12 - i9);
                i8 = i14;
                i14 += (((i12 * i8) + i8) - Test.instanceCount);
                i9 >>= (i14 >> i10);
                vMeth1(f4, f4, f4);
                i11 = i10;
                for (d3 = 1; 2 > d3; d3++) {
                    Test.iArrFld[i12] *= (int)l;
                    l -= (long)f4;
                    s1 += (short)(((d3 * i11) + i9) - l);
                }
                i11 -= (int)l;
                l += (i12 * i12);
            }
        }
        long meth_res = i8 + i9 + l + i10 + i11 + i12 + i13 + i14 + Float.floatToIntBits(f4) +
            Double.doubleToLongBits(d3) + i19 + s1;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth() {

        int i3=-14, i4=7, i5=235, i6=-239, i7=205, iArr[]=new int[N];
        short s=-18499;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -2724240795L);
        FuzzerUtils.init(iArr, -58104);

        for (i3 = 2; i3 < 343; i3++) {
            i5 = 1;
            while (++i5 < 5) {
                Test.instanceCount -= ((++i4) + lArr1[i5 + 1]);
                i4 *= iArr[i3];
                for (i6 = 1; 1 > i6; ++i6) {
                    float f5=2.693F;
                    s = (short)Test.instanceCount;
                    i4 = ((iMeth(i7, i3, Test.instanceCount) * -85) + i4);
                    i4 += (((i6 * s) + i3) - f5);
                    i7 += i6;
                    Test.instanceCount <<= Test.instanceCount;
                    i7 = i5;
                    i4 += (i6 - Test.instanceCount);
                    i7 += (((i6 * i7) + i4) - i4);
                }
                i7 += (((i5 * i3) + s) - i4);
                i4 += (1 + (i5 * i5));
            }
        }
        vMeth_check_sum += i3 + i4 + i5 + i6 + i7 + s + FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr);
    }

    public void mainTest(String[] strArr1) {

        int i=-49, i1=45614, i2=42493, i20=199, i21=0, i22=-10342, i23=-13, i24=-240, i25=6237, i26=11, i27=-114;
        float f6=100.65F;
        double d4=2.9260;
        boolean b1=true;
        short s2=-12408;
        long l1=-64169L, lArr[]=new long[N];
        byte by=68;

        FuzzerUtils.init(lArr, -7782821511668908274L);

        i = 1;
        while ((i += 2) < 175) {
            Test.instanceCount *= ((Test.instanceCount << (Test.instanceCount + 6468)) + (i1--));
            i2 = 1;
            do {
                lArr[i2 + 1] = (i1--);
                vMeth();
                i1 = i;
            } while (++i2 < 288);
            Test.fArrFld[i] *= i1;
            Test.iArrFld[i - 1] <<= i;
            Test.instanceCount = (long)f6;
            i1 -= (int)Test.instanceCount;
        }
        for (i20 = 9; i20 < 284; i20 += 2) {
            for (i22 = 3; 183 > i22; i22++) {
                try {
                    i23 = (235 / i);
                    Test.iArrFld[i22 - 1] = (-2112837076 / i1);
                    Test.iArrFld[i20] = (i20 / -64048);
                } catch (ArithmeticException a_e) {}
                d4 = Test.instanceCount;
                for (i24 = 1; i24 < 2; i24++) {
                    i21 |= i21;
                    try {
                        i1 = (-65229 % i21);
                        i23 = (Test.iArrFld[i22] % i2);
                        i23 = (i / 8);
                    } catch (ArithmeticException a_e) {}
                    b1 = b1;
                    s2 >>= (short)i22;
                    l1 = -33510;
                    try {
                        i21 = (-38077 / i21);
                        i23 = (i21 % i2);
                        i25 = (65 / i25);
                    } catch (ArithmeticException a_e) {}
                    i21 = i;
                    i21 = (int)4L;
                    by = (byte)i24;
                    i23 += i24;
                }
                for (i26 = 1; 2 > i26; ++i26) {
                    i27 >>= i27;
                    Test.instanceCount = i22;
                    i25 += i26;
                    i1 = (int)65300L;
                }
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("f6 i20 i21 = " + Float.floatToIntBits(f6) + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 d4 = " + i22 + "," + i23 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i24 i25 b1 = " + i24 + "," + i25 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("s2 l1 by = " + s2 + "," + l1 + "," + by);
        FuzzerUtils.out.println("i26 i27 lArr = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iArrFld Test.fArrFld = " + Test.instanceCount + "," +
            FuzzerUtils.checkSum(Test.iArrFld) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
