// Generated by Java* Fuzzer test generator (1.0.001). Sun Aug 29 13:27:41 2021
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=148L;
    public static int iFld1=-12;
    public static boolean bFld=true;
    public float fFld=99.692F;
    public int iFld2=-49762;
    public int iFld3=81;
    public double dFld=1.74652;
    public static short sFld=6522;
    public static int iFld4=158;
    public static volatile float fArrFld[]=new float[N];
    public long lArrFld[][]=new long[N][N];

    static {
        FuzzerUtils.init(Test.fArrFld, -1.589F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        int i3=14137, i4=52, i5=151, i6=42460, iArr[]=new int[N];
        short s=-1085;
        byte by1=-117;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr, 47472);
        FuzzerUtils.init(dArr, 20.123230);

        for (float f : Test.fArrFld) {
            iArr[(Test.iFld1 >>> 1) % N] = 56;
            i3 = 1;
            while (++i3 < 4) {
                Test.iFld1 = -6;
                if (Test.bFld) {
                    for (i4 = 1; i4 < 1; i4 += 3) {
                        s += (short)i4;
                        Test.fArrFld[i3 + 1] *= i3;
                        i5 <<= Test.iFld1;
                        i5 += (((i4 * Test.iFld1) + by1) - i3);
                        Test.instanceCount >>= -200L;
                    }
                    dArr[i3 + 1] *= Test.iFld1;
                    i6 = 1;
                    do {
                        iArr[i3 + 1] %= (int)(Test.iFld1 | 1);
                        Test.iFld1 = i6;
                    } while (++i6 < 1);
                    vMeth2_check_sum += i3 + i4 + i5 + s + by1 + i6 + FuzzerUtils.checkSum(iArr) +
                        Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                    return;
                }
            }
        }
        vMeth2_check_sum += i3 + i4 + i5 + s + by1 + i6 + FuzzerUtils.checkSum(iArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth1(long l, long l1, int i2) {


        vMeth2();
        vMeth1_check_sum += l + l1 + i2;
    }

    public void vMeth() {

        int i=1, i1=-35886, i7=36566, i8=-4, i9=-61875, i10=-5506, iArr1[]=new int[N];
        double d=0.28388;

        FuzzerUtils.init(iArr1, 124);

        Test.iFld1 += Math.min(Test.iFld1, Test.iFld1);
        for (i = 1; i < 185; i++) {
            vMeth1(Test.instanceCount, Test.instanceCount, i1);
            Test.iFld1 = i;
            if (false) {
                switch (((i % 5) * 5) + 16) {
                case 21:
                    for (i7 = 9; 1 < i7; --i7) {
                        for (i9 = 1; i9 < 2; ++i9) {
                            fFld += (-10 + (i9 * i9));
                            fFld = fFld;
                            Test.iFld1 = i1;
                            Test.instanceCount ^= i1;
                            fFld += (((i9 * Test.iFld1) + i7) - i);
                            iArr1[i9] += i7;
                            Test.instanceCount += (((i9 * Test.instanceCount) + i7) - i10);
                        }
                    }
                    break;
                case 32:
                    d *= i7;
                    break;
                case 29:
                    i10 += i;
                    break;
                case 35:
                    iFld2 >>>= 41;
                    break;
                case 31:
                    iArr1[i - 1] = Test.iFld1;
                    break;
                }
            } else if (Test.bFld) {
                Test.instanceCount += (i * i);
            } else {
                Test.instanceCount += (i - i10);
            }
        }
        vMeth_check_sum += i + i1 + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr3) {

        int i12=-48509, i13=60, i14=-97, i15=-12780, i16=118, i17=56960, i18=-12, i19=-183, i20=31936, i21=15108,
            i22=-3, i23=8, iArr2[]=new int[N];
        long l2=2865223363090453329L;
        byte by2=117;
        boolean bArr[]=new boolean[N];

        FuzzerUtils.init(iArr2, -60153);
        FuzzerUtils.init(bArr, false);

        Test.iFld1 += (Test.iFld1--);
        vMeth();
        iFld2 += (int)70.308F;
        for (i12 = 12; i12 < 369; i12 += 2) {
            Test.iFld1 = i12;
            for (i14 = 141; i14 > 3; i14 -= 2) {
                i13 += i15;
                i15 += (((i14 * Test.instanceCount) + Test.instanceCount) - Test.iFld1);
                Test.instanceCount = i14;
                for (i16 = 3; i16 > 1; --i16) {
                    i15 *= i13;
                    if (Test.bFld) {
                        i13 = i16;
                    } else if (Test.bFld) {
                        iArr2[i16] = iFld3;
                        iFld3 -= i14;
                        iFld3 += iFld3;
                    }
                    iArr2[i14 + 1] -= (int)fFld;
                    iArr2[i14 + 1] <<= iFld3;
                }
                dFld = i12;
            }
            for (l2 = i12; l2 < 141; ++l2) {
                switch ((i12 * 5) + 21) {
                case 214:
                    for (i19 = i12; i19 < 1; i19++) {
                        i17 = i20;
                        iFld2 += (i19 | Test.sFld);
                        iArr2[i12] ^= i15;
                    }
                    Test.instanceCount = 60976;
                    for (i21 = 1; i21 < 1; i21++) {
                        Test.instanceCount += (((i21 * Test.instanceCount) + i18) - i12);
                    }
                    break;
                case 240:
                    lArrFld[(int)(l2 - 1)][(i19 >>> 1) % N] += (long)fFld;
                    fFld = Test.sFld;
                case 301:
                    i13 = i22;
                    break;
                case 318:
                    iArr2[(int)(l2 + 1)] <<= i22;
                    break;
                case 27:
                    if (Test.bFld) break;
                case 263:
                    Test.instanceCount -= i20;
                case 191:
                    Test.instanceCount = iFld2;
                    break;
                case 246:
                    i20 <<= by2;
                    break;
                case 75:
                    Test.instanceCount = Test.instanceCount;
                    break;
                case 113:
                    Test.instanceCount += i13;
                    break;
                case 340:
                    fFld = l2;
                    break;
                case 150:
                    Test.instanceCount = i21;
                    break;
                case 89:
                    i20 = Test.sFld;
                    break;
                case 125:
                    iFld2 += (int)l2;
                case 350:
                    fFld += l2;
                    break;
                case 56:
                    iArr2[(int)(l2)] &= i19;
                    break;
                case 266:
                    iFld3 = (int)dFld;
                    break;
                case 333:
                    Test.instanceCount = l2;
                    break;
                case 339:
                    iArr2 = iArr2;
                    break;
                case 60:
                    i17 -= i17;
                    break;
                case 287:
                    iFld2 = (int)l2;
                    break;
                case 48:
                    i13 = 3810;
                case 114:
                    Test.bFld = true;
                    break;
                case 39:
                    i17 -= i21;
                    break;
                case 95:
                    i13 = i22;
                case 282:
                    dFld = Test.iFld1;
                case 78:
                    Test.bFld = Test.bFld;
                    break;
                case 97:
                    iFld3 >>= (int)Test.instanceCount;
                    break;
                case 279:
                    i22 += (int)l2;
                    break;
                case 256:
                    fFld += (l2 + i16);
                    break;
                case 199:
                    Test.bFld = false;
                    break;
                case 109:
                    i15 ^= i12;
                    break;
                case 162:
                    Test.instanceCount = i12;
                    break;
                case 224:
                    fFld = Test.iFld1;
                case 229:
                    try {
                        iFld3 = (i12 / i22);
                        iFld2 = (i21 / 35836);
                        i13 = (iArr2[(int)(l2 + 1)] / -197);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 160:
                    iArr2[i12] += (int)fFld;
                    break;
                case 121:
                    i18 -= (int)fFld;
                    break;
                case 313:
                    Test.iFld1 *= i15;
                case 244:
                    i13 += (int)l2;
                    break;
                case 346:
                    Test.sFld *= (short)i12;
                    break;
                case 358:
                    Test.fArrFld[i12 + 1] = Test.sFld;
                    break;
                case 45:
                    Test.fArrFld[(int)(l2)] -= by2;
                    break;
                case 370:
                    iFld3 = i22;
                    break;
                case 101:
                    i20 += (int)(((l2 * Test.instanceCount) + i17) - i16);
                    break;
                case 314:
                    Test.iFld4 >>= (int)l2;
                    break;
                case 135:
                    i17 *= iFld2;
                    break;
                case 180:
                    Test.iFld1 <<= (int)l2;
                    break;
                case 130:
                    Test.iFld1 += i22;
                case 172:
                    i15 += (int)(l2 * i20);
                    break;
                case 149:
                case 228:
                    Test.instanceCount = iFld2;
                    break;
                case 77:
                    iFld2 >>= i14;
                case 136:
                    Test.instanceCount += l2;
                case 323:
                    iArr2[(int)(l2)] = (int)l2;
                    break;
                case 87:
                    iArr2[(int)(l2)] = i23;
                    break;
                case 42:
                    iFld3 += (int)l2;
                    break;
                case 311:
                    i17 = (int)l2;
                case 234:
                    iFld3 >>>= Test.iFld1;
                    break;
                case 302:
                    Test.instanceCount = i13;
                case 235:
                    i17 *= (int)l2;
                    break;
                case 187:
                    i20 = (int)Test.instanceCount;
                case 242:
                    if (false) break;
                    break;
                case 295:
                    i22 += (int)(-52.483F + (l2 * l2));
                    break;
                case 29:
                    i20 ^= i14;
                    break;
                case 53:
                    iArr2[i12 + 1] += iFld3;
                case 174:
                    Test.instanceCount = i17;
                case 32:
                    Test.instanceCount += (long)fFld;
                    break;
                case 319:
                    Test.instanceCount += (l2 ^ (long)fFld);
                    break;
                case 106:
                    iArr2[(int)(l2 - 1)] = by2;
                    break;
                case 173:
                    by2 += (byte)(((l2 * i23) + Test.instanceCount) - by2);
                    break;
                default:
                    bArr[i12 + 1] = Test.bFld;
                }
            }
        }

        FuzzerUtils.out.println("i12 i13 i14 = " + i12 + "," + i13 + "," + i14);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("l2 i18 i19 = " + l2 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("by2 i23 iArr2 = " + by2 + "," + i23 + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("bArr = " + FuzzerUtils.checkSum(bArr));

        FuzzerUtils.out.println("Test.instanceCount Test.iFld1 Test.bFld = " + Test.instanceCount + "," + Test.iFld1 +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("fFld iFld2 iFld3 = " + Float.floatToIntBits(fFld) + "," + iFld2 + "," + iFld3);
        FuzzerUtils.out.println("dFld Test.sFld Test.iFld4 = " + Double.doubleToLongBits(dFld) + "," + Test.sFld + ","
            + Test.iFld4);
        FuzzerUtils.out.println("Test.fArrFld lArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld))
            + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr2) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr2);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
