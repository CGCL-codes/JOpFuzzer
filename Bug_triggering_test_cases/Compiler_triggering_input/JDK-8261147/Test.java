// Generated by Java* Fuzzer test generator (1.0.001). Fri Jan 29 18:00:43 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-20644L;
    public static byte byFld=102;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 98.870F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(int i6, int i7, long l) {

        int i8=-30926, i9=-33628;
        float f1=80.627F, f2=-1.460F;
        long l1=4113547517L;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)20194);

        for (i8 = 7; i8 < 280; ++i8) {
            f1 -= i8;
            f2 = 1;
            while ((f2 += 2) < 6) {
                f1 += 7;
                l += i7;
                i9 = i6;
                l += l1;
                i6 += (int)(-1773L + (f2 * f2));
                switch (((i7 >>> 1) % 1) + 69) {
                case 69:
                    switch (((i8 % 1) * 5) + 73) {
                    case 77:
                        i9 = i7;
                        i9 += i9;
                        break;
                    }
                    i6 += (int)f1;
                }
            }
            i6 <<= 9;
            sArr[i8 + 1] += (short)i7;
        }
        long meth_res = i6 + i7 + l + i8 + i9 + Float.floatToIntBits(f1) + Float.floatToIntBits(f2) + l1 +
            FuzzerUtils.checkSum(sArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(double d, int i3, int i4) {

        int i5=-60744, i10=-48907, i11=-253, i12=-27752, i13=-6, i14=62, iArr1[][]=new int[N][N];
        float f3=-74.786F;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -18879);
        FuzzerUtils.init(lArr, 3940584366L);

        i5 = iArr1[(i3 >>> 1) % N][(i3 >>> 1) % N];
        iMeth(i3, i5, Test.instanceCount);
        for (i10 = 8; i10 < 282; ++i10) {
            i4 <<= i5;
            i12 = 1;
            do {
                lArr[i12 + 1] += Test.instanceCount;
                f3 *= i12;
                i4 >>= 42;
                i4 *= i5;
                i4 += Test.byFld;
                i3 = i3;
            } while (++i12 < 6);
            Test.fArrFld[i10 + 1] = i3;
            for (i13 = 1; 6 > i13; ++i13) {
                f3 *= 26558;
                Test.instanceCount += (-2335976459L + (i13 * i13));
            }
        }
        vMeth1_check_sum += Double.doubleToLongBits(d) + i3 + i4 + i5 + i10 + i11 + i12 + Float.floatToIntBits(f3) +
            i13 + i14 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr);
    }

    public void vMeth(int i, int i1) {

        int i2=4, i15=235, i16=-243, i17=-203, i18=-26812, iArr[]=new int[N];
        float f=-2.840F;
        double d1=23.8248;
        boolean b=true, bArr[]=new boolean[N];

        FuzzerUtils.init(iArr, 26253);
        FuzzerUtils.init(bArr, false);

        iArr[(i2 >>> 1) % N] |= (int)(((-13 - iArr[(i >>> 1) % N]) - f) * i2);
        vMeth1(d1, i1, i1);
        for (i15 = 3; 202 > i15; i15++) {
            i += (((i15 * i16) + i) - Test.instanceCount);
            Test.instanceCount >>= 7;
            i1 = Test.byFld;
        }
        i = (int)Test.instanceCount;
        i17 = 1;
        while (++i17 < 306) {
            i18 = 1;
            do {
                i16 = i2;
                Test.byFld -= (byte)d1;
                i2 = i16;
                d1 = 0;
                bArr[i18] = b;
                i *= i2;
            } while (++i18 < 5);
        }
        vMeth_check_sum += i + i1 + i2 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i15 + i16 + i17 + i18
            + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr);
    }

    public void mainTest(String[] strArr1) {

        int i19=-9, i20=-5, i21=-33047, i22=21048, i23=200, i24=-81, i25=13, i26=49119, i27=3, iArr2[]=new int[N];
        float f4=1.360F, f5=-79.739F;
        double d2=-1.103585;
        short s1=-14769, sArr1[]=new short[N];

        FuzzerUtils.init(sArr1, (short)411);
        FuzzerUtils.init(iArr2, 8);

        vMeth(i19, i19);
        i19 |= (int)Test.instanceCount;
        Test.instanceCount = i19;
        i19 |= i19;
        for (short s : sArr1) {
            i20 = 1;
            while (++i20 < 63) {
                try {
                    iArr2[i20 - 1] = (i19 % 17645);
                    i19 = (i20 / i20);
                    i19 = (i19 % iArr2[i20 + 1]);
                } catch (ArithmeticException a_e) {}
                iArr2[i20 - 1] *= 184;
                Test.instanceCount -= i20;
                for (i21 = 1; 1 > i21; ++i21) {
                    i22 = i21;
                    i19 += i21;
                }
                for (i23 = i20; i23 < 1; i23++) {
                    i22 += (51888 + (i23 * i23));
                    i22 *= (int)Test.instanceCount;
                    Test.instanceCount -= i19;
                    i22 += (i23 + Test.instanceCount);
                    i22 = (int)f4;
                }
                Test.instanceCount = i21;
                d2 -= -36.99753;
                i24 = (int)1869416112L;
                d2 = Test.instanceCount;
            }
        }
        for (f5 = 1; 197 > f5; f5++) {
            iArr2[(int)(f5)] &= (int)Test.instanceCount;
            for (i26 = 7; i26 < 128; i26 += 3) {
                Test.instanceCount <<= i24;
                i27 += i23;
                f4 = -39528;
                i22 += s1;
            }
            i27 -= i22;
        }

        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("f4 d2 f5 = " + Float.floatToIntBits(f4) + "," + Double.doubleToLongBits(d2) + "," +
            Float.floatToIntBits(f5));
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("s1 sArr1 iArr2 = " + s1 + "," + FuzzerUtils.checkSum(sArr1) + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.fArrFld = " + Test.instanceCount + "," + Test.byFld
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
