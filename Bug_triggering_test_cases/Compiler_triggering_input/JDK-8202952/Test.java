// Generated by Java* Fuzzer test generator (1.0.001). Wed May  9 04:14:29 2018
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=34847L;
    public boolean bFld=true;
    public static short sFld=23369;
    public static int iFld=-50901;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 13);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(double d1, int i6, int i7) {

        int i8=9, i9=35686, i10=171, i11=-13141, i12=25172, iArr[]=new int[N];
        float f=43.233F;

        FuzzerUtils.init(iArr, 52);

        iArr[(-195 >>> 1) % N] ^= i6;
        for (i8 = 2; i8 < 223; ++i8) {
            if (i6 != 0) {
                vMeth1_check_sum += Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) +
                    i11 + i12 + FuzzerUtils.checkSum(iArr);
                return;
            }
            i10 = 1;
            do {
                Test.instanceCount *= i8;
                i7 -= -54798;
                d1 -= f;
                iArr[i10 - 1] -= i8;
                i6 = (int)3842815144L;
                i6 += (int)31.545F;
                f = i8;
            } while (++i10 < 7);
            for (i11 = 1; i11 < 7; ++i11) {
                iArr[i11] &= i7;
                i9 = i8;
            }
        }
        Test.sFld = (short)i11;
        vMeth1_check_sum += Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + i10 + Float.floatToIntBits(f) + i11 + i12
            + FuzzerUtils.checkSum(iArr);
    }

    public static int iMeth(int i5, long l1) {

        double d2=124.87437;
        int i13=195, i14=-175, i15=-179, i17=228, i18=93;

        vMeth1(d2, i5, i5);
        for (i13 = 8; i13 < 214; ++i13) {
            i14 <<= -7120;
            i15 = 8;
            do {
                int i16=-8;
                i5 -= i13;
                i14 -= (int)Test.instanceCount;
                i14 = i15;
                Test.iArrFld[i15] += (int)111.851F;
                if (i16 != 0) {
                }
                i5 = (int)d2;
                for (i17 = 1; i17 < 1; ++i17) {
                    d2 = l1;
                    l1 = i17;
                    i5 = -7589;
                    d2 = i18;
                }
            } while (--i15 > 0);
        }
        long meth_res = i5 + l1 + Double.doubleToLongBits(d2) + i13 + i14 + i15 + i17 + i18;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i4, double d) {

        int i19=-21, i20=-47952, i21=40, i22=-254, i23=-223;
        float f1=2.76F;
        byte by=-94;

        Test.sFld = (short)iMeth(i4, Test.instanceCount);
        i4 |= -104;
        Test.iArrFld[(i4 >>> 1) % N] >>= i4;
        Test.iArrFld = Test.iArrFld;
        for (i19 = 20; i19 < 372; ++i19) {
            i21 = 1;
            while ((i21 += 2) < 5) {
                f1 -= 13;
                for (i22 = 1; i22 < 3; i22++) {
                    i4 += (int)Test.instanceCount;
                    if (i22 != 0) {
                        vMeth_check_sum += i4 + Double.doubleToLongBits(d) + i19 + i20 + i21 + Float.floatToIntBits(f1)
                            + i22 + i23 + by;
                        return;
                    }
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-27202);
                    i20 >>= i21;
                    Test.instanceCount -= i21;
                    i20 >>= by;
                }
                i4 += (-12 + (i21 * i21));
            }
        }
        vMeth_check_sum += i4 + Double.doubleToLongBits(d) + i19 + i20 + i21 + Float.floatToIntBits(f1) + i22 + i23 +
            by;
    }

    public void mainTest(String[] strArr1) {

        int i=12, i1=-27001, i2=1, i3=-54967, i24=65, i25=109, i26=-4151, i27=56431, i28=14849, i29=34;
        long l=52793L;
        double d3=0.130859;
        float f2=-2.994F;

        i *= (int)(Test.instanceCount--);
        for (i1 = 7; i1 < 384; ++i1) {
            for (l = 2; l < 67; l++) {
                bFld = ((Test.instanceCount--) == Test.instanceCount);
                vMeth(i2, d3);
                i -= i1;
                Test.sFld -= (short)i3;
                for (i24 = 1; 2 > i24; ++i24) {
                    Test.iArrFld = FuzzerUtils.int1array(N, (int)-12313);
                    Test.iArrFld = Test.iArrFld;
                }
                i2 = i2;
                if (false) {
                    for (i26 = (int)(l); 2 > i26; ++i26) {
                        i += i26;
                        Test.iFld <<= i24;
                        i += i24;
                        Test.iArrFld[i26 + 1] += (int)Test.instanceCount;
                    }
                    if (bFld) continue;
                    i3 = i26;
                } else {
                    Test.iFld += (int)(l + i3);
                    Test.instanceCount *= Test.instanceCount;
                }
                i27 = (int)l;
            }
            f2 = l;
            try {
                i25 = (i3 % i26);
                Test.iFld = (i25 / -176);
                i2 = (-229 / i24);
            } catch (ArithmeticException a_e) {}
            i += (i1 * i1);
            for (i28 = 4; i28 < 67; i28++) {
                Test.iFld -= i2;
                i25 -= i24;
                i27 -= (int)d3;
                Test.iFld = (int)l;
            }
        }

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("l i3 d3 = " + l + "," + i3 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 f2 i28 = " + i27 + "," + Float.floatToIntBits(f2) + "," + i28);
        FuzzerUtils.out.println("i29 = " + i29);

        FuzzerUtils.out.println("Test.instanceCount bFld Test.sFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) +
            "," + Test.sFld);
        FuzzerUtils.out.println("Test.iFld Test.iArrFld = " + Test.iFld + "," + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
