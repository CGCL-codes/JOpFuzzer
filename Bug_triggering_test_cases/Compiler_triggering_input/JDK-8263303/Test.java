// Generated by Java* Fuzzer test generator (1.0.001). Sun May 30 02:18:34 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-48619L;
    public double dFld=2.98893;
    public static double dFld1=0.107539;
    public static byte byFld=-53;
    public static short sFld=-28659;
    public static volatile int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -166);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(short s, long l1, int i7) {

        int i8=124, i9=61, i10=-12, i11=-3, i12=39581, i13=-105;
        float f1=0.317F;
        boolean b=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -60L);

        i8 = 1;
        while (++i8 < 216) {
            f1 -= -2061577773L;
            for (i9 = 1; 7 > i9; ++i9) {
                switch (((i9 % 2) * 5) + 110) {
                case 119:
                    i7 += (int)(-53.53F + (i9 * i9));
                    i10 = i8;
                    break;
                case 117:
                    Test.instanceCount >>>= i7;
                    i10 <<= 22280;
                    break;
                default:
                    Test.dFld1 = i9;
                    i7 = (int)Test.instanceCount;
                    i11 &= Test.byFld;
                    for (i12 = 1; 2 > i12; i12++) {
                        lArr1 = lArr1;
                        f1 += i12;
                        b = b;
                    }
                }
            }
        }
        vMeth1_check_sum += s + l1 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + i11 + i12 + i13 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth(byte by, long l, byte by1) {

        int i6=-4, i14=-254;

        i6 <<= i6;
        vMeth1(Test.sFld, l, i6);
        i6 -= (int)Test.dFld1;
        i14 = 1;
        while (++i14 < 303) {
            Test.iArrFld[i14 + 1] <<= i6;
        }
        vMeth_check_sum += by + l + by1 + i6 + i14;
    }

    public static int iMeth(int i5) {


        i5 = i5;
        vMeth(Test.byFld, Test.instanceCount, Test.byFld);
        long meth_res = i5;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=-2.73F;
        int i=128, i1=14, i2=8, i3=-151, i4=-4, i15=226, i16=-188, i17=-111;
        long lArr[][]=new long[N][N];

        FuzzerUtils.init(lArr, -26637L);

        f = (float)((++dFld) * Math.abs(i));
        for (i1 = 9; i1 < 277; i1++) {
            Test.iArrFld[i1 + 1] = (int)f;
            lArr[i1 - 1][i1 - 1] = (--i2);
            i2 += (int)(-2.919F + (i1 * i1));
            for (i3 = 3; i3 < 94; i3++) {
                dFld *= ((-Test.iArrFld[i3]) - i4);
                Test.iArrFld[i3 + 1] <<= iMeth(i1);
                i += i3;
                i2 >>= i4;
                lArr = lArr;
                f = i4;
                i2 += (((i3 * i) + i2) - Test.instanceCount);
                i4 = i3;
                i = (int)f;
            }
            for (i15 = 94; i15 > 4; i15 -= 3) {
                i17 = 4;
                do {
                    f -= i1;
                    Test.instanceCount >>= -29750;
                    i /= 81;
                    i4 += (int)(-1.679F + (i17 * i17));
                    switch (((i17 % 3) * 5) + 107) {
                    case 108:
                        i >>= -12;
                        i = i2;
                        i += (int)Test.instanceCount;
                        i4 = (int)dFld;
                    case 118:
                        i2 += i4;
                        Test.instanceCount >>>= Test.instanceCount;
                        break;
                    case 112:
                        dFld = i2;
                        i16 += (((i17 * i16) + i16) - f);
                        break;
                    }
                } while (--i17 > 0);
            }
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("i2 i3 i4 = " + i2 + "," + i3 + "," + i4);
        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("lArr = " + FuzzerUtils.checkSum(lArr));

        FuzzerUtils.out.println("Test.instanceCount dFld Test.dFld1 = " + Test.instanceCount + "," +
            Double.doubleToLongBits(dFld) + "," + Double.doubleToLongBits(Test.dFld1));
        FuzzerUtils.out.println("Test.byFld Test.sFld Test.iArrFld = " + Test.byFld + "," + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
