// Generated by Java* Fuzzer test generator (1.0.001). Sun Feb  9 01:42:19 2020
public class Test {

    public static final int N = 400;

    public static long instanceCount=3885398167L;
    public static long lFld=11L;
    public int iFld=16857;
    public float fFld=88.371F;
    public short sFld=26177;
    public static double dArrFld[]=new double[N];
    public static volatile long lArrFld[]=new long[N];
    public static int iArrFld[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, 1.23626);
        FuzzerUtils.init(Test.lArrFld, -11618L);
        FuzzerUtils.init(Test.iArrFld, -242);
    }

    public static long vSmallMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(float f) {

        int i4=20407, i5=2, i6=-2, i7=239, i8=81, i9=45030, i10=9, i11=0, iArr1[]=new int[N];
        double d1=0.106257;
        byte by=120, byArr[]=new byte[N];
        float f1=2.975F, fArr[]=new float[N];
        boolean b=false, bArr[][]=new boolean[N][N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr1, -138);
        FuzzerUtils.init(fArr, 0.169F);
        FuzzerUtils.init(byArr, (byte)-31);
        FuzzerUtils.init(lArr, -153L);
        FuzzerUtils.init(bArr, false);

        for (i4 = 12; i4 < 365; i4++) {
            for (i6 = 5; i6 > 1; i6--) {
                short s=9555;
                i7 += (i6 ^ i7);
                switch ((i6 * 5) + 11) {
                case 357:
                    i5 = i6;
                    i5 = (int)Test.lFld;
                    d1 = i6;
                    i7 = (int)f;
                    break;
                case 288:
                    i7 = s;
                    Test.dArrFld[i6] += i6;
                    for (i8 = i4; i8 < 2; i8++) {
                        i5 += (int)-118.604F;
                        i9 += i9;
                        i7 += (i8 ^ i4);
                        i5 = i6;
                    }
                    break;
                case 58:
                    iArr1[i4] <<= (int)Test.instanceCount;
                    break;
                case 45:
                case 183:
                    i5 |= (int)-2L;
                    break;
                case 166:
                    f += by;
                case 152:
                    iArr1[i6 - 1] += (int)f;
                    break;
                case 270:
                    i10 %= -210;
                    break;
                case 37:
                    iArr1[i4] = i9;
                    break;
                case 327:
                    Test.instanceCount = i8;
                case 99:
                    i9 += i6;
                    break;
                case 213:
                case 359:
                    i10 = (int)Test.instanceCount;
                    break;
                case 356:
                    i10 <<= -6484;
                    break;
                case 331:
                    f1 /= -6;
                case 304:
                    fArr = fArr;
                case 185:
                    i9 -= 36513;
                    break;
                case 114:
                    i10 = i7;
                    break;
                case 55:
                    iArr1[i6 - 1] = i6;
                case 112:
                    i5 += i6;
                    break;
                case 263:
                    iArr1[i4 + 1] >>= (int)Test.lFld;
                case 282:
                    i9 += (int)f;
                case 64:
                    by += (byte)-13025;
                    break;
                case 202:
                    if (b) break;
                    break;
                case 87:
                    fArr[i4] = i4;
                    break;
                case 83:
                    Test.lFld = -128;
                case 314:
                    i7 = (int)-213L;
                    break;
                case 105:
                    i5 *= 117;
                    break;
                case 31:
                case 35:
                    s >>= (short)i4;
                    break;
                case 278:
                    i7 *= i4;
                    break;
                case 297:
                    Test.dArrFld[i4] = -2735;
                    break;
                case 189:
                    i7 *= i6;
                case 198:
                    i9 += (int)Test.instanceCount;
                    break;
                case 26:
                    i9 >>= i8;
                    break;
                case 334:
                    f1 += Test.lFld;
                    break;
                case 43:
                    i9 -= i4;
                    break;
                case 332:
                    b = true;
                case 19:
                    i5 -= i4;
                    break;
                case 193:
                    i9 = 8656;
                case 252:
                    iArr1[i4] = s;
                    break;
                case 167:
                    if (b) break;
                case 13:
                    s >>= (short)i8;
                    break;
                case 158:
                    s = (short)i7;
                    break;
                case 274:
                    Test.instanceCount -= 4;
                    break;
                case 141:
                    iArr1[i4 - 1] |= i6;
                    break;
                case 305:
                    i10 += i10;
                    break;
                case 350:
                    Test.instanceCount = i11;
                    break;
                case 284:
                    Test.lFld -= i8;
                case 191:
                    f1 = -9;
                case 144:
                    byArr[i4] += (byte)i9;
                    break;
                case 46:
                    Test.instanceCount += (((i6 * Test.instanceCount) + Test.instanceCount) - Test.instanceCount);
                    break;
                case 90:
                    i11 >>= (int)Test.instanceCount;
                    break;
                case 325:
                    lArr[i6] = i11;
                    break;
                case 29:
                    bArr[i4][i6 + 1] = b;
                    break;
                case 220:
                    i5 = i9;
                    break;
                case 321:
                    i5 = 4;
                case 123:
                    lArr[i6 + 1] = i7;
                case 115:
                case 107:
                    Test.instanceCount |= i7;
                case 61:
                    if (true) continue;
                case 310:
                    i11 = (int)Test.instanceCount;
                    break;
                case 273:
                    f += (float)d1;
                case 316:
                    fArr[i6] = s;
                case 41:
                    i9 <<= i6;
                    break;
                case 71:
                case 151:
                    i9 = i5;
                    break;
                case 86:
                    i5 = i6;
                case 178:
                    i11 += (((i6 * i8) + Test.lFld) - i6);
                    break;
                case 104:
                    lArr[i6] = i7;
                default:
                    bArr[i4 + 1][i6 + 1] = b;
                }
            }
        }
        vMeth1_check_sum += Float.floatToIntBits(f) + i4 + i5 + i6 + i7 + Double.doubleToLongBits(d1) + i8 + i9 + by +
            i10 + Float.floatToIntBits(f1) + (b ? 1 : 0) + i11 + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i2, double d, int i3) {

        float f2=2.959F;
        int i12=-176, i13=-4, i14=199, i15=3, i16=-75, i17=-19357, i18=219, iArr2[]=new int[N];
        byte by1=113;
        boolean b1=true;

        FuzzerUtils.init(iArr2, -12881);

        vMeth1(f2);
        for (i12 = 18; i12 < 349; ++i12) {
            Test.instanceCount += i12;
        }
        iArr2[(i13 >>> 1) % N] -= i3;
        by1 = (byte)5;
        for (i14 = 360; i14 > 9; i14--) {
            i16 = 1;
            while (++i16 < 5) {
                switch (((i14 % 2) * 5) + 44) {
                case 47:
                    Test.lFld -= -810;
                    break;
                case 52:
                    for (i17 = 1; i17 < 1; ++i17) {
                        if (b1) {
                            Test.instanceCount <<= Test.instanceCount;
                            Test.lArrFld[i16] <<= i12;
                            i2 *= i13;
                            iArr2[i17] = i14;
                        } else if (b1) {
                            Test.lArrFld[i17] += i16;
                        } else if (b1) {
                            Test.lFld -= -1;
                        }
                    }
                }
            }
        }
        vMeth_check_sum += i2 + Double.doubleToLongBits(d) + i3 + Float.floatToIntBits(f2) + i12 + i13 + by1 + i14 +
            i15 + i16 + i17 + i18 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr2);
    }

    public static void vSmallMeth(long l, long l1, int i1) {

        double d2=0.88886;

        vMeth(i1, d2, 9);
        vSmallMeth_check_sum += l + l1 + i1 + Double.doubleToLongBits(d2);
    }

    public void mainTest(String[] strArr1) {

        int i=-6, i19=-26951, i20=27931, i21=23764, i22=0, i23=-84, i24=12, iArr[]=new int[N];
        byte by2=40;
        double d3=-2.44312;
        float fArr1[]=new float[N];

        FuzzerUtils.init(iArr, -163);
        FuzzerUtils.init(fArr1, -2.303F);

        Test.instanceCount = iArr[(i >>> 1) % N];
        for (int smallinvoc=0; smallinvoc<297; smallinvoc++) vSmallMeth(Test.lFld, -3842877070L, i);
        for (i19 = 7; i19 < 217; ++i19) {
            try {
                i20 = (i20 % 3697);
                i20 = (-145 % iFld);
                Test.iArrFld[i19][i19 + 1] = (Test.iArrFld[i19 - 1][(52117 >>> 1) % N] / 54347);
            } catch (ArithmeticException a_e) {}
            i21 = 1;
            while (++i21 < 120) {
                i -= by2;
                i22 += (i21 ^ i21);
                fArr1[i19 + 1] -= fFld;
                i /= (int)(Test.instanceCount | 1);
                by2 += (byte)(i21 * i);
                if (false) continue;
                by2 = (byte)i21;
                iArr = Test.iArrFld[i19 + 1];
                i += (int)fFld;
                switch (((i21 >>> 1) % 6) + 69) {
                case 69:
                    i20 += i21;
                    i23 = 1;
                    do {
                        boolean b2=true;
                        if (b2) {
                            i -= 6;
                            sFld += (short)-184;
                            Test.instanceCount += Test.instanceCount;
                            d3 = i;
                        } else {
                            Test.iArrFld[i19][i21] ^= 178;
                            i20 >>= (int)Test.lFld;
                            i22 |= (int)Test.lFld;
                        }
                        sFld = (short)i22;
                        fFld = 199;
                        i22 = -13;
                        i20 -= (int)d3;
                        Test.iArrFld[i21 - 1][i23 + 1] >>= i21;
                    } while (++i23 < 1);
                    break;
                case 70:
                    iFld -= i19;
                case 71:
                    i24 <<= i21;
                    break;
                case 72:
                    i += (((i21 * i22) + fFld) - i23);
                    break;
                case 73:
                    Test.lArrFld[i21 - 1] -= iFld;
                    break;
                case 74:
                    i = i24;
                    break;
                }
            }
        }

        FuzzerUtils.out.println("i i19 i20 = " + i + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 by2 i22 = " + i21 + "," + by2 + "," + i22);
        FuzzerUtils.out.println("i23 d3 i24 = " + i23 + "," + Double.doubleToLongBits(d3) + "," + i24);
        FuzzerUtils.out.println("iArr fArr1 = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.lFld iFld = " + Test.instanceCount + "," + Test.lFld + "," +
            iFld);
        FuzzerUtils.out.println("fFld sFld Test.dArrFld = " + Float.floatToIntBits(fFld) + "," + sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.lArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vSmallMeth_check_sum: " + vSmallMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vSmallMeth ->  vSmallMeth mainTest Test
//DEBUG  vMeth ->  vMeth vSmallMeth mainTest Test
//DEBUG  vMeth1 ->  vMeth1 vMeth vSmallMeth mainTest Test
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
