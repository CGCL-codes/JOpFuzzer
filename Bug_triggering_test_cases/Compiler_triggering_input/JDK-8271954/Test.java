// Generated by Java* Fuzzer test generator (1.0.001). Thu Jul 29 08:08:02 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10766L;
    public byte byFld=-123;
    public static short sFld=-3477;
    public static double dFld=84.129193;
    public static boolean bFld=true;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, -77.599F);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(float f, long l, long l1) {

        int i6=14514, i7=22552, i8=42705, i9=8, iArr[]=new int[N];
        byte by1=57;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 185);
        FuzzerUtils.init(lArr, 113L);

        for (int i5 : iArr) {
            for (i6 = 1; i6 < 4; ++i6) {
                double d1=2.96461;
                i5 *= (int)Test.instanceCount;
                d1 = i6;
                i7 += (20125 + (i6 * i6));
                f += i7;
                iArr[i6 + 1] -= i6;
                for (i8 = i6; i8 < 2; i8++) {
                    lArr[i6 + 1] = (long)d1;
                    i5 += by1;
                    iArr[i8 + 1] += (int)84.28157;
                    f += (((i8 * i7) + i9) - Test.sFld);
                    lArr[i8 - 1] = i5;
                    i9 += i8;
                }
                i7 -= i9;
            }
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + l + l1 + i6 + i7 + i8 + i9 + by1 + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1() {

        int i4=30617, i10=-24184, i11=1, i12=22920, i13=240, i14=-5;
        long l2=8987728024587115614L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-60);

        i4 <<= (++i4);
        i4 = (-7 + (++i4));
        vMeth2(68.960F, 11L, Test.instanceCount);
        i10 = 1;
        do {
            i11 = 1;
            do {
                i4 = i10;
            } while (++i11 < 4);
            for (l2 = 1; l2 < 4; ++l2) {
                for (i13 = 1; i13 < 2; i13++) {
                    byArr = byArr;
                    i12 -= (int)Test.dFld;
                    i12 += (int)(-233L + (i13 * i13));
                    i12 = 0;
                    Test.fArrFld = Test.fArrFld;
                }
                i4 += (int)l2;
                i14 += (int)l2;
            }
        } while (++i10 < 396);
        vMeth1_check_sum += i4 + i10 + i11 + l2 + i12 + i13 + i14 + FuzzerUtils.checkSum(byArr);
    }

    public static void vMeth(byte by, int i3) {

        int i15=49527, i16=10, i17=-12, i18=-55, i19=313, i20=4, iArr1[]=new int[N];
        float f1=-1.801F;

        FuzzerUtils.init(iArr1, -202);

        switch ((((i3 >>> 1) % 9) * 5) + 97) {
        case 120:
            i3 *= (Math.abs(-4) * (i3--));
            break;
        case 115:
            vMeth1();
            for (i15 = 358; 10 < i15; i15 -= 2) {
                iArr1[i15 + 1] += i3;
                for (i17 = 1; i17 < 9; i17++) {
                    Test.fArrFld[i17 - 1] += i18;
                    i16 *= i18;
                    for (i19 = 2; i19 > i17; i19 -= 2) {
                        i20 -= (int)f1;
                        i18 = (int)-14912L;
                        i20 += i19;
                        by += (byte)i15;
                        iArr1[i19 + 1] += i16;
                        if (true) break;
                    }
                }
            }
        case 136:
            i18 -= i15;
            break;
        case 112:
            Test.dFld -= i19;
        case 117:
            iArr1[(i19 >>> 1) % N] -= (int)Test.instanceCount;
            break;
        case 141:
            i20 += i3;
            break;
        case 100:
            i3 += i15;
            break;
        case 107:
            Test.fArrFld[(i3 >>> 1) % N] = i15;
            break;
        case 123:
            i18 = i18;
            break;
        default:
            iArr1 = iArr1;
        }
        vMeth_check_sum += by + i3 + i15 + i16 + i17 + i18 + i19 + i20 + Float.floatToIntBits(f1) +
            FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=227, i1=-1321, i2=-10, i21=51094, i22=-61576, i23=5, i24=-65138, i25=9, i26=-41724, iArr2[]=new int[N];
        double d=2.83683;
        float f2=-120.300F, f3=122.971F;

        FuzzerUtils.init(iArr2, 46);

        i = 1;
        while (++i < 219) {
            i1 += (i * byFld);
        }
        for (d = 15; 305 > d; ++d) {
            vMeth(byFld, -54801);
            if (Test.bFld) {
                Test.instanceCount = i2;
                Test.dFld -= 0.119642;
                i1 += (int)((long)d | Test.instanceCount);
                i2 -= (int)Test.dFld;
            }
            for (f2 = 5; 87 > f2; ++f2) {
                i2 *= i;
                i2 = (int)Test.instanceCount;
                f3 += (f2 * f2);
                i21 = i;
                for (i22 = 1; 2 > i22; i22++) {
                    i21 += (int)f3;
                    i23 %= (int)((long)(f2) | 1);
                    i2 |= i2;
                    if (Test.bFld) continue;
                    i21 = i;
                    i2 += i22;
                    iArr2[(int)(d - 1)] += (int)-190L;
                    i2 -= i1;
                    if (true) continue;
                    i23 &= i23;
                }
                for (i24 = 1; 2 > i24; i24++) {
                    switch (((i >>> 1) % 2) + 88) {
                    case 88:
                        if (Test.bFld) break;
                        i21 = -61978;
                        i25 += i24;
                        break;
                    case 89:
                        i1 = i;
                        break;
                    default:
                        i26 += (i24 * i24);
                    }
                }
            }
        }

        FuzzerUtils.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
        FuzzerUtils.out.println("i2 f2 i21 = " + i2 + "," + Float.floatToIntBits(f2) + "," + i21);
        FuzzerUtils.out.println("f3 i22 i23 = " + Float.floatToIntBits(f3) + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount byFld Test.sFld = " + Test.instanceCount + "," + byFld + "," +
            Test.sFld);
        FuzzerUtils.out.println("Test.dFld Test.bFld Test.fArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            (Test.bFld ? 1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
