// Generated by Java* Fuzzer test generator (1.0.001). Sun Apr 29 11:54:21 2018
public class Test {

    public static final int N = 400;

    public static long instanceCount=-19362L;
    public short sFld=-4438;
    public static volatile double dFld=0.50205;
    public static float fFld=2.108F;
    public static long lArrFld[]=new long[N];
    public short sArrFld[]=new short[N];
    public static boolean bArrFld[]=new boolean[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -12L);
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.iArrFld, -10395);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i6=-39690, i7=-3, i8=-33, i9=134, i10=-54910, i11=-2, iArr[]=new int[N];
        float f2=99.254F;

        FuzzerUtils.init(iArr, -11);

        Test.instanceCount = -97;
        for (i6 = 6; 216 > i6; i6++) {
            for (i8 = 8; i8 > i6; --i8) {
                Test.instanceCount <<= Test.instanceCount;
                f2 += (i8 * i8);
                i9 *= i9;
                i10 = 1;
                do {
                    iArr[i8 + 1] -= (int)f2;
                    Test.instanceCount += (((i10 * i6) + Test.instanceCount) - f2);
                    switch (((i10 % 5) * 5) + 74) {
                    case 91:
                        i11 -= i7;
                        Test.dFld += f2;
                        Test.lArrFld[i10] = 4;
                    case 97:
                        i11 += (((i10 * i9) + i10) - i9);
                        break;
                    case 93:
                        i9 = (int)-2518281596L;
                        break;
                    case 89:
                        i9 >>>= -27171;
                        break;
                    case 78:
                        Test.instanceCount += (138 + (i10 * i10));
                        break;
                    default:
                        f2 -= Test.instanceCount;
                    }
                } while (++i10 < 1);
            }
        }
        vMeth1_check_sum += i6 + i7 + i8 + i9 + Float.floatToIntBits(f2) + i10 + i11 + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth() {

        int i4=103, i5=-111, i12=-46442, i13=93, i14=-14935, i15=2184, i16=13374;
        byte by=-105;
        float fArr1[]=new float[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(fArr1, -1.878F);
        FuzzerUtils.init(sArr, (short)-653);

        for (i4 = 4; i4 < 301; i4++) {
            vMeth1();
            by += (byte)(i4 + i4);
        }
        fArr1[(i5 >>> 1) % N] = -14543;
        for (long l2 : Test.lArrFld) {
            for (i12 = 4; 1 < i12; i12--) {
                i13 = i4;
                i13 >>= i4;
                if (i12 != 0) {
                }
                i13 >>= i5;
            }
            Test.dFld -= l2;
            for (i14 = 1; 4 > i14; ++i14) {
                sArr[i14 + 1] = (short)i13;
                Test.fFld -= i16;
                l2 += (((i14 * Test.fFld) + Test.instanceCount) - i15);
            }
        }
        long meth_res = i4 + i5 + by + i12 + i13 + i14 + i15 + i16 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)) + FuzzerUtils.checkSum(sArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(int i1, long l) {

        int i2=377, i3=93, iArr1[]=new int[N];
        long l3=424608621581057175L;

        FuzzerUtils.init(iArr1, -2830);

        for (long l1 : Test.lArrFld) {
            float f1=-43.375F;
            f1 = (((-168 >> sFld) + (i1 *= i1)) - 130L);
            l1 ^= i1;
            for (i2 = 1; 4 > i2; ++i2) {
                l1 += (long)(0.609F + (i2 * i2));
                f1 = Math.min(-2177481574L, (long)(-14 + (f1 * f1)));
                i3 *= (int)((lMeth() + Test.dFld) * -134L);
                i3 = -192;
                i3 += sFld;
            }
            l = -5;
            l3 = 1;
            do {
                i3 += (int)l3;
                i3 += (int)l3;
                Test.fFld = 88;
                iArr1[(int)(l3)] *= i3;
            } while (++l3 < 4);
        }
        vMeth_check_sum += i1 + l + i2 + i3 + l3 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i=-7, i17=48034, i18=49224, i19=-7, i20=-2, i21=7, i22=49, i23=-61419;
        float f=0.161F, fArr[]=new float[N];
        boolean b=true;

        FuzzerUtils.init(fArr, 1.323F);

        fArr[(i >>> 1) % N] = (i * (f++));
        i = (-((i--) * (i << i)));
        i *= i;
        vMeth(i, -134L);
        sArrFld[(-10 >>> 1) % N] += (short)Test.instanceCount;
        i17 = 1;
        while (++i17 < 331) {
            i += (int)Test.instanceCount;
            Test.bArrFld[i17] = b;
            Test.iArrFld[i17 + 1] *= i;
            try {
                Test.iArrFld[i17 + 1] = (i18 / i17);
                i18 = (-66 / i18);
                i18 = (i17 % 143);
            } catch (ArithmeticException a_e) {}
            i19 = 1;
            while (++i19 < 76) {
                for (i20 = 1; i20 < 1; i20++) {
                    Test.dFld *= Test.instanceCount;
                    switch ((i19 % 1) + 21) {
                    case 21:
                        i21 *= (int)Test.instanceCount;
                        break;
                    }
                    if (b) continue;
                }
                Test.fFld += i19;
                for (i22 = 1; i22 < 1; i22++) {
                    Test.lArrFld[i19] += (long)87.385F;
                    b = b;
                }
                Test.instanceCount += (i19 ^ i23);
                Test.dFld -= i17;
                Test.instanceCount -= -12063;
                b = b;
            }
            f += ((long)i17 | (long)i21);
            Test.fFld += i22;
            if (b) {
                Test.instanceCount -= i17;
            } else {
                Test.instanceCount = i17;
            }
            Test.instanceCount -= 155669882570075942L;
        }

        FuzzerUtils.out.println("i f i17 = " + i + "," + Float.floatToIntBits(f) + "," + i17);
        FuzzerUtils.out.println("b i18 i19 = " + (b ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("i23 fArr = " + i23 + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount sFld Test.dFld = " + Test.instanceCount + "," + sFld + "," +
            Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.fFld Test.lArrFld sArrFld = " + Float.floatToIntBits(Test.fFld) + "," +
            FuzzerUtils.checkSum(Test.lArrFld) + "," + FuzzerUtils.checkSum(sArrFld));
        FuzzerUtils.out.println("Test.bArrFld Test.iArrFld = " + FuzzerUtils.checkSum(Test.bArrFld) + "," +
            FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
