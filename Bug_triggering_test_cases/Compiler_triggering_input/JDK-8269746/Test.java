// Generated by Java* Fuzzer test generator (1.0.001). Sat Jun 26 21:36:15 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=4158625438216689681L;
    public volatile int iFld=34;
    public int iFld1=-33163;

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l1, int i4) {


        i4 += i4;
        long meth_res = l1 + i4;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1(int i1, int i2, long l) {

        float f1=-113.756F;
        int i5=-7160, i6=-146, i7=-1, i8=1, i9=-12, i10=22652, iArr[]=new int[N];
        boolean b=true;
        double d1=0.80897;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 24727);
        FuzzerUtils.init(lArr, -37428L);

        f1 += Math.abs(i2 += (i2 -= i1));
        for (int i3 : iArr) {
            switch (((iMeth(Test.instanceCount, i1) >>> 1) % 9) + 79) {
            case 79:
                Test.instanceCount -= Test.instanceCount;
                if (i3 != 0) {
                    vMeth1_check_sum += i1 + i2 + l + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1
                        : 0) + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                    return;
                }
                iArr[(i1 >>> 1) % N] = i1;
                break;
            case 80:
                for (i5 = 1; i5 < 4; ++i5) {
                    iArr[i5] = (int)245L;
                    iArr[i5 - 1] = i5;
                    i6 >>= i5;
                    lArr[i5 - 1] *= (long)-2.35967;
                }
                break;
            case 81:
            case 82:
                for (i7 = 1; 4 > i7; ++i7) {
                    for (i9 = i7; 2 > i9; ++i9) {
                        b = b;
                        i8 += i1;
                    }
                }
                break;
            case 83:
                i8 >>>= i6;
                break;
            case 84:
                if (i7 != 0) {
                    vMeth1_check_sum += i1 + i2 + l + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1
                        : 0) + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                    return;
                }
                break;
            case 85:
                d1 += Test.instanceCount;
                break;
            case 86:
                i8 = (int)d1;
                break;
            case 87:
                Test.instanceCount >>= i7;
                break;
            default:
                f1 = l;
            }
        }
        vMeth1_check_sum += i1 + i2 + l + Float.floatToIntBits(f1) + i5 + i6 + i7 + i8 + i9 + i10 + (b ? 1 : 0) +
            Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth(int i) {

        float f2=-2.67F;
        int iArr1[]=new int[N];
        long lArr1[]=new long[N];

        FuzzerUtils.init(iArr1, 10);
        FuzzerUtils.init(lArr1, -129L);

        vMeth1(i, i, Test.instanceCount);
        i <<= i;
        i = i;
        f2 *= i;
        iArr1[(46664 >>> 1) % N] <<= -235;
        lArr1[(i >>> 1) % N] %= (i | 1);
        i >>= -177;
        vMeth_check_sum += i + Float.floatToIntBits(f2) + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        float f=2.388F, f3=-13.939F, fArr[]=new float[N];
        double d=0.1586, dArr[]=new double[N];
        int i11=52176, i12=-7, i13=-4, i14=-33932, i15=-19970, i16=44445, iArr2[]=new int[N];
        byte by=-97;
        boolean b2=true;
        long lArr2[][]=new long[N][N];

        FuzzerUtils.init(fArr, -120.409F);
        FuzzerUtils.init(dArr, -35.124476);
        FuzzerUtils.init(lArr2, 20311L);
        FuzzerUtils.init(iArr2, 18329);

        fArr[(iFld >>> 1) % N] *= 28;
        f = (Test.instanceCount = (long)((0.130298 + Long.reverseBytes(Test.instanceCount)) + d));
        vMeth(iFld);
        iFld -= (int)-9003472156832018244L;
        iFld -= (int)Test.instanceCount;
        d = -103.124915;
        for (f3 = 7; f3 < 195; ++f3) {
            iFld += (int)(((f3 * i11) + i11) - i11);
            dArr[(int)(f3)] -= i11;
            i12 = 1;
            while (++i12 < 133) {
                lArr2[(int)(f3 - 1)][(int)(f3 - 1)] *= iFld;
                for (i13 = i12; 1 > i13; ++i13) {
                    boolean b1=false;
                    i11 += (int)Test.instanceCount;
                    if (b1) break;
                    switch ((i12 % 1) + 53) {
                    case 53:
                        lArr2[i13 + 1][i12 - 1] -= i14;
                        b1 = b1;
                        iFld += i13;
                    }
                }
                iFld += i14;
                i14 += i14;
                Test.instanceCount = Test.instanceCount;
                if (b2) {
                    iFld1 += (((i12 * i13) + Test.instanceCount) - i14);
                    i11 *= by;
                }
            }
            for (i15 = (int)(f3); i15 < 133; i15++) {
                i11 -= i12;
                iArr2[i15 + 1] = i11;
                Test.instanceCount = 7;
                iArr2[(int)(f3)] -= i14;
                Test.instanceCount += i15;
            }
        }

        FuzzerUtils.out.println("f d f3 = " + Float.floatToIntBits(f) + "," + Double.doubleToLongBits(d) + "," +
            Float.floatToIntBits(f3));
        FuzzerUtils.out.println("i11 i12 i13 = " + i11 + "," + i12 + "," + i13);
        FuzzerUtils.out.println("i14 by b2 = " + i14 + "," + by + "," + (b2 ? 1 : 0));
        FuzzerUtils.out.println("i15 i16 fArr = " + i15 + "," + i16 + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));
        FuzzerUtils.out.println("dArr lArr2 iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + "," +
            FuzzerUtils.checkSum(lArr2) + "," + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount iFld iFld1 = " + Test.instanceCount + "," + iFld + "," + iFld1);

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
