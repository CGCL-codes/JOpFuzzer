// Generated by Java* Fuzzer test generator (1.0.001). Mon Sep  9 14:04:33 2019
// srand = 335827406791642706002552312116989303477

public inline class Test {

    public static final int N = 400;

    public static long instanceCount=2613566493357916355L;
    public boolean bFld=false;
    public short sFld=25032;
    public int iFld=-36178;
    public static double dFld=-2.57500;
    public float fFld2=2.708F;
    public int iArrFld[]=new int[N];
    public double dArrFld[]=new double[N];
    public Cls2 OFld=new Cls2();
    public Test setinstanceCount(long value) { Test.instanceCount = value; return this; };

    public Test setbFld(boolean value) { return __WithField(bFld, value); };

    public Test setsFld(short value) { return __WithField(sFld, value); };

    public Test setiFld(int value) { return __WithField(iFld, value); };

    public Test setdFld(double value) { Test.dFld = value; return this; };

    public Test setfFld2(float value) { return __WithField(fFld2, value); };

    public Test setiArrFld(int value[]) { return __WithField(iArrFld, value); };

    public Test setdArrFld(double value[]) { return __WithField(dArrFld, value); };

    public Test setOFld(Cls2 value) { return __WithField(OFld, value); };


    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public void vMeth1(int i5, int i6) {

        float f=-2.661F;
        int i7=-5, i8=-82, i9=-144;
        byte by=-94;

        FuzzerUtils.init(OFld.OFld1.lArrFld, -58480L);

        if (bFld) {
            for (long l1 : OFld.OFld1.lArrFld) {
                i6 = i5;
                Cls2.instanceCount = i6;
                i5 = i6;
                Cls1.instanceCount = i6;
                if (bFld) continue;
                OFld.setOFld1(OFld.OFld1.setfFld((float)(OFld.OFld1.fFld-(float)(OFld.OFld1.fFld)))); /*
                    OFld.OFld1.fFld -= OFld.OFld1.fFld */ ;
                for (f = 1; f < 4; ++f) {
                    for (i8 = 1; i8 < 2; ++i8) {
                        i6 <<= sFld;
                        switch ((int)(((f % 4) * 5) + 101)) {
                        case 102:
                            Cls1.instanceCount -= (long)f;
                            l1 += i8;
                            i9 += (i8 | Test.instanceCount);
                            break;
                        case 111:
                            iArrFld[i8 + 1] = iFld;
                        case 109:
                            Test.instanceCount += (((i8 * i8) + i6) - i7);
                            break;
                        case 107:
                            Test.dFld += 239;
                            break;
                        default:
                            setsFld((short)(sFld-(short)(by))); /* sFld -= by */ ;
                        }
                    }
                }
            }
        } else if (bFld) {
            setdArrFld(FuzzerUtils.double1array(N, (double)-2.35010)); /* dArrFld = FuzzerUtils.double1array(N,
                (double)-2.35010) */ ;
        } else {
            iArrFld[(i7 >>> 1) % N] = i6;
            vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(OFld.OFld1.fFld) + Float.floatToIntBits(f) + i7 + i8 +
                i9 + by + FuzzerUtils.checkSum(OFld.OFld1.lArrFld) + FuzzerUtils.checkSum(OFld.OFld1);
            return;
        }
        vMeth1_check_sum += i5 + i6 + Float.floatToIntBits(OFld.OFld1.fFld) + Float.floatToIntBits(f) + i7 + i8 + i9 +
            by + FuzzerUtils.checkSum(OFld.OFld1.lArrFld) + FuzzerUtils.checkSum(OFld.OFld1);
    }

    public static void vMeth(long l, int i) {

        int i1=11, i2=4, i3=-19250, i4=43271;
        double d=2.93046;
        Cls3 O1=new Cls3();

        FuzzerUtils.init(Cls3.OFld5.dArrFld1, -72.30579);
        FuzzerUtils.init(O1.OFld6.iArrFld3, 49593);

        for (i1 = 1; i1 < 164; i1++) {
            i3 = 10;
            do {
                for (d = 1; d < 1; d += 2) {
                    i += (int)(((d * i3) + l) - Cls.byFld1);
                    O1.setOFld3(O1.OFld3.setOFld4(O1.OFld3.OFld4.setfFld1((float)(O1.OFld3.OFld4.fFld1*(float)(i3)))));
                        /* O1.OFld3.OFld4.fFld1 *= i3 */ ;
                    Cls.instanceCount >>= i4;
                    switch ((int)((d % 5) + 48)) {
                    case 48:
                        Cls3.OFld5.dArrFld1[(int)(d - 1)] = Cls3.instanceCount;
                        Cls1.instanceCount += (long)d;
                        if (true) {
                            try {
                                i2 = (Cls2.iArrFld2[(int)(d)] % 22160);
                                i2 = (O1.OFld6.iArrFld3[i3 - 1] / i);
                                i4 = (-593303466 / i);
                            } catch (ArithmeticException a_e) {}
                            i2 += (int)((long)d ^ O1.OFld3.OFld4.iFld3);
                        } else {
                            O1.setOFld3(O1.OFld3.setOFld4(O1.OFld3.OFld4.setiFld3((int)((int)60080L)))); /*
                                O1.OFld3.OFld4.iFld3 = (int)60080L */ ;
                            try {
                                i4 = (49963 / i4);
                                i4 = (i3 / i1);
                                i2 = (O1.OFld6.iArrFld3[(int)(d + 1)] / 36);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 49:
                        if (false) break;
                        break;
                    case 50:
                        i /= (int)(i1 | 1);
                    case 51:
                       
                            O1.setOFld3(O1.OFld3.setOFld4(O1.OFld3.OFld4.setiFld3((int)(O1.OFld3.OFld4.iFld3/(int)((Cls.byFld1
                            | 1)))))); /* O1.OFld3.OFld4.iFld3 /= (int)(Cls.byFld1 | 1) */ ;
                        break;
                    case 52:
                        Cls3.instanceCount = i;
                        break;
                    }
                }
            } while (--i3 > 0);
        }
        vMeth_check_sum += l + i + i1 + i2 + i3 + Double.doubleToLongBits(d) + i4 +
            Float.floatToIntBits(O1.OFld3.OFld4.fFld1) + O1.OFld3.OFld4.iFld3 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Cls3.OFld5.dArrFld1)) +
            FuzzerUtils.checkSum(O1.OFld6.iArrFld3) + FuzzerUtils.checkSum(O1) + FuzzerUtils.checkSum(O1.OFld3) +
            FuzzerUtils.checkSum(O1.OFld6) + FuzzerUtils.checkSum(O1.OFld3.OFld4);
    }

    public void mainTest(String[] strArr1) {

        int i17=60099, i18=-11, i19=-37078, i20=-18024, i21=-8015, i22=-37588;

        FuzzerUtils.init(OFld.OFld7.lArrFld1, -2753909772L);

        vMeth(-1799846940883421750L, iFld);
        setiArrFld(iArrFld); /* iArrFld = iArrFld */ ;
        for (i17 = 9; i17 < 332; i17 += 2) {
            for (i19 = 2; i19 < 156; ++i19) {
                i18 += (int)Cls2.instanceCount;
                setbFld(bFld); /* bFld = bFld */ ;
                for (i21 = 1; i21 < 2; ++i21) {
                    OFld.OFld7.lArrFld1[i17 - 1] -= i19;
                    i22 += (int)fFld2;
                    Test.dFld += i21;
                    Cls2.instanceCount = i21;
                    if (bFld) {
                        Test.instanceCount += (long)fFld2;
                        i22 = 7;
                        iArrFld[i21 + 1] = (int)Cls3.instanceCount;
                        setfFld2((float)(fFld2-(float)(i18))); /* fFld2 -= i18 */ ;
                    } else if (bFld) {
                        i22 <<= (int)Cls.instanceCount;
                        Cls2.instanceCount = (long)fFld2;
                        iArrFld[i21 + 1] = Cls.byFld1;
                    } else if (bFld) {
                        if (bFld) continue;
                        i20 += (((i21 * iFld) + i17) - OFld.OFld7.iFld4);
                        setiFld((int)(iFld+(int)((((i21 * fFld2) + iFld) - i22)))); /* iFld += (((i21 * fFld2) + iFld)
                            - i22) */ ;
                    } else {
                        OFld.setOFld7(OFld.OFld7.setiFld4((int)(OFld.OFld7.iFld4-(int)(sFld)))); /* OFld.OFld7.iFld4 -=
                            sFld */ ;
                        i22 -= (int)fFld2;
                        i18 = 246;
                        setiFld((int)((int)Test.instanceCount)); /* iFld = (int)Test.instanceCount */ ;
                    }
                    setfFld2((float)(fFld2-(float)(Test.instanceCount))); /* fFld2 -= Test.instanceCount */ ;
                    iArrFld[i19] >>>= (int)Cls3.instanceCount;
                }
            }
            i18 >>= i21;
            Cls.byFld1 += (byte)58;
        }

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("OFld.OFld7.iFld4 OFld.OFld7.lArrFld1 OFld.OFld7 = " + OFld.OFld7.iFld4 + "," +
            FuzzerUtils.checkSum(OFld.OFld7.lArrFld1) + "," + FuzzerUtils.checkSum(OFld.OFld7));
        FuzzerUtils.out.println("Cls Cls1 Cls2 = " + Cls.instanceCount + "," + Cls1.instanceCount + "," +
            Cls2.instanceCount);
        FuzzerUtils.out.println("Cls3 = " + Cls3.instanceCount);

        FuzzerUtils.out.println("Test.instanceCount bFld sFld = " + Test.instanceCount + "," + (bFld ? 1 : 0) + "," +
            sFld);
        FuzzerUtils.out.println("iFld Test.dFld fFld2 = " + iFld + "," + Double.doubleToLongBits(Test.dFld) + "," +
            Float.floatToIntBits(fFld2));
        FuzzerUtils.out.println("iArrFld dArrFld OFld = " + FuzzerUtils.checkSum(iArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(OFld));
        FuzzerUtils.out.println("Cls Cls1 Cls2 = " + Cls.instanceCount + "," + Cls1.instanceCount + "," +
            Cls2.instanceCount);
        FuzzerUtils.out.println("Cls3 = " + Cls3.instanceCount);

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
inline class Cls {

    public static final int N = 400;

    public static long instanceCount=26543L;
    public boolean bFld1=false;
    public byte byFld=-123;
    public static byte byFld1=40;
    public static float fArrFld[]=new float[N];
    public int iArrFld1[]=new int[N];
    public double dArrFld1[]=new double[N];
    public Cls setinstanceCount(long value) { Cls.instanceCount = value; return this; };

    public Cls setbFld1(boolean value) { return __WithField(bFld1, value); };

    public Cls setbyFld(byte value) { return __WithField(byFld, value); };

    public Cls setbyFld1(byte value) { Cls.byFld1 = value; return this; };

    public Cls setfArrFld(float value[]) { Cls.fArrFld = value; return this; };

    public Cls setiArrFld1(int value[]) { return __WithField(iArrFld1, value); };

    public Cls setdArrFld1(double value[]) { return __WithField(dArrFld1, value); };


    static {
        FuzzerUtils.init(Cls.fArrFld, 24.598F);
    }

    public static long Cls_check_sum = 0;

    public  Cls() {

        instanceCount++;
        int i10=3, i11=11, i12=82, i13=-26417, i14=-126, i15=3185, i16=30508;
        double d2=-2.43168;
        Cls2 O=new Cls2();

        Cls3.OFld2.vMeth1(O.iFld1, O.iFld1);
        for (i10 = 217; i10 > 6; i10--) {
            for (i12 = 8; i12 > i10; i12--) {
                for (i14 = 1; i14 < 1; i14++) {
                    Cls.fArrFld[i10 - 1] -= O.iFld2;
                    iArrFld1[i10] += i11;
                    i13 *= (int)Cls2.instanceCount;
                    O.setiFld1((int)(O.iFld1>>(int)(Cls.instanceCount))); /* O.iFld1 >>= (int)Cls.instanceCount */ ;
                    i13 = (int)-2L;
                }
                if (bFld1) break;
            }
            for (d2 = 1; d2 < 8; ++d2) {
                i11 &= (int)Cls.instanceCount;
                Test.instanceCount &= 7;
                i11 += (int)Cls.instanceCount;
                i16 += (int)(((d2 * O.iFld2) + Cls.instanceCount) - byFld);
            }
        }
        long meth_res = O.iFld1 + i10 + i11 + i12 + i13 + i14 + i15 + O.iFld2 + Double.doubleToLongBits(d2) + i16 +
            FuzzerUtils.checkSum(O);
        Cls_check_sum += meth_res;
        return;
    }

}
///////////////////////////////////////////////////////////////////////
inline class Cls1 {

    public static final int N = 400;

    public static long instanceCount=-5L;
    public float fFld=-11.1000F;
    public float fFld1=1.511F;
    public int iFld3=59;
    public int iFld4=53102;
    public long lArrFld[]=new long[N];
    public long lArrFld1[]=new long[N];
    public Cls1 setinstanceCount(long value) { Cls1.instanceCount = value; return this; };

    public Cls1 setfFld(float value) { return __WithField(fFld, value); };

    public Cls1 setfFld1(float value) { return __WithField(fFld1, value); };

    public Cls1 setiFld3(int value) { return __WithField(iFld3, value); };

    public Cls1 setiFld4(int value) { return __WithField(iFld4, value); };

    public Cls1 setlArrFld(long value[]) { return __WithField(lArrFld, value); };

    public Cls1 setlArrFld1(long value[]) { return __WithField(lArrFld1, value); };


}
///////////////////////////////////////////////////////////////////////
inline class Cls2 {

    public static final int N = 400;

    public static long instanceCount=874723452L;
    public int iFld1=139;
    public int iFld2=-2;
    public static int iArrFld2[]=new int[N];
    public int iArrFld3[]=new int[N];
    public Cls1 OFld1=new Cls1();
    public Cls1 OFld4=new Cls1();
    public Cls1 OFld7=new Cls1();
    public Cls2 setinstanceCount(long value) { Cls2.instanceCount = value; return this; };

    public Cls2 setiFld1(int value) { return __WithField(iFld1, value); };

    public Cls2 setiFld2(int value) { return __WithField(iFld2, value); };

    public Cls2 setiArrFld2(int value[]) { Cls2.iArrFld2 = value; return this; };

    public Cls2 setiArrFld3(int value[]) { return __WithField(iArrFld3, value); };

    public Cls2 setOFld1(Cls1 value) { return __WithField(OFld1, value); };

    public Cls2 setOFld4(Cls1 value) { return __WithField(OFld4, value); };

    public Cls2 setOFld7(Cls1 value) { return __WithField(OFld7, value); };


    static {
        FuzzerUtils.init(Cls2.iArrFld2, -236);
    }

}
///////////////////////////////////////////////////////////////////////
inline class Cls3 {

    public static final int N = 400;

    public static long instanceCount=-645802155382687254L;
    public static Test OFld2=new Test();
    public Cls2 OFld3=new Cls2();
    public Cls2 OFld6=new Cls2();
    public static Cls OFld5=new Cls();
    public Cls3 setinstanceCount(long value) { Cls3.instanceCount = value; return this; };

    public Cls3 setOFld2(Test value) { Cls3.OFld2 = value; return this; };

    public Cls3 setOFld3(Cls2 value) { return __WithField(OFld3, value); };

    public Cls3 setOFld6(Cls2 value) { return __WithField(OFld6, value); };

    public Cls3 setOFld5(Cls value) { Cls3.OFld5 = value; return this; };

    int placeholder = 0;

}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test Cls3 vMeth mainTest
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  Cls ->  Cls Cls3 vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 Cls Cls3 vMeth mainTest
//DEBUG  Cls1 ->  Cls1 Cls2 Test vMeth1 Cls Cls3 vMeth mainTest
//DEBUG  Cls2 ->  Cls2 Test vMeth1 Cls Cls3 vMeth mainTest
//DEBUG  Cls3 ->  Cls3 vMeth mainTest
//DEBUG  Depth = 6
//DEBUG  Classes = 5
//DEBUG  static objects = {Cls2: [], Cls1: [], Test: [, Cls3.OFld2], Cls: [, Cls3.OFld5], }
