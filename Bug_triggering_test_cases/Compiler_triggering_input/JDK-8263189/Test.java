// Generated by Java* Fuzzer test generator (1.0.001). Fri Mar  5 19:36:06 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3840416081111183045L;
    public static float fFld=0.753F;
    public static short sArrFld[]=new short[N];
    public static long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)30249);
        FuzzerUtils.init(Test.lArrFld, -6082556575537044875L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long iMeth_check_sum = 0;

    public static int iMeth(long l, int i5) {

        int i6=2, i7=91, i8=-14, i9=-63214, i10=35, i11=-38285, i12=37509, iArr2[]=new int[N];
        short s1=28367;
        float f=-1.73F;
        long l1=-3L;
        double d=-45.580;

        FuzzerUtils.init(iArr2, 63217);

        for (i6 = 11; i6 < 268; ++i6) {
            iArr2 = iArr2;
            switch ((((53506 >>> 1) % 2) * 5) + 21) {
            case 24:
                i7 = i5;
                for (i8 = 1; i8 < 6; ++i8) {
                    i9 += (int)(80L + (i8 * i8));
                    i5 = -3;
                    s1 += (short)(39320L + (i8 * i8));
                    i9 = (int)l;
                }
                i10 = 1;
                do {
                    i7 += i10;
                    for (i11 = 1; i11 > i10; --i11) {
                        i12 -= (int)f;
                        iArr2[i10 - 1] -= (int)l1;
                        Test.instanceCount = (long)d;
                    }
                } while (++i10 < 6);
                break;
            case 27:
                i12 += i12;
                break;
            default:
                i5 += (int)Test.instanceCount;
            }
        }
        long meth_res = l + i5 + i6 + i7 + i8 + i9 + s1 + i10 + i11 + i12 + Float.floatToIntBits(f) + l1 +
            Double.doubleToLongBits(d) + FuzzerUtils.checkSum(iArr2);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth1() {

        int i1=10, i2=27382, i3=4224, i4=202, i13=118, i14=7, i15=11769, i16=-97, iArr1[]=new int[N];
        boolean b=true, bArr[]=new boolean[N];
        short s=5985;

        FuzzerUtils.init(iArr1, -64380);
        FuzzerUtils.init(bArr, true);

        for (i1 = 8; i1 < 326; i1 += 2) {
            b = b;
            Test.sArrFld[i1 + 1] -= (short)(iArr1[i1 - 1] = s);
            iArr1[i1 - 1] = (int)((--iArr1[i1 + 1]) - ((--i2) + (i2 - Test.instanceCount)));
            for (i3 = 1; i3 < 10; i3 += 2) {
                iMeth(Test.instanceCount, i2);
                for (i13 = 3; i13 > 1; i13--) {
                    i2 |= (int)Test.instanceCount;
                    s <<= (short)i4;
                    i4 += (((i13 * i1) + i2) - i3);
                }
                for (i15 = i1; i15 < 3; i15++) {
                    Test.instanceCount -= 239;
                    bArr[i15 + 1] = b;
                    i4 -= -24151;
                }
                i16 += (i3 * i3);
            }
        }
        vMeth1_check_sum += i1 + i2 + (b ? 1 : 0) + s + i3 + i4 + i13 + i14 + i15 + i16 + FuzzerUtils.checkSum(iArr1) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth() {

        int i17=89, i18=5, i19=44, i20=2, iArr3[]=new int[N];
        long l2=-79L, lArr[]=new long[N];
        boolean b1=false;
        byte by=-22;

        FuzzerUtils.init(iArr3, -131);
        FuzzerUtils.init(lArr, -56759L);

        vMeth1();
        i17 >>= (int)Test.instanceCount;
        i17 += -12397;
        Test.instanceCount &= -10;
        i17 = i17;
        for (i18 = 2; i18 < 350; ++i18) {
            iArr3[i18] = 24440;
            i17 /= 8;
            lArr[i18] -= -234;
            for (l2 = 5; l2 > i18; l2 -= 2) {
                switch ((i18 % 3) + 8) {
                case 8:
                    iArr3[i18] |= i17;
                    break;
                case 9:
                    if (b1) break;
                    i20 += (int)(((l2 * i20) + by) - i19);
                    i19 += (int)Test.instanceCount;
                    break;
                case 10:
                }
            }
        }
        vMeth_check_sum += i17 + i18 + i19 + l2 + i20 + (b1 ? 1 : 0) + by + FuzzerUtils.checkSum(iArr3) +
            FuzzerUtils.checkSum(lArr);
    }

    public void mainTest(String[] strArr1) {

        int i=10, i21=39729, i22=-5, i23=200, i24=42203, i25=14367, i26=199, i27=52561, i28=4, iArr[]=new int[N];
        boolean b2=true;
        double d1=-92.92168;
        short s2=23750;
        float fArr[]=new float[N];

        FuzzerUtils.init(iArr, 36962);
        FuzzerUtils.init(fArr, 1.900F);

        iArr[(i >>> 1) % N] *= iArr[(54031 >>> 1) % N];
        vMeth();
        i |= (int)Test.instanceCount;
        for (i21 = 21; 346 > i21; ++i21) {
            i += i22;
            i += i21;
            if (b2) {
                Test.instanceCount = 192;
            } else {
                Test.instanceCount = i21;
                Test.fFld -= 4845;
                i += i21;
                if (b2) {
                    i22 += (i21 - i22);
                    for (i23 = 2; i23 < 77; ++i23) {
                        i22 *= (int)Test.instanceCount;
                    }
                    for (i25 = 77; i25 > 1; --i25) {
                        i26 = i26;
                        i -= i22;
                        i22 += (i25 | (long)Test.fFld);
                        if (b2) {
                            for (i27 = 1; i27 < 2; i27++) {
                                fArr[i27 + 1] += -214;
                                i26 = (int)Test.instanceCount;
                                i = 31754;
                                i28 += (174 + (i27 * i27));
                                Test.instanceCount += i27;
                                i -= i26;
                            }
                            Test.lArrFld[i21 + 1] = i24;
                            i24 += -152;
                        } else if (b2) {
                            i24 = (int)d1;
                        }
                    }
                } else {
                    s2 = (short)Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i i21 i22 = " + i + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b2 i23 i24 = " + (b2 ? 1 : 0) + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 d1 s2 = " + i28 + "," + Double.doubleToLongBits(d1) + "," + s2);
        FuzzerUtils.out.println("iArr fArr = " + FuzzerUtils.checkSum(iArr) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.sArrFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + FuzzerUtils.checkSum(Test.sArrFld));
        FuzzerUtils.out.println("Test.lArrFld = " + FuzzerUtils.checkSum(Test.lArrFld));

        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
