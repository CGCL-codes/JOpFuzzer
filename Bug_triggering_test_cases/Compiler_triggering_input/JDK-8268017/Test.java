// Generated by Java* Fuzzer test generator (1.0.001). Thu May 27 12:59:46 2021
public class Test {

    public static final int N = 400;

    public static volatile long instanceCount=2440831802940540492L;
    public int iFld=6;
    public static short sFld=28025;
    public static volatile long lArrFld[]=new long[N];
    public volatile short sArrFld[]=new short[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 661433615L);
    }

    public static long lMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long dMeth_check_sum = 0;

    public static double dMeth(int i7, int i8, int i9) {

        double d1=-46.78800;
        float f3=35.495F;
        int i10=-11940, i11=9175, i12=-10, i13=-134, iArr1[]=new int[N];
        boolean b=false;

        FuzzerUtils.init(iArr1, 47730);

        i8 -= (int)d1;
        iArr1[(i9 >>> 1) % N] -= (int)f3;
        i10 = 1;
        do {
            for (i11 = 1; i11 < 6; i11++) {
                d1 -= i11;
            }
            b = b;
            i9 *= (int)d1;
        } while (++i10 < 282);
        i13 = 1;
        do {
            i8 += (i13 - Test.sFld);
            switch ((((i8 >>> 1) % 7) * 5) + 99) {
            case 112:
            case 119:
                f3 += (float)d1;
            case 120:
                i9 = i8;
                i7 += (int)24L;
                iArr1 = iArr1;
                i7 |= (int)Test.instanceCount;
                break;
            case 131:
            case 132:
                i9 >>= -46587;
                break;
            case 107:
                iArr1[i13 + 1] *= i12;
                break;
            case 114:
                Test.instanceCount = i8;
                break;
            }
        } while (++i13 < 167);
        long meth_res = i7 + i8 + i9 + Double.doubleToLongBits(d1) + Float.floatToIntBits(f3) + i10 + i11 + i12 + (b ?
            1 : 0) + i13 + FuzzerUtils.checkSum(iArr1);
        dMeth_check_sum += meth_res;
        return (double)meth_res;
    }

    public static void vMeth(int i4, int i5) {

        int i6=24503, i14=0, i15=1, i16=5, i17=22218, i18=146, i19=-212, i20=-59914, iArr[]=new int[N];
        float f2=0.133F;
        boolean b1=true;
        double d2=-83.118880;

        FuzzerUtils.init(iArr, -6);

        iArr[(i5 >>> 1) % N] >>= Math.abs(i4);
        i6 = 1;
        while (++i6 < 357) {
            i5 -= (int)(f2 * dMeth(117, i4, i6));
        }
        b1 = b1;
        for (i14 = 3; i14 < 380; ++i14) {
            for (i16 = 1; i16 < 4; i16++) {
                i4 = i5;
                i15 = i4;
                i4 += (i16 * i16);
            }
            Test.lArrFld = Test.lArrFld;
            for (i18 = 1; i18 < 4; ++i18) {
                i19 += (-15445 + (i18 * i18));
                for (d2 = 1; 2 > d2; ++d2) {
                    Test.instanceCount += (long)d2;
                    i15 += (int)d2;
                }
            }
        }
        vMeth_check_sum += i4 + i5 + i6 + Float.floatToIntBits(f2) + (b1 ? 1 : 0) + i14 + i15 + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(d2) + i20 + FuzzerUtils.checkSum(iArr);
    }

    public long lMeth(int i2, int i3, long l) {

        float f1=2.806F;
        double d=2.106221, d3=1.69257;
        int i21=-185, i22=-36839, i23=-40180, iArr2[][]=new int[N][N];

        FuzzerUtils.init(iArr2, -4);

        f1 += (float)d;
        f1 = (float)Math.sqrt((++d) - i3);
        Test.sFld = (short)(i3 >>= (i3--));
        vMeth(iFld, -12);
        iFld -= Test.sFld;
        iFld <<= i3;
        i3 <<= (int)Test.instanceCount;
        iFld += iFld;
        for (i21 = 2; i21 < 148; i21++) {
            iArr2[i21 - 1][i21] *= (int)1.506F;
            for (d3 = 1; d3 < 11; ++d3) {
                d = -76.87649;
            }
        }
        long meth_res = i2 + i3 + l + Float.floatToIntBits(f1) + Double.doubleToLongBits(d) + i21 + i22 +
            Double.doubleToLongBits(d3) + i23 + FuzzerUtils.checkSum(iArr2);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void mainTest(String[] strArr1) {

        float f=46.99F, f4=-35.667F;
        int i=-57302, i1=-11, i24=-4, i25=-4, i26=249, i27=-10, i28=9, i29=-11732, iArr3[]=new int[N], iArr4[][]=new
            int[N][N];
        byte by=41;
        double d4=53.64086;

        FuzzerUtils.init(iArr3, 16145);
        FuzzerUtils.init(iArr4, -32321);

        f = Math.abs(++iFld);
        for (i = 357; i > 15; i -= 3) {
            iFld >>= (int)lMeth(242, i, Test.instanceCount);
            i1 *= -28;
            for (f4 = 13; f4 < 220; ++f4) {
                Test.instanceCount += iFld;
                try {
                    iFld = (-37580 % i24);
                    iArr3[(int)(f4 + 1)] = (i24 % 5893);
                    i1 = (i1 % -49965);
                } catch (ArithmeticException a_e) {}
                i1 = i;
                i24 >>= i1;
            }
            iFld += 13;
            iFld += (((i * i) + f4) - iFld);
            i1 *= i1;
            i25 = 1;
            do {
                for (i26 = 1; i26 < 1; i26++) {
                    i1 = (int)Test.instanceCount;
                    iFld += i26;
                    sArrFld[i26 - 1] = (short)1.45073;
                    iFld = i26;
                    Test.instanceCount = by;
                    i24 += iFld;
                }
                d4 = i1;
                d4 += f4;
                i24 = iFld;
                i27 += (i25 * i25);
                for (i28 = 1; 1 > i28; i28++) {
                    i29 = i;
                    try {
                        i27 = (iArr4[i28 + 1][i28 + 1] / i27);
                        iFld = (i24 / i29);
                        i27 = (14409 / i28);
                    } catch (ArithmeticException a_e) {}
                    sArrFld = sArrFld;
                    iFld <<= i27;
                    iArr3[i25] *= (int)Test.instanceCount;
                }
            } while (++i25 < 220);
        }

        FuzzerUtils.out.println("f i i1 = " + Float.floatToIntBits(f) + "," + i + "," + i1);
        FuzzerUtils.out.println("f4 i24 i25 = " + Float.floatToIntBits(f4) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 by = " + i26 + "," + i27 + "," + by);
        FuzzerUtils.out.println("d4 i28 i29 = " + Double.doubleToLongBits(d4) + "," + i28 + "," + i29);
        FuzzerUtils.out.println("iArr3 iArr4 = " + FuzzerUtils.checkSum(iArr3) + "," + FuzzerUtils.checkSum(iArr4));

        FuzzerUtils.out.println("Test.instanceCount iFld Test.sFld = " + Test.instanceCount + "," + iFld + "," +
            Test.sFld);
        FuzzerUtils.out.println("Test.lArrFld sArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(sArrFld));

        FuzzerUtils.out.println("dMeth_check_sum: " + dMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  lMeth ->  lMeth mainTest
//DEBUG  vMeth ->  vMeth lMeth mainTest
//DEBUG  dMeth ->  dMeth vMeth lMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
