// Generated by Java* Fuzzer test generator (1.0.001). Fri May 28 11:38:56 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=0L;
    public static int iFld=-47236;
    public static float fFld=1.122F;
    public boolean bFld=true;
    public byte byFld=-36;
    public static int iArrFld[]=new int[N];
    public boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 8);
    }

    public static long bMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long fMeth_check_sum = 0;

    public static float fMeth(long l2, long l3) {

        int i4=0, i5=-6, i6=-11192, i7=-9, i8=-168, i9=-138, i10=48235, i11=239;
        float f=-1.651F;
        double d1=-1.74101;

        for (i4 = 2; 248 > i4; i4++) {
            switch (((i4 % 2) * 5) + 13) {
            case 21:
                i5 -= i5;
                f -= (float)d1;
                l3 -= Test.instanceCount;
                if (i5 != 0) {
                }
                break;
            case 15:
                for (i6 = 7; i6 > 1; i6 -= 3) {
                    short s1=28990;
                    i7 -= (int)d1;
                    for (i8 = i6; i8 < 4; i8++) {
                        try {
                            Test.iArrFld[i8] = (-52691 / i8);
                            i7 = (Test.iArrFld[i8 + 1] % i9);
                            i7 = (-412419036 / Test.iArrFld[i8]);
                        } catch (ArithmeticException a_e) {}
                        i9 += (-13 + (i8 * i8));
                    }
                    s1 += (short)(i6 * f);
                }
                for (i10 = i4; 7 > i10; ++i10) {
                    i9 *= (int)f;
                    i11 = (int)f;
                }
                break;
            }
        }
        long meth_res = l2 + l3 + i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 +
            i10 + i11;
        fMeth_check_sum += meth_res;
        return (float)meth_res;
    }

    public void vMeth(double d, long l1) {

        int i2=214, i3=-53466, i12=-66, i13=3271, i14=-80;
        boolean b=true;
        float f1=2.946F;
        double dArr[]=new double[N];

        FuzzerUtils.init(dArr, 2.85359);

        for (i2 = 129; i2 > 2; i2--) {
            short s=-24537;
            s = (short)-1.35429;
            fMeth(Test.instanceCount, l1);
            if (true) {
                if (b) continue;
                i3 = i3;
                l1 *= i2;
                dArr[i2] = i2;
            } else if (b) {
                for (i12 = 1; i12 < 12; ++i12) {
                    i3 = i2;
                    for (f1 = 1; 2 > f1; f1++) {
                        byte by2=103;
                        Test.iFld = 9;
                        l1 >>= i14;
                        Test.iFld = by2;
                        bArrFld[(int)(f1 - 1)] = true;
                    }
                }
                vMeth_check_sum += Double.doubleToLongBits(d) + l1 + i2 + i3 + (b ? 1 : 0) + i12 + i13 +
                    Float.floatToIntBits(f1) + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
                return;
            } else {
                Test.fFld += (-771376986L + (i2 * i2));
            }
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + l1 + i2 + i3 + (b ? 1 : 0) + i12 + i13 +
            Float.floatToIntBits(f1) + i14 + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public boolean bMeth(byte by, byte by1, long l) {

        double d2=-1.90049;
        int i15=2, i16=-17, i17=9, i18=-59, i19=-188, i20=-5421, iArr[]=new int[N];

        FuzzerUtils.init(iArr, -44);

        if (bFld) {
            iArr = (iArr = FuzzerUtils.int1array(N, (int)-56019));
            vMeth(d2, l);
            for (i15 = 14; i15 < 265; i15++) {
                for (i17 = 6; 1 < i17; --i17) {
                    for (i19 = 1; i19 < 2; ++i19) {
                        Test.instanceCount += -29479;
                        iArr[i19 - 1] = -1;
                        if (Test.iFld != 0) {
                            return ((int)(by + by1 + l + Double.doubleToLongBits(d2) + i15 + i16 + i17 + i18 + i19 +
                                i20 + FuzzerUtils.checkSum(iArr))) % 2 > 0;
                        }
                        iArr[i17 - 1] = (int)Test.fFld;
                        bFld = bFld;
                        i16 = (int)Test.instanceCount;
                        i20 += (((i19 * i18) + i17) - byFld);
                        l = i18;
                        Test.fFld = Test.iFld;
                    }
                }
            }
            return ((int)(by + by1 + l + Double.doubleToLongBits(d2) + i15 + i16 + i17 + i18 + i19 + i20 +
                FuzzerUtils.checkSum(iArr))) % 2 > 0;
        } else if (bFld) {
            i18 -= i18;
            return ((int)(by + by1 + l + Double.doubleToLongBits(d2) + i15 + i16 + i17 + i18 + i19 + i20 +
                FuzzerUtils.checkSum(iArr))) % 2 > 0;
        } else {
            Test.iFld += (int)Test.fFld;
        }
        long meth_res = by + by1 + l + Double.doubleToLongBits(d2) + i15 + i16 + i17 + i18 + i19 + i20 +
            FuzzerUtils.checkSum(iArr);
        bMeth_check_sum += meth_res;
        return meth_res % 2 > 0;
    }

    public void mainTest(String[] strArr1) {

        int i=3, i1=-223, i21=61778, i22=39540;

        for (i = 230; i > 7; --i) {
            bMeth(byFld, byFld, Test.instanceCount);
            for (i21 = 3; i21 < 113; i21++) {
                double d3=2.93379;
                Test.fFld -= (float)d3;
                i22 = (int)-1.879F;
                Test.iFld *= Test.iFld;
                i22 -= (int)Test.instanceCount;
            }
            if (bFld) continue;
            i1 *= i;
            Test.fFld += (i - Test.instanceCount);
        }

        FuzzerUtils.out.println("i i1 i21 = " + i + "," + i1 + "," + i21);
        FuzzerUtils.out.println("i22 = " + i22);

        FuzzerUtils.out.println("Test.instanceCount Test.iFld Test.fFld = " + Test.instanceCount + "," + Test.iFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("bFld byFld Test.iArrFld = " + (bFld ? 1 : 0) + "," + byFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("bArrFld = " + FuzzerUtils.checkSum(bArrFld));

        FuzzerUtils.out.println("fMeth_check_sum: " + fMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("bMeth_check_sum: " + bMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  bMeth ->  bMeth mainTest
//DEBUG  vMeth ->  vMeth bMeth mainTest
//DEBUG  fMeth ->  fMeth vMeth bMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
