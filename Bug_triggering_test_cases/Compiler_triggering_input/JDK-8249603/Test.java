// Generated by Java* Fuzzer test generator (1.0.001). Tue Apr 28 01:33:14 2020
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2785183424L;
    public static boolean bFld=false;
    public static volatile double dFld=-1.116893;
    public byte byFld=44;
    public static int iFld=50199;
    public int iFld1=48794;
    public static short sArrFld[][]=new short[N][N];
    public float fArrFld[]=new float[N];
    public long lArrFld[]=new long[N];

    static {
        FuzzerUtils.init(Test.sArrFld, (short)20471);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i4=-148, i5=46304, i6=124, iArr[]=new int[N];
        float f=16.488F;
        double d1=-1.73263;
        boolean bArr[]=new boolean[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, 59258);
        FuzzerUtils.init(bArr, false);
        FuzzerUtils.init(lArr, 57898L);

        for (int i3 : iArr) {
            for (i4 = 1; i4 < 4; i4 += 3) {
                i5 += i4;
                i3 = i5;
                i5 -= (int)f;
                bArr[i4] = Test.bFld;
                Test.bFld = Test.bFld;
                d1 *= d1;
                bArr[i4 + 1] = Test.bFld;
                iArr[i4] = -119;
                switch ((((i3 >>> 1) % 6) * 5) + 67) {
                case 97:
                    i6 = 1;
                    do {
                        i3 = (int)Test.instanceCount;
                        i5 >>= i3;
                        i3 = i6;
                    } while ((i6 += 3) < 4);
                case 78:
                    Test.bFld = Test.bFld;
                    break;
                case 82:
                    lArr[i4] = i4;
                    break;
                case 70:
                case 81:
                    i5 += -9658;
                    break;
                case 83:
                }
            }
        }
        vMeth1_check_sum += i4 + i5 + Float.floatToIntBits(f) + Double.doubleToLongBits(d1) + i6 +
            FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(bArr) + FuzzerUtils.checkSum(lArr);
    }

    public static int iMeth(double d, int i2, long l) {


        vMeth1();
        long meth_res = Double.doubleToLongBits(d) + i2 + l;
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void vMeth() {

        int i=-55, i1=-44, i7=45893, i8=-24, i9=207, i10=167, iArr1[]=new int[N];
        float f1=0.712F;
        long l2=2859650648L, lArr1[][]=new long[N][N];
        double d2=-51.95424;

        FuzzerUtils.init(lArr1, 1L);
        FuzzerUtils.init(iArr1, 5);

        for (i = 8; i < 196; ++i) {
            long l1=37L;
            i1 -= iMeth(Test.dFld, i1, l1);
            for (i7 = 1; i7 < 8; ++i7) {
                f1 += Test.instanceCount;
                lArr1[i7 + 1][i7 + 1] = i7;
                i1 += i7;
                for (i9 = 1; i9 < 2; i9 += 3) {
                    switch ((i7 % 10) + 37) {
                    case 37:
                        Test.bFld = Test.bFld;
                        f1 = f1;
                        f1 -= byFld;
                        break;
                    case 38:
                        switch (((i7 % 10) * 5) + 1) {
                        case 20:
                            iArr1[i9 + 1] += i10;
                            Test.sArrFld[i][i7] = (short)i10;
                            i8 *= i10;
                            break;
                        case 13:
                            l2 &= -51305L;
                            break;
                        case 11:
                            fArrFld[(i9 >>> 1) % N] *= f1;
                            break;
                        case 44:
                            l2 -= -1;
                            break;
                        case 43:
                            try {
                                iArr1[i9 + 1] = (i7 % -36092);
                                Test.iFld = (Test.iFld / i7);
                                i10 = (i / 55948);
                            } catch (ArithmeticException a_e) {}
                            break;
                        case 17:
                            iFld1 += i9;
                        case 25:
                            i10 -= byFld;
                        case 15:
                            i10 = 59009;
                            break;
                        case 50:
                            iFld1 = -15474;
                        case 9:
                            i10 = (int)l1;
                            break;
                        default:
                            l2 -= i8;
                        }
                        break;
                    case 39:
                        l1 *= i8;
                        break;
                    case 40:
                        d2 *= f1;
                        break;
                    case 41:
                        d2 += i9;
                        break;
                    case 42:
                        l2 += i9;
                        break;
                    case 43:
                        iArr1[i7] -= i9;
                        break;
                    case 44:
                        l2 += (i9 - l2);
                        break;
                    case 45:
                        iFld1 += (i9 | l2);
                        break;
                    case 46:
                        lArr1[i9 + 1][i - 1] += (long)f1;
                    default:
                        i8 += i9;
                    }
                }
            }
        }
        vMeth_check_sum += i + i1 + i7 + i8 + Float.floatToIntBits(f1) + i9 + i10 + l2 + Double.doubleToLongBits(d2) +
            FuzzerUtils.checkSum(lArr1) + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        int i11=-9, i12=10714, i13=40708, i14=-35, i15=-85, i16=-16906, i17=64767, i18=-947, i19=-18558, i20=53113,
            i21=5, i22=4, iArr2[]=new int[N];
        double d3=-2.98629;
        float f2=44.404F;

        FuzzerUtils.init(iArr2, 30625);

        vMeth();
        for (i11 = 9; i11 < 283; i11 += 2) {
            if (Test.bFld) continue;
            for (d3 = 8; d3 < 183; d3++) {
                Test.instanceCount += (long)d3;
            }
        }
        i12 |= -224;
        lArrFld[(i12 >>> 1) % N] *= 1093;
        for (i14 = 12; 283 > i14; i14++) {
            Test.iFld += i14;
            for (i16 = 1; 93 > i16; i16 += 2) {
                i15 += (i16 - i18);
                i13 ^= iFld1;
                Test.instanceCount = i18;
                Test.iFld >>= -10;
                i19 = 3;
                while ((i19 -= 2) > 0) {
                    i15 -= (int)-1154646548L;
                    i15 = (int)Test.instanceCount;
                }
                switch ((i14 % 8) + 52) {
                case 52:
                    iArr2[i16 - 1] = (int)d3;
                    for (i20 = 1; i20 < 3; ++i20) {
                        i17 = iFld1;
                        i15 *= (int)d3;
                        lArrFld[(i12 >>> 1) % N] += i21;
                        f2 = Test.iFld;
                        iFld1 = i21;
                        i17 += (int)(249L + (i20 * i20));
                        Test.bFld = Test.bFld;
                        i22 += (int)-1625538935756370215L;
                        iArr2[i16] += (int)Test.instanceCount;
                        Test.dFld = 188;
                    }
                    break;
                case 53:
                case 54:
                    i22 += (i16 * i16);
                    break;
                case 55:
                    i21 *= Test.iFld;
                    break;
                case 56:
                case 57:
                    try {
                        iArr2[i14 - 1] = (i11 / Test.iFld);
                        i21 = (i20 / 3);
                        i22 = (iArr2[i14] % i12);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 58:
                case 59:
                    iArr2[i16] -= i13;
                    break;
                default:
                    Test.iFld += Test.iFld;
                }
            }
        }

        FuzzerUtils.out.println("i11 i12 d3 = " + i11 + "," + i12 + "," + Double.doubleToLongBits(d3));
        FuzzerUtils.out.println("i13 i14 i15 = " + i13 + "," + i14 + "," + i15);
        FuzzerUtils.out.println("i16 i17 i18 = " + i16 + "," + i17 + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("f2 i22 iArr2 = " + Float.floatToIntBits(f2) + "," + i22 + "," +
            FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("byFld Test.iFld iFld1 = " + byFld + "," + Test.iFld + "," + iFld1);
        FuzzerUtils.out.println("Test.sArrFld fArrFld lArrFld = " + FuzzerUtils.checkSum(Test.sArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)) + "," + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
