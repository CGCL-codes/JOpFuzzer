// Generated by Java* Fuzzer test generator (1.0.001). Tue Oct 13 08:17:21 2020
public class Test {

    public static final int N = 400;

    public static long instanceCount=-3337474435L;
    public static byte byFld=83;
    public static float fFld=0.225F;
    public static volatile short sFld=22039;
    public static volatile int iFld=-75;
    public static volatile double dArrFld[]=new double[N];
    public static short sArrFld[][]=new short[N][N];

    static {
        FuzzerUtils.init(Test.dArrFld, -2.101915);
        FuzzerUtils.init(Test.sArrFld, (short)-8815);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(long l2, int i4, int i5) {

        double d1=35.16814;
        int i6=-168, i7=38574, i8=-1, i9=140, iArr[]=new int[N];
        boolean b=true;

        FuzzerUtils.init(iArr, 62250);

        d1 /= (Test.byFld | 1);
        i5 |= i4;
        for (i6 = 9; i6 < 234; ++i6) {
            i8 = 1;
            do {
                l2 = Test.instanceCount;
                Test.byFld += (byte)l2;
                i9 = 1;
                while (++i9 < 1) {
                    switch (((i6 >>> 1) % 6) + 28) {
                    case 28:
                        try {
                            i7 = (-9073 % i5);
                            i5 = (42055 / iArr[i9 - 1]);
                            i7 = (i8 / i7);
                        } catch (ArithmeticException a_e) {}
                        i5 += (i9 * i9);
                        switch (((i6 % 5) * 5) + 34) {
                        case 53:
                            iArr[i9] >>>= i6;
                            i7 += (((i9 * i8) + i5) - i5);
                            i4 += (int)Test.fFld;
                        case 59:
                            l2 = Test.instanceCount;
                            break;
                        case 40:
                            Test.fFld -= -14;
                            break;
                        case 49:
                        case 39:
                            i5 += (((i9 * i9) + Test.sFld) - i5);
                        default:
                            i5 += i5;
                        }
                    case 29:
                        Test.fFld = Test.instanceCount;
                        break;
                    case 30:
                        i5 -= i8;
                    case 31:
                        i7 = (int)85L;
                        break;
                    case 32:
                        d1 /= -6;
                        break;
                    case 33:
                        if (b) break;
                        break;
                    }
                }
            } while (++i8 < 7);
        }
        vMeth1_check_sum += l2 + i4 + i5 + Double.doubleToLongBits(d1) + i6 + i7 + i8 + i9 + (b ? 1 : 0) +
            FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(float f, int i2, int i3) {

        int i10=4, i11=7, i12=11, i13=64258, iArr1[][]=new int[N][N];
        double d2=0.71543;
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr1, 58562);
        FuzzerUtils.init(byArr, (byte)6);

        i2 += (int)f;
        vMeth1(-40L, i2, i2);
        f = Test.instanceCount;
        i10 = 1;
        do {
            if (i2 != 0) {
            }
            i2 += i10;
            Test.instanceCount *= (long)d2;
            i11 = 1;
            do {
                iArr1[i10 - 1][i11] = Test.byFld;
                i2 = i11;
                byArr[i10][i11] -= (byte)-20046;
                for (i12 = 1; 1 > i12; ++i12) {
                    d2 -= 0.345F;
                    iArr1[i11][i11] += i3;
                    Test.instanceCount = i12;
                }
            } while (++i11 < 8);
        } while (++i10 < 212);
        long meth_res = Float.floatToIntBits(f) + i2 + i3 + i10 + Double.doubleToLongBits(d2) + i11 + i12 + i13 +
            FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(byArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth(long l, long l1, int i) {

        double d=-10.89856, d3=-61.123717;
        int i1=81, i14=125, i15=234, iArr2[]=new int[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, -27374785L);
        FuzzerUtils.init(iArr2, -4717);

        for (d = 6; 150 > d; ++d) {
            l >>= (lArr[(int)(d)]++);
            i1 >>= (int)(((l % (l1 | 1)) - lMeth(111.298F, i1, i)) + Test.fFld);
            Test.dArrFld[(int)(d - 1)] = i;
            for (i14 = (int)(d); i14 < 11; ++i14) {
                iArr2[(int)(d)] -= i;
                switch ((int)((d % 3) + 118)) {
                case 118:
                    i15 *= i14;
                    i15 += i15;
                    break;
                case 119:
                    l -= (long)Test.fFld;
                    i15 = i;
                    break;
                case 120:
                    l1 += (i14 + i15);
                    Test.sArrFld[i14 + 1][(int)(d)] = (short)-92;
                    d3 -= 53.264F;
                    break;
                }
                iArr2[i14] -= i15;
            }
        }
        vMeth_check_sum += l + l1 + i + Double.doubleToLongBits(d) + i1 + i14 + i15 + Double.doubleToLongBits(d3) +
            FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr2);
    }

    public void mainTest(String[] strArr1) {

        int i16=-15588, i17=113, i18=32809, i19=96, i20=253, i21=11, iArr3[]=new int[N];
        double d4=-117.112557;
        boolean b1=true;
        float f1=-57.385F;

        FuzzerUtils.init(iArr3, -48801);

        vMeth(Test.instanceCount, Test.instanceCount, Test.iFld);
        Test.iFld = i16;
        Test.iFld *= -1;
        i17 = 1;
        do {
            d4 = i16;
            i16 += (((i17 * Test.instanceCount) + i16) - i16);
        } while (++i17 < 357);
        i18 = 1;
        while (++i18 < 376) {
            if (true) {
                i19 = 1;
                while (++i19 < 67) {
                    if (b1) {
                        Test.instanceCount >>= 18803;
                        if (b1) break;
                        Test.iFld += (i19 - i16);
                        switch (((i19 % 7) * 5) + 84) {
                        case 115:
                            for (i20 = i19; i20 < 1; i20++) {
                                Test.instanceCount >>= i17;
                                Test.iFld += (229 + (i20 * i20));
                                i21 = (int)Test.fFld;
                                if (b1) break;
                                iArr3[i19] >>>= Test.sFld;
                                i21 += (i20 * i20);
                                Test.byFld -= (byte)Test.instanceCount;
                                Test.dArrFld[i18] -= i19;
                                i16 <<= i19;
                                Test.iFld += (i20 * i20);
                            }
                            f1 = 1;
                            while (--f1 > 0) {
                                iArr3[(i19 >>> 1) % N] += i17;
                                i21 |= Test.byFld;
                                i21 += (int)f1;
                                Test.dArrFld[i19 - 1] *= i17;
                            }
                            break;
                        case 99:
                        case 86:
                            iArr3[i19 - 1] = (int)Test.instanceCount;
                        case 118:
                            Test.iFld *= Test.iFld;
                            break;
                        case 107:
                            Test.instanceCount += Test.iFld;
                        case 117:
                            Test.fFld += 105.42F;
                            break;
                        case 88:
                            i16 = i18;
                            break;
                        default:
                            iArr3[i18 - 1] <<= (int)Test.instanceCount;
                        }
                    } else if (b1) {
                        Test.iFld += (i19 * Test.fFld);
                    } else {
                        Test.sFld = (short)i16;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i16 i17 d4 = " + i16 + "," + i17 + "," + Double.doubleToLongBits(d4));
        FuzzerUtils.out.println("i18 i19 b1 = " + i18 + "," + i19 + "," + (b1 ? 1 : 0));
        FuzzerUtils.out.println("i20 i21 f1 = " + i20 + "," + i21 + "," + Float.floatToIntBits(f1));
        FuzzerUtils.out.println("iArr3 = " + FuzzerUtils.checkSum(iArr3));

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.fFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Float.floatToIntBits(Test.fFld));
        FuzzerUtils.out.println("Test.sFld Test.iFld Test.dArrFld = " + Test.sFld + "," + Test.iFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.sArrFld = " + FuzzerUtils.checkSum(Test.sArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
