// Generated by Java* Fuzzer test generator (1.0.001). Wed Apr  4 16:34:11 2018
public class Test {

    public static final int N = 400;

    public static long instanceCount=-7802949235176486119L;
    public static byte byFld=65;
    public static double dFld=-108.30138;
    public static int iFld=10;
    public static short sFld=-19334;
    public static int iArrFld[]=new int[N];
    public static boolean bArrFld[]=new boolean[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -14);
        FuzzerUtils.init(Test.bArrFld, false);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l1, int i2) {

        int i3=95, i4=160, i5=70, i6=85, i7=67, i9=251, i10=-111, i11=-42760, i13=44680, iArr[]=new int[N],
            iArr1[][]=new int[N][N];
        float f=-65.1010F, fArr[]=new float[N];
        short s=-23256, sArr[]=new short[N];
        boolean b=false;
        long lArr[]=new long[N];
        double dArr[]=new double[N];
        byte byArr[][]=new byte[N][N];

        FuzzerUtils.init(iArr, -217);
        FuzzerUtils.init(lArr, 2L);
        FuzzerUtils.init(dArr, -25.94062);
        FuzzerUtils.init(byArr, (byte)13);
        FuzzerUtils.init(sArr, (short)-745);
        FuzzerUtils.init(fArr, 2.496F);
        FuzzerUtils.init(iArr1, 224);

        i2 += i2;
        i3 = i2;
        for (i4 = 344; 15 < i4; --i4) {
            i2 = i3;
        }
        for (i6 = 7; i6 < 222; i6++) {
            if (true) continue;
            f += f;
            Test.instanceCount += i6;
            switch ((i6 % 2) + 28) {
            case 28:
                f -= i3;
                switch (i6 + 32) {
                case 32:
                    for (i9 = 1; 7 > i9; ++i9) {
                        l1 = l1;
                        lArr[i9 - 1] -= i9;
                        lArr[i6 + 1] += Test.instanceCount;
                    }
                    break;
                case 33:
                    try {
                        i5 = (i10 / i7);
                        i5 = (7682 / i2);
                        i5 = (-17444 % i11);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 34:
                    i10 = (int)l1;
                    break;
                case 35:
                    i7 = s;
                    break;
                case 36:
                    i10 += (i6 + i4);
                    break;
                case 37:
                    i2 = 1;
                    break;
                case 38:
                    Test.instanceCount = -8;
                    break;
                case 39:
                    i7 = (int)9L;
                case 40:
                    i7 += i6;
                    break;
                case 41:
                    i7 -= i3;
                    break;
                case 42:
                case 43:
                    l1 += (i6 * i6);
                case 44:
                    iArr[i6 - 1] -= (int)l1;
                    break;
                case 45:
                    try {
                        i11 = (i9 % iArr[i6]);
                        i11 = (i7 % -1700193649);
                        iArr[i6 - 1] = (iArr[i6] % i5);
                    } catch (ArithmeticException a_e) {}
                    break;
                case 46:
                    dArr[i6] += i7;
                case 47:
                    f *= f;
                    break;
                case 48:
                    byArr[i6 - 1][i6] >>= (byte)Test.instanceCount;
                case 49:
                    i10 -= i2;
                    break;
                case 50:
                    Test.byFld = (byte)i3;
                case 51:
                    i2 += i6;
                    break;
                case 52:
                    i5 += i6;
                    break;
                case 53:
                    i7 %= -38672;
                    break;
                case 54:
                    l1 -= Test.instanceCount;
                case 55:
                    i3 >>= i11;
                    break;
                case 56:
                    sArr[i6 + 1] -= (short)l1;
                    break;
                case 57:
                    l1 += (((i6 * i11) + l1) - l1);
                    break;
                case 58:
                    i2 *= -216;
                    break;
                case 59:
                    l1 *= (long)Test.dFld;
                    break;
                case 60:
                    s = (short)i5;
                case 61:
                    i3 = i4;
                    break;
                case 62:
                    Test.instanceCount &= 125;
                    break;
                case 63:
                    f = i6;
                    break;
                case 64:
                    s *= (short)i10;
                case 65:
                    i3 += 3;
                    break;
                case 66:
                    Test.instanceCount = i2;
                case 67:
                    i11 = i13;
                    break;
                case 68:
                    l1 += (((i6 * i7) + i4) - i10);
                case 69:
                    i10 += (i6 ^ i9);
                case 70:
                    i10 = -214;
                case 71:
                    i5 = i11;
                    break;
                case 72:
                case 73:
                    i10 %= -25409;
                    break;
                case 74:
                    Test.byFld += (byte)(((i6 * i7) + i3) - i4);
                    break;
                case 75:
                    fArr = fArr;
                    break;
                case 76:
                    i7 = (int)Test.dFld;
                    break;
                case 77:
                    if (true) continue;
                    break;
                case 78:
                    i11 >>>= i7;
                    break;
                case 79:
                    iArr[i6 + 1] *= (int)l1;
                    break;
                case 80:
                    if (b) break;
                    break;
                case 81:
                    s = (short)i2;
                    break;
                case 82:
                case 83:
                    i3 = 2;
                    break;
                case 84:
                    iArr[i6 + 1] = (int)f;
                    break;
                case 85:
                    lArr[i6 - 1] -= l1;
                    break;
                case 86:
                    l1 += (i6 ^ i5);
                    break;
                case 87:
                    i5 -= i9;
                    break;
                case 88:
                case 89:
                    l1 = i5;
                    break;
                case 90:
                    iArr1 = iArr1;
                    break;
                case 91:
                    l1 += (((i6 * l1) + Test.instanceCount) - i13);
                    break;
                case 92:
                    b = b;
                    break;
                case 93:
                    i2 = i13;
                    break;
                case 94:
                    Test.dFld = l1;
                    break;
                case 95:
                    s -= (short)i10;
                case 96:
                    i13 %= (int)(i6 | 1);
                case 97:
                    i13 += i6;
                    break;
                case 98:
                    i2 = (int)Test.dFld;
                    break;
                case 99:
                    i10 = i6;
                    break;
                case 100:
                    f += i6;
                    break;
                case 101:
                    i11 += (((i6 * i5) + i6) - f);
                    break;
                }
                break;
            case 29:
                f += i3;
                break;
            default:
                i10 += (int)-103.245F;
            }
        }
        vMeth2_check_sum += l1 + i2 + i3 + i4 + i5 + i6 + i7 + Float.floatToIntBits(f) + i9 + i10 + i11 + s + i13 + (b
            ? 1 : 0) + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(byArr) +
            FuzzerUtils.checkSum(sArr) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) +
            FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i=-3, i1=35875, i14=5, i15=9;
        long l2=4187023738L;
        boolean b1=false;

        for (i = 16; i < 366; i++) {
            i1 = (int)160L;
        }
        i1 ^= i1;
        vMeth2(Test.instanceCount, i1);
        if (b1) {
            Test.instanceCount = Test.instanceCount;
            i1 <<= i1;
            for (i14 = 6; i14 < 135; ++i14) {
                i1 += (int)Test.instanceCount;
                l2 += (((i14 * l2) + i) - i15);
                i15 -= 17692;
                Test.iArrFld[i14] >>= 9380;
                l2 += i1;
                Test.iArrFld[i14 - 1] = i14;
                Test.instanceCount &= i14;
            }
        } else {
            Test.byFld = (byte)i1;
        }
        vMeth1_check_sum += i + i1 + i14 + i15 + l2 + (b1 ? 1 : 0);
    }

    public static void vMeth(long l) {

        int i16=-7, i17=17511, i18=-13, i19=-66;
        float f1=93.409F;
        short s1=-8403;
        boolean b2=true;
        long lArr1[]=new long[N];

        FuzzerUtils.init(lArr1, -251817003L);

        vMeth1();
        Test.iFld += Test.byFld;
        for (i16 = 7; i16 < 142; ++i16) {
            if (b2) {
                f1 = s1;
                i17 *= (int)f1;
            } else {
                Test.dFld -= Test.iFld;
                f1 += Test.iFld;
                l += i17;
                vMeth_check_sum += l + i16 + i17 + Float.floatToIntBits(f1) + s1 + (b2 ? 1 : 0) + i18 + i19 +
                    FuzzerUtils.checkSum(lArr1);
                return;
            }
            l += (i16 * i16);
            for (i18 = 12; i18 > 1; i18 -= 2) {
                i19 += i18;
                i19 += i17;
                Test.iArrFld[i16 + 1] = i16;
                Test.bArrFld[i16] = b2;
            }
        }
        vMeth_check_sum += l + i16 + i17 + Float.floatToIntBits(f1) + s1 + (b2 ? 1 : 0) + i18 + i19 +
            FuzzerUtils.checkSum(lArr1);
    }

    public void mainTest(String[] strArr1) {

        int i20=-33, i21=29546, i22=-48, i23=18620, i24=-97, i25=-64, i26=6290, i27=62739;
        boolean b3=true;
        float f2=2.727F;

        vMeth(Test.instanceCount);
        i20 = 1;
        while (++i20 < 339) {
            switch ((i20 % 2) + 109) {
            case 109:
                for (i21 = 1; 74 > i21; ++i21) {
                    Test.iFld = 1;
                    switch (((i20 % 10) * 5) + 17) {
                    case 28:
                        i22 |= i22;
                        break;
                    case 56:
                        b3 = b3;
                        Test.sFld += (short)i22;
                        f2 -= f2;
                        for (i23 = 2; i23 > i20; i23 -= 3) {
                            Test.sFld <<= (short)Test.instanceCount;
                            Test.iArrFld[i23 - 1] &= (int)Test.instanceCount;
                            i22 += (int)Test.instanceCount;
                            i25 += (i23 * i20);
                            Test.instanceCount += Test.iFld;
                            i25 >>= i23;
                            Test.iFld >>= (int)Test.instanceCount;
                            Test.iArrFld[i20 - 1] >>= Test.iFld;
                        }
                    case 26:
                        for (i26 = 1; i26 < 2; i26++) {
                            Test.instanceCount *= i20;
                            i27 >>= i22;
                            Test.instanceCount += (1196L + (i26 * i26));
                            i22 = i24;
                            switch (((i21 % 5) * 5) + 36) {
                            case 43:
                                Test.byFld += (byte)i24;
                                break;
                            case 54:
                                Test.iArrFld = Test.iArrFld;
                                i24 = i26;
                                break;
                            case 42:
                                i27 = i23;
                                b3 = false;
                                break;
                            case 57:
                                i27 -= 148;
                                break;
                            case 59:
                                b3 = b3;
                                break;
                            default:
                                Test.dFld = Test.iFld;
                            }
                        }
                    case 67:
                        Test.iArrFld[i21] = i23;
                        break;
                    case 57:
                    case 66:
                        Test.iArrFld[i20] = (int)-2L;
                        break;
                    case 36:
                        Test.iFld %= (int)(Test.byFld | 1);
                        break;
                    case 58:
                        i27 = (int)Test.instanceCount;
                        break;
                    case 44:
                        Test.iFld += i21;
                        break;
                    case 48:
                        i27 += (i21 * i21);
                        break;
                    }
                }
                break;
            case 110:
                Test.iArrFld[i20 - 1] = 34326;
            default:
                Test.iFld >>>= Test.iFld;
            }
        }

        FuzzerUtils.out.println("i20 i21 i22 = " + i20 + "," + i21 + "," + i22);
        FuzzerUtils.out.println("b3 f2 i23 = " + (b3 ? 1 : 0) + "," + Float.floatToIntBits(f2) + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.dFld = " + Test.instanceCount + "," + Test.byFld +
            "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.iFld Test.sFld Test.iArrFld = " + Test.iFld + "," + Test.sFld + "," +
            FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("Test.bArrFld = " + FuzzerUtils.checkSum(Test.bArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
