// Generated by Java* Fuzzer test generator (1.0.001). Fri Sep  3 08:31:44 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-2500080496313342094L;
    public static float fFld=42.19F;
    public static int iFld=-51171;
    public static double dFld=18.11369;
    public static byte byFld=-64;
    public static int iArrFld[]=new int[N];
    public float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.iArrFld, -169);
    }

    public static long iMeth_check_sum = 0;
    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i3, int i4) {

        int i5=-20962, i6=0, i7=-24800, i8=-3, i9=-5, i10=-39978, i11=-57694;
        boolean b=true;
        byte by=-19, byArr[]=new byte[N];
        long lArr[]=new long[N];

        FuzzerUtils.init(byArr, (byte)118);
        FuzzerUtils.init(lArr, 38448L);

        i3 *= i4;
        for (i5 = 225; i5 > 11; i5 -= 3) {
            for (i7 = 22; i7 > 1; i7--) {
                switch (((10586 >>> 1) % 7) + 87) {
                case 87:
                    i3 = i9;
                    i9 += i7;
                    i8 <<= i8;
                    if (b) continue;
                    break;
                case 88:
                    for (i10 = 1; 2 > i10; i10++) {
                        try {
                            i8 = (i7 / Test.iArrFld[i10]);
                            Test.iArrFld[i10 + 1] = (i7 % -48649);
                            i6 = (Test.iArrFld[i10 - 1] / 1750644534);
                        } catch (ArithmeticException a_e) {}
                    }
                    b = b;
                    i9 -= i11;
                case 89:
                    i8 += (i7 ^ i4);
                    i8 -= i3;
                    Test.fFld = i8;
                    break;
                case 90:
                    byArr[i7 + 1] -= (byte)96L;
                    break;
                case 91:
                    by += (byte)i7;
                    break;
                case 92:
                    i3 = -58584;
                    break;
                case 93:
                    Test.iArrFld[i5 - 1] -= (int)Test.instanceCount;
                    break;
                default:
                    lArr[i7 + 1] = Test.instanceCount;
                }
            }
        }
        vMeth1_check_sum += i3 + i4 + i5 + i6 + i7 + i8 + i9 + (b ? 1 : 0) + i10 + i11 + by +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth() {

        int i12=-7, i13=-15908;

        vMeth1(Test.iFld, 26100);
        for (i12 = 16; i12 < 328; i12 += 2) {
            Test.iFld >>>= i13;
            Test.fFld += (29451 + (i12 * i12));
            Test.fFld -= (float)Test.dFld;
            Test.iArrFld = Test.iArrFld;
        }
        Test.iFld = (int)Test.fFld;
        i13 -= (int)Test.fFld;
        vMeth_check_sum += i12 + i13;
    }

    public int iMeth(float f, int i) {

        int i1=-12, i2=5, i14=-32947, i15=0, i16=-49006;
        boolean b1=true;
        byte by1=63;
        long lArr1[]=new long[N];
        float fArr[]=new float[N];

        FuzzerUtils.init(lArr1, -28077L);
        FuzzerUtils.init(fArr, 0.502F);

        for (i1 = 15; i1 < 362; i1++) {
            if (47423L < Test.iArrFld[i1]) continue;
        }
        if (b1) {
            vMeth();
            i = i1;
            for (i14 = 10; 316 > i14; ++i14) {
                i15 = (int)Test.fFld;
                i16 = 1;
                do {
                    if (b1) continue;
                    i2 = i;
                    i15 >>>= i1;
                    Test.iArrFld[i16] = i15;
                } while (++i16 < 5);
                lArr1[i14] += Test.instanceCount;
                by1 |= (byte)Test.instanceCount;
                fArr[i14] = i15;
            }
        } else if (b1) {
            i = (int)Test.instanceCount;
        }
        long meth_res = Float.floatToIntBits(f) + i + i1 + i2 + i14 + i15 + i16 + (b1 ? 1 : 0) + by1 +
            FuzzerUtils.checkSum(lArr1) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public void mainTest(String[] strArr1) {

        int i17=-26852, i18=-28975, i19=-10192, i20=14, i21=-11585, i22=-11, i23=36, i24=200, i25=10;
        boolean b2=true;
        float f1=-1.836F;
        long l=13895L, lArr2[]=new long[N];

        FuzzerUtils.init(lArr2, -1439859349L);

        Test.instanceCount += (iMeth(Test.fFld, Test.iFld) * Test.iFld);
        i17 = 1;
        do {
            for (i18 = i17; i18 < 88; i18++) {
                Test.iArrFld[i18 + 1] = (int)Test.instanceCount;
                b2 = b2;
                try {
                    i19 = (Test.iFld % 50770);
                    i19 = (Test.iArrFld[i18] / i19);
                    i19 = (2308 / Test.iFld);
                } catch (ArithmeticException a_e) {}
                Test.dFld += i19;
                Test.instanceCount -= i17;
            }
            lArr2[i17 + 1] += i18;
            fArrFld[i17 + 1] += Test.iFld;
            i19 -= (int)Test.fFld;
            for (f1 = 1; f1 < 88; f1 += 2) {
                Test.iFld = i18;
                for (i21 = 1; 3 > i21; ++i21) {
                    try {
                        i20 = (i18 / 45599);
                        Test.iFld = (i17 / 72);
                        Test.iArrFld[i17 - 1] = (i20 / -36577);
                    } catch (ArithmeticException a_e) {}
                }
                Test.iFld += (int)(((f1 * Test.instanceCount) + i22) - Test.iFld);
            }
            i20 -= i20;
            i23 = 1;
            do {
                Test.instanceCount = i20;
                Test.iArrFld[i23 + 1] *= i20;
                Test.fFld *= Test.fFld;
                Test.byFld = (byte)i23;
                for (i24 = 1; i24 < 1; ++i24) {
                    switch ((((i19 >>> 1) % 6) * 5) + 21) {
                    case 32:
                        switch (((i24 % 5) * 5) + 94) {
                        case 119:
                            i19 += (-217 + (i24 * i24));
                            break;
                        case 104:
                            Test.iArrFld[i17] = i17;
                        case 107:
                            Test.iArrFld[i23 - 1] = i21;
                            if (b2) break;
                            Test.iFld += i24;
                            break;
                        case 113:
                            Test.instanceCount -= i22;
                            break;
                        case 105:
                            Test.instanceCount |= i24;
                        default:
                            Test.iArrFld = FuzzerUtils.int1array(N, (int)26);
                        }
                        break;
                    case 28:
                        b2 = b2;
                    case 43:
                        Test.iArrFld = Test.iArrFld;
                    case 31:
                        i20 >>= i25;
                        break;
                    case 23:
                        b2 = true;
                        break;
                    case 45:
                        l >>= i18;
                        break;
                    }
                }
            } while (++i23 < 88);
        } while (++i17 < 285);

        FuzzerUtils.out.println("i17 i18 i19 = " + i17 + "," + i18 + "," + i19);
        FuzzerUtils.out.println("b2 f1 i20 = " + (b2 ? 1 : 0) + "," + Float.floatToIntBits(f1) + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 l = " + i24 + "," + i25 + "," + l);
        FuzzerUtils.out.println("lArr2 = " + FuzzerUtils.checkSum(lArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.iFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.dFld Test.byFld Test.iArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.byFld + "," + FuzzerUtils.checkSum(Test.iArrFld));
        FuzzerUtils.out.println("fArrFld = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  iMeth ->  iMeth mainTest
//DEBUG  vMeth ->  vMeth iMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth iMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
