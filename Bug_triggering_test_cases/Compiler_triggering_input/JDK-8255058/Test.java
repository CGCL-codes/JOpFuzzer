// Generated by Java* Fuzzer test generator (1.0.001). Sat Oct 17 17:37:18 2020
public class Test {

    public static final int N = 400;

    public static long instanceCount=-10L;
    public static boolean bFld=false;
    public static short sFld=-5415;
    public double dFld=-97.21841;
    public int iFld=14417;
    public static volatile byte byFld=-63;
    public long lArrFld[]=new long[N];

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i5, int i6) {

        float f=83.747F, fArr[]=new float[N];
        int i7=-24521, i8=-147, i9=50687, i10=27361, iArr[]=new int[N];
        double d1=118.7149;
        byte by1=40;
        boolean b2=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(fArr, 0.72F);
        FuzzerUtils.init(lArr, 3674397118L);
        FuzzerUtils.init(iArr, -8);

        for (f = 21; f < 396; ++f) {
            if (false) break;
            if (b2) {
                i8 = 1;
                do {
                    Test.instanceCount += i8;
                    fArr[(int)(f)] += i5;
                    for (i9 = 1; 1 > i9; ++i9) {
                        Test.instanceCount = Test.instanceCount;
                        lArr[i9 + 1] -= (long)-27.61470;
                        i10 -= (int)d1;
                        i6 = (int)Test.instanceCount;
                        try {
                            i7 = (iArr[i9 - 1] % i7);
                            iArr[(int)(f)] = (1033674248 / i8);
                            iArr[i8] = (i8 % i8);
                        } catch (ArithmeticException a_e) {}
                        i5 &= by1;
                    }
                } while (++i8 < 5);
                i10 -= i9;
                if (b2) continue;
            } else {
                if (b2) continue;
            }
        }
        vMeth2_check_sum += i5 + i6 + Float.floatToIntBits(f) + i7 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + by1
            + (b2 ? 1 : 0) + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr)) + FuzzerUtils.checkSum(lArr) +
            FuzzerUtils.checkSum(iArr);
    }

    public static void vMeth1(boolean b, boolean b1, short s) {

        int i1=112, i2=5, i3=-55577, i4=-232, i11=235, iArr1[]=new int[N], iArr2[]=new int[N];
        float f1=0.819F;
        double d2=-115.20172, dArr[]=new double[N];
        long l=-9L, lArr1[]=new long[N];
        byte by2=-13;
        short sArr[]=new short[N];

        FuzzerUtils.init(iArr1, 14);
        FuzzerUtils.init(sArr, (short)6510);
        FuzzerUtils.init(iArr2, 36545);
        FuzzerUtils.init(dArr, -29.2100);
        FuzzerUtils.init(lArr1, 6485217352874679866L);

        for (i1 = 10; i1 < 213; ++i1) {
            for (i3 = 1; i3 < 8; i3++) {
                vMeth2(i3, i4);
                f1 *= (float)d2;
                iArr1[i3 - 1] = i1;
                i2 <<= i4;
                i2 = i1;
                iArr1[i1 + 1] = i4;
                for (l = i3; l < 2; ++l) {
                    int i12=21885;
                    f1 += (l + i1);
                    i2 = (int)981610892L;
                    switch (i3 + 27) {
                    case 27:
                        iArr1[i3] = (int)Test.instanceCount;
                        i2 >>>= i11;
                        sArr[i1 - 1] += (short)l;
                        break;
                    case 28:
                    case 29:
                        i11 = by2;
                    case 30:
                        i2 = i4;
                        break;
                    case 31:
                        if (false) break;
                    case 32:
                        f1 += (((l * Test.instanceCount) + i11) - i3);
                        break;
                    case 33:
                        try {
                            i11 = (i4 / i4);
                            i2 = (-195 / i11);
                            i11 = (227 / i11);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 34:
                        i2 += i4;
                        break;
                    case 35:
                        s = by2;
                        break;
                    case 36:
                        iArr1 = FuzzerUtils.int1array(N, (int)-66);
                        break;
                    case 37:
                        f1 *= i4;
                        break;
                    case 38:
                        i2 = s;
                        break;
                    case 39:
                        i4 = -63473;
                        break;
                    case 40:
                        Test.instanceCount = (long)63.504F;
                        break;
                    case 41:
                        i2 -= i11;
                        break;
                    case 42:
                        if (i4 != 0) {
                            vMeth1_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + s + i1 + i2 + i3 + i4 +
                                Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + l + i11 + by2 +
                                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2)
                                + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
                            return;
                        }
                        break;
                    case 43:
                        d2 -= 11615;
                        break;
                    case 44:
                        i2 >>= i1;
                    case 45:
                        i4 += i4;
                        break;
                    case 46:
                    case 47:
                        i11 += (int)(((l * i1) + i11) - by2);
                    case 48:
                        Test.instanceCount += (((l * f1) + f1) - f1);
                    case 49:
                        Test.instanceCount *= i4;
                        break;
                    case 50:
                        i2 >>>= i3;
                        break;
                    case 51:
                        f1 += l;
                        break;
                    case 52:
                        try {
                            i4 = (i2 / i2);
                            i4 = (i11 / i3);
                            i11 = (-214 / iArr2[i1 - 1]);
                        } catch (ArithmeticException a_e) {}
                        break;
                    case 53:
                        dArr = dArr;
                        break;
                    case 54:
                        i2 = i11;
                        break;
                    case 55:
                        i11 = -175;
                        break;
                    case 56:
                        i11 = i1;
                    case 57:
                        d2 -= 199;
                    case 58:
                        i11 &= i2;
                        break;
                    case 59:
                        lArr1[i3 - 1] = Test.instanceCount;
                        break;
                    case 60:
                        if (i11 != 0) {
                            vMeth1_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + s + i1 + i2 + i3 + i4 +
                                Float.floatToIntBits(f1) + Double.doubleToLongBits(d2) + l + i11 + by2 +
                                FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr) + FuzzerUtils.checkSum(iArr2)
                                + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(lArr1);
                            return;
                        }
                        break;
                    case 61:
                        lArr1[(i2 >>> 1) % N] <<= s;
                        break;
                    case 62:
                        d2 *= i1;
                        break;
                    case 63:
                        Test.instanceCount += (l | i2);
                    case 64:
                        d2 = f1;
                        break;
                    case 65:
                        i11 <<= 10;
                        break;
                    case 66:
                        iArr2[(int)(l + 1)] >>= (int)Test.instanceCount;
                        break;
                    case 67:
                        Test.instanceCount += l;
                        break;
                    case 68:
                        i4 += (int)(((l * i2) + i4) - l);
                        break;
                    case 69:
                        i11 += (int)(l * l);
                        break;
                    case 70:
                        if (b) break;
                        break;
                    case 71:
                        Test.instanceCount *= 20156;
                        break;
                    case 72:
                        d2 -= f1;
                        break;
                    case 73:
                        i11 = (int)-9.291F;
                    case 74:
                    case 75:
                        i2 <<= by2;
                        break;
                    case 76:
                        if (b1) break;
                        break;
                    case 77:
                        i2 |= i4;
                        break;
                    case 78:
                        i11 *= (int)l;
                        break;
                    case 79:
                        Test.instanceCount *= i3;
                    case 80:
                        Test.instanceCount *= (long)d2;
                        break;
                    case 81:
                        i4 += (int)(((l * i11) + i2) - f1);
                        break;
                    case 82:
                        i11 -= i12;
                        break;
                    case 83:
                        f1 *= (float)d2;
                    case 84:
                        i2 = i2;
                        break;
                    case 85:
                        Test.instanceCount >>= 234;
                        break;
                    case 86:
                        i4 = i11;
                    case 87:
                        iArr2[i1] -= 21738;
                        break;
                    case 88:
                        Test.instanceCount -= i11;
                        break;
                    case 89:
                        iArr2[i1 + 1] = i11;
                    case 90:
                        dArr[(int)(l - 1)] += i2;
                        break;
                    case 91:
                        f1 = (float)d2;
                    case 92:
                        i12 = (int)3984834105344117898L;
                        break;
                    case 93:
                        i12 = (int)3661655187L;
                    case 94:
                        by2 = (byte)f1;
                    case 95:
                        i12 >>= i12;
                        break;
                    case 96:
                        i11 = (int)l;
                    default:
                        if (b1) break;
                    }
                }
            }
        }
        vMeth1_check_sum += (b ? 1 : 0) + (b1 ? 1 : 0) + s + i1 + i2 + i3 + i4 + Float.floatToIntBits(f1) +
            Double.doubleToLongBits(d2) + l + i11 + by2 + FuzzerUtils.checkSum(iArr1) + FuzzerUtils.checkSum(sArr) +
            FuzzerUtils.checkSum(iArr2) + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) +
            FuzzerUtils.checkSum(lArr1);
    }

    public static void vMeth() {

        double d=-23.110769;
        int i=-248, i13=-28960, i14=-64948, i15=5, i16=5, iArr3[]=new int[N];
        byte by=44, byArr[][]=new byte[N][N];
        float f2=101.708F;
        long lArr2[]=new long[N];

        FuzzerUtils.init(byArr, (byte)-28);
        FuzzerUtils.init(iArr3, -68);
        FuzzerUtils.init(lArr2, 49024L);

        d -= (i = (int)((i += i) - (d - Test.instanceCount)));
        byArr[(i >>> 1) % N][(i >>> 1) % N] += (byte)(i - Math.max((long)(d - i), by % (i | 1)));
        vMeth1(false, Test.bFld, (short)(6205));
        i = i;
        for (i13 = 2; 139 > i13; ++i13) {
            for (i15 = 1; 11 > i15; ++i15) {
                i16 = Test.sFld;
                i16 += (int)-1.45904;
                i += (int)27.713F;
            }
            i -= (int)Test.instanceCount;
            iArr3[i13 + 1] = (int)f2;
            lArr2 = FuzzerUtils.long1array(N, (long)38514L);
            Test.bFld = Test.bFld;
            i = Test.sFld;
            Test.instanceCount = Test.sFld;
        }
        vMeth_check_sum += Double.doubleToLongBits(d) + i + by + i13 + i14 + i15 + i16 + Float.floatToIntBits(f2) +
            FuzzerUtils.checkSum(byArr) + FuzzerUtils.checkSum(iArr3) + FuzzerUtils.checkSum(lArr2);
    }

    public void mainTest(String[] strArr1) {

        int i18=28275, i19=-5, i20=251, i21=5, i22=3, i23=47481, i24=-5, i25=-25398, i26=5, i27=86, iArr4[]=new int[N];
        float f3=2.557F, fArr1[][]=new float[N][N];

        FuzzerUtils.init(iArr4, -8);
        FuzzerUtils.init(fArr1, -109.213F);

        vMeth();
        for (int i17 : iArr4) {
            for (i18 = 3; i18 < 63; i18 += 2) {
                if (Test.bFld) continue;
                i19 += (i18 * i17);
                dFld -= iFld;
            }
            i17 = (int)Test.instanceCount;
            for (i20 = 3; i20 < 63; ++i20) {
                Test.byFld += (byte)(((i20 * Test.sFld) + i21) - i19);
                for (i22 = 1; i22 < 2; ++i22) {
                    i21 = i18;
                    i23 = -13;
                    i19 -= i21;
                    lArrFld[i20] += 20695;
                    iFld += (i22 + f3);
                    iArr4[i20] = i20;
                    iFld -= (int)Test.instanceCount;
                }
                switch (((i20 % 6) * 5) + 14) {
                case 20:
                    for (i24 = 1; i24 < 2; ++i24) {
                        iArr4[i24 + 1] = i22;
                    }
                    f3 = f3;
                    break;
                case 38:
                    i17 >>= i18;
                case 18:
                    for (i26 = 1; i26 < 2; i26++) {
                        iArr4[i26 - 1] -= (int)Test.instanceCount;
                        iFld += i27;
                        Test.instanceCount -= Test.instanceCount;
                        fArr1[i26 - 1] = fArr1[i26 - 1];
                        iArr4[i20 + 1] >>= 30251;
                        iFld += i25;
                    }
                    i23 += (-7 + (i20 * i20));
                    break;
                case 22:
                    lArrFld[i20 - 1] <<= Test.instanceCount;
                    break;
                case 32:
                    f3 -= 171;
                    break;
                case 36:
                    i17 = i24;
                default:
                    dFld -= Test.instanceCount;
                }
            }
        }

        FuzzerUtils.out.println("i18 i19 i20 = " + i18 + "," + i19 + "," + i20);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("f3 i24 i25 = " + Float.floatToIntBits(f3) + "," + i24 + "," + i25);
        FuzzerUtils.out.println("i26 i27 iArr4 = " + i26 + "," + i27 + "," + FuzzerUtils.checkSum(iArr4));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.sFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.sFld);
        FuzzerUtils.out.println("dFld iFld Test.byFld = " + Double.doubleToLongBits(dFld) + "," + iFld + "," +
            Test.byFld);
        FuzzerUtils.out.println("lArrFld = " + FuzzerUtils.checkSum(lArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
