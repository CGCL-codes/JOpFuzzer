// Generated by Java* Fuzzer test generator (1.0.001). Sun Aug 25 05:52:19 2019
public class Test {

    public static final int N = 400;

    public static long instanceCount=42504L;
    public static float fFld=-45.704F;
    public static boolean bFld=false;
    public static double dFld=2.89240;
    public static int iFld=9;
    public static boolean bArrFld[]=new boolean[N];
    public static long lArrFld[]=new long[N];
    public double dArrFld[]=new double[N];
    public int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.bArrFld, false);
        FuzzerUtils.init(Test.lArrFld, 6L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(int i4, int i5, int i6) {

        int i8=-2, i9=-22393, i10=-60741, iArr[]=new int[N];
        double d1=95.22228;
        long lArr[]=new long[N];

        FuzzerUtils.init(iArr, -24643);
        FuzzerUtils.init(lArr, -3723190149962292220L);

        for (int i7 : iArr) {
            Test.fFld = i6;
        }
        if (Test.bFld) {
            i4 &= (int)Test.instanceCount;
            i8 = 160;
            do {
                Test.fFld += (i8 - i4);
                i9 = 1;
                while ((i9 += 2) < 10) {
                    byte by1=63;
                    i10 = 2;
                    do {
                        short s1=-21515;
                        iArr[(i10 >>> 1) % N] += i4;
                        lArr = lArr;
                        d1 += Test.instanceCount;
                        if (i10 != 0) {
                            vMeth2_check_sum += i4 + i5 + i6 + i8 + i9 + i10 + Double.doubleToLongBits(d1) +
                                FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(lArr);
                            return;
                        }
                        lArr[i10 + 1] = s1;
                    } while (--i10 > 0);
                    by1 = (byte)Test.instanceCount;
                    i4 += i10;
                }
            } while (--i8 > 0);
        } else {
            d1 += -18633;
        }
        vMeth2_check_sum += i4 + i5 + i6 + i8 + i9 + i10 + Double.doubleToLongBits(d1) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(lArr);
    }

    public static void vMeth1(int i1, short s) {

        long l=-8662456312793748439L;
        int i2=-13, i3=10794, i11=5, i12=-13643, i13=-195;
        float fArr1[]=new float[N];

        FuzzerUtils.init(fArr1, -92.818F);

        l = 380;
        do {
            for (i2 = (int)(l); i2 < 8; i2++) {
                vMeth2(i3, i3, 72);
                i3 |= i2;
            }
            Test.instanceCount <<= l;
            i3 += 0;
            s -= (short)2;
        } while ((l -= 2) > 0);
        for (i11 = 8; i11 < 214; ++i11) {
            Test.lArrFld[i11] *= 8348;
            i13 = 1;
            while (++i13 < 8) {
                i3 *= (int)Test.fFld;
                switch (((i13 % 2) * 5) + 21) {
                case 25:
                    Test.instanceCount += i13;
                    break;
                case 23:
                    i1 *= (int)4076L;
                    fArr1[i11 - 1] %= (i2 | 1);
                    break;
                }
            }
        }
        vMeth1_check_sum += i1 + s + l + i2 + i3 + i11 + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1));
    }

    public static void vMeth(int i, byte by, double d) {

        boolean b=false;
        short s2=14518;
        int i14=196, i15=65, i16=3, i17=9, i18=-3, i19=8;
        float fArr[]=new float[N];

        FuzzerUtils.init(fArr, 106.584F);

        Test.bArrFld[(i >>> 1) % N] = b;
        fArr[(i >>> 1) % N] -= (-((Test.instanceCount - i) - (Test.fFld - Test.instanceCount)));
        vMeth1(i, s2);
        i14 = 1;
        while (++i14 < 392) {
            d -= -80;
            for (i15 = 1; i15 < 4; i15++) {
                i17 = 1;
                do {
                    i16 = i14;
                } while (++i17 < 2);
                for (i18 = i15; i18 < 2; ++i18) {
                    if (true) {
                        i &= 54019;
                    } else if (Test.bFld) {
                    } else if (b) {
                        i16 = (int)Test.instanceCount;
                        Test.instanceCount = i14;
                        Test.instanceCount += i18;
                        Test.instanceCount += i18;
                    } else {
                        i19 = by;
                    }
                }
            }
        }
        vMeth_check_sum += i + by + Double.doubleToLongBits(d) + (b ? 1 : 0) + s2 + i14 + i15 + i16 + i17 + i18 + i19 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
    }

    public void mainTest(String[] strArr1) {

        int i20=5, i21=-41090, i22=29765, i23=-1, i24=1, i25=-10, i26=-29773, i27=-189;
        byte by2=-81;
        long l1=-842033523L;

        vMeth(i20, by2, Test.dFld);
        for (i21 = 19; i21 < 378; i21 += 3) {
            Test.instanceCount += (-399968713L + (i21 * i21));
            i22 = -6;
            i20 += (-50856 + (i21 * i21));
            for (i23 = 2; i23 < 211; ++i23) {
                Test.lArrFld[i23 - 1] *= -52483;
                Test.instanceCount -= i22;
                i24 >>= (int)-13L;
                i24 -= i21;
                for (i25 = 1; i25 < 2; ++i25) {
                    i20 -= i22;
                    i24 = by2;
                }
                for (l1 = i21; l1 < 2; ++l1) {
                    i24 += (int)l1;
                    i27 -= (int)Test.instanceCount;
                    i20 -= (int)Test.instanceCount;
                    Test.iFld -= (int)Test.instanceCount;
                    dArrFld[i23] = Test.fFld;
                }
                Test.instanceCount = i25;
                try {
                    iArrFld[i23] = (i21 % 13);
                    Test.iFld = (i26 % i21);
                    i27 = (56 / i23);
                } catch (ArithmeticException a_e) {}
                if (Test.bFld) break;
            }
            i20 *= (int)Test.dFld;
        }
        iArrFld[(-59053 >>> 1) % N] *= (int)Test.instanceCount;
        Test.fFld *= i25;
        Test.iFld >>= (int)Test.instanceCount;

        FuzzerUtils.out.println("i20 by2 i21 = " + i20 + "," + by2 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 l1 = " + i25 + "," + i26 + "," + l1);
        FuzzerUtils.out.println("i27 = " + i27);

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.bFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("Test.dFld Test.iFld Test.bArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            Test.iFld + "," + FuzzerUtils.checkSum(Test.bArrFld));
        FuzzerUtils.out.println("Test.lArrFld dArrFld iArrFld = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArrFld)) + "," + FuzzerUtils.checkSum(iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
