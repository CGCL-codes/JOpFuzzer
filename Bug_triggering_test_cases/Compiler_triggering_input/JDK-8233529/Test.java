// Generated by Java* Fuzzer test generator (1.0.001). Fri Nov  1 11:38:07 2019
public class Test {

    public static final int N = 400;

    public static long instanceCount=21599L;
    public static float fFld=-61.449F;
    public static double dFld=1.1776;
    public static boolean bFld=false;
    public static byte byFld=16;
    public int iFld=-207;
    public static volatile short sFld=22367;
    public static float fArrFld[]=new float[N];

    static {
        FuzzerUtils.init(Test.fArrFld, 21.434F);
    }

    public static long vMeth_check_sum = 0;
    public static long iMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1() {

        int i7=-3, i8=-9, i9=-1, i10=-32589, iArr1[]=new int[N];
        boolean b=true;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 68L);
        FuzzerUtils.init(iArr1, -11);

        for (long l : lArr) {
            Test.fArrFld = Test.fArrFld;
            i7 -= 1477;
            i8 = 1;
            while (++i8 < 4) {
                if (b) {
                    for (i9 = 1; i9 < 1; ++i9) {
                        if (b) break;
                        Test.fFld += (-55910 + (i9 * i9));
                        Test.dFld = i8;
                        i7 += (int)Test.instanceCount;
                        iArr1[i9 - 1] -= (int)Test.instanceCount;
                    }
                    b = b;
                    i10 = i7;
                    vMeth1_check_sum += i7 + i8 + i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                        FuzzerUtils.checkSum(iArr1);
                    return;
                } else if (Test.bFld) {
                    if (i7 != 0) {
                        vMeth1_check_sum += i7 + i8 + i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) +
                            FuzzerUtils.checkSum(iArr1);
                        return;
                    }
                    i10 >>= (int)Test.instanceCount;
                } else if (Test.bFld) {
                    Test.fFld += -48221;
                }
            }
        }
        vMeth1_check_sum += i7 + i8 + i9 + i10 + (b ? 1 : 0) + FuzzerUtils.checkSum(lArr) + FuzzerUtils.checkSum(iArr1);
    }

    public static int iMeth(int i2, int i3) {

        int i5=60990, i6=0, i11=8, i12=6081, iArr[]=new int[N];
        long l1=-3L;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(iArr, 4);
        FuzzerUtils.init(byArr, (byte)55);

        for (int i4 : iArr) {
            for (i5 = 1; i5 < 4; ++i5) {
                vMeth1();
                for (i11 = i5; 2 > i11; i11++) {
                    switch (((i11 % 1) * 5) + 34) {
                    case 37:
                        i4 -= i6;
                        break;
                    }
                    try {
                        iArr[i11] = (i3 / iArr[i11 - 1]);
                        i12 = (i6 % -217);
                        iArr[i11 + 1] = (1371780186 / iArr[i11]);
                    } catch (ArithmeticException a_e) {}
                    Test.bFld = Test.bFld;
                    Test.instanceCount = i2;
                }
                i6 = (int)l1;
            }
            iArr[(i6 >>> 1) % N] = i3;
        }
        byArr = FuzzerUtils.byte1array(N, (byte)-37);
        long meth_res = i2 + i3 + i5 + i6 + i11 + i12 + l1 + FuzzerUtils.checkSum(iArr) + FuzzerUtils.checkSum(byArr);
        iMeth_check_sum += meth_res;
        return (int)meth_res;
    }

    public static void vMeth(int i1) {

        int i13=-34097, i14=1, i15=-3, i16=-69, i17=-63244;

        i1 = (int)(--Test.fFld);
        i1 = -218;
        Test.instanceCount *= ((iMeth(i1, 22836) + i13) + 10);
        for (i14 = 7; i14 < 394; i14 += 2) {
            i15 = i13;
            Test.dFld = Test.fFld;
            i15 *= (int)Test.instanceCount;
            Test.instanceCount = i15;
            i16 = 8;
            while (--i16 > 0) {
                Test.instanceCount += i15;
                i1 += (i16 ^ i13);
            }
            i1 >>>= Test.byFld;
            Test.dFld = i15;
        }
        i17 = (int)-47.971F;
        i13 <<= Test.byFld;
        vMeth_check_sum += i1 + i13 + i14 + i15 + i16 + i17;
    }

    public void mainTest(String[] strArr1) {

        int i=10, i18=12, i19=0, i20=-8756, i21=52614, i22=-13409, i23=-17721, i24=-11860, iArr2[]=new int[N];
        long l2=-3978512815L;

        FuzzerUtils.init(iArr2, -19701);

        i = 1;
        while (++i < 226) {
            vMeth(-33108);
            Test.instanceCount = i;
            Test.fFld += (4 + (i * i));
            Test.dFld += i;
            Test.instanceCount >>= -25140;
            iFld += (i | Test.sFld);
            iFld = iFld;
            i18 = 1;
            while (++i18 < 111) {
                iFld += Test.byFld;
                Test.fFld = i;
                iFld = (int)Test.instanceCount;
                iFld += (i18 * i);
            }
        }
        i19 -= -39372;
        for (i20 = 19; i20 < 362; i20++) {
            l2 = 1;
            while (++l2 < 73) {
                i19 -= i19;
                i21 = iFld;
                Test.fFld = i19;
                iArr2[(int)(l2)] *= (int)Test.dFld;
                Test.fFld -= -59181;
                Test.byFld += (byte)(((l2 * i20) + i) - iFld);
                i22 = 1;
                while ((i22 -= 2) > 0) {
                    Test.byFld >>= (byte)24420;
                }
                i21 -= iFld;
                Test.fFld += l2;
                iFld += (int)l2;
            }
            for (i23 = 3; i23 < 73; i23 += 3) {
                Test.fFld += i23;
                Test.instanceCount += i23;
            }
        }

        FuzzerUtils.out.println("i i18 i19 = " + i + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i20 i21 l2 = " + i20 + "," + i21 + "," + l2);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("iArr2 = " + FuzzerUtils.checkSum(iArr2));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld Test.dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(Test.dFld));
        FuzzerUtils.out.println("Test.bFld Test.byFld iFld = " + (Test.bFld ? 1 : 0) + "," + Test.byFld + "," + iFld);
        FuzzerUtils.out.println("Test.sFld Test.fArrFld = " + Test.sFld + "," +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("iMeth_check_sum: " + iMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  iMeth ->  iMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 iMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
