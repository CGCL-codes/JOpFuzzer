// Generated by Java* Fuzzer test generator (1.0.001). Sun Aug  5 05:16:39 2018
public class Test {

    public static final int N = 400;

    public static long instanceCount=3217849431L;
    public static volatile boolean bFld=false;
    public static int iFld=34747;
    public static byte byFld=76;
    public static long lFld=-12904L;
    public float fFld=-2.449F;
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.iArrFld, 18726);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth() {

        int i=3, i1=52148, i2=19911, i3=-244, i4=-27469, i5=16, i6=19189, iArr[]=new int[N];
        byte by=0;
        float f=-72.951F;
        double dArr[][]=new double[N][N];

        FuzzerUtils.init(iArr, -47);
        FuzzerUtils.init(dArr, 2.125641);

        i *= 8;
        i -= (--iArr[(i >>> 1) % N]);
        for (i1 = 9; i1 < 220; ++i1) {
            if (i2 != (dArr[i1 - 1][i1] = ((i2 - -49) * (++i2)))) continue;
            if (i >= (i - iArr[i1 - 1])) continue;
            Test.instanceCount -= i2;
        }
        i *= i;
        i2 -= (int)(Test.instanceCount + by);
        for (i3 = 16; i3 < 274; i3++) {
            for (i5 = i3; i5 < 6; i5++) {
                Test.bFld = (((f + i2) + (Test.instanceCount * f)) != ((Test.iFld - 37899) - i4));
                f += (((i5 * i1) + i) - i);
                iArr[i5 + 1] = 203;
                i4 <<= -5;
                Test.iFld = (int)Test.instanceCount;
            }
        }
        vMeth_check_sum += i + i1 + i2 + by + i3 + i4 + i5 + i6 + Float.floatToIntBits(f) + FuzzerUtils.checkSum(iArr)
            + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public static void vMeth2(double d, int i12, int i13) {

        int i14=5, i15=-100, i16=-58324, i17=-47068, i18=-7;
        float f1=-92.824F;
        short s1=15061;
        byte byArr[]=new byte[N];

        FuzzerUtils.init(byArr, (byte)-9);

        for (i14 = 6; i14 < 155; i14++) {
            for (i16 = 1; i16 < 11; ++i16) {
                i13 *= (int)f1;
                byArr = byArr;
                s1 += (short)i16;
                f1 -= i17;
                Test.iFld = -12524;
                f1 -= 2.62F;
                i18 = 1;
                do {
                    switch ((i18 % 10) + 86) {
                    case 86:
                        Test.instanceCount -= 6479L;
                        Test.instanceCount += i18;
                        if (Test.bFld) continue;
                        Test.iFld *= (int)Test.instanceCount;
                        break;
                    case 87:
                        Test.instanceCount >>>= Test.iFld;
                        break;
                    case 88:
                        Test.iArrFld[i16 - 1] = i16;
                        break;
                    case 89:
                        i12 &= i18;
                    case 90:
                        Test.byFld = (byte)Test.lFld;
                        break;
                    case 91:
                        Test.instanceCount *= i13;
                    case 92:
                        i17 >>= i16;
                    case 93:
                        Test.lFld = Test.iFld;
                        break;
                    case 94:
                        Test.instanceCount = -56825L;
                        break;
                    case 95:
                        i15 = i15;
                    }
                } while (++i18 < 2);
            }
        }
        vMeth2_check_sum += Double.doubleToLongBits(d) + i12 + i13 + i14 + i15 + i16 + i17 + Float.floatToIntBits(f1) +
            s1 + i18 + FuzzerUtils.checkSum(byArr);
    }

    public long lMeth(long l) {

        int i10=58732, i11=-249, i19=-34341, i20=209, i21=20;
        double d1=116.114253;
        short s2=20583;
        byte by1=67;
        long lArr[]=new long[N];

        FuzzerUtils.init(lArr, 25287L);

        for (i10 = 6; i10 < 325; ++i10) {
            vMeth2(d1, Test.iFld, 35679);
            Test.iFld ^= i11;
        }
        lArr = FuzzerUtils.long1array(N, (long)-241L);
        i11 = s2;
        i19 = 1;
        do {
            for (i20 = 1; i20 < 6; i20++) {
                i11 |= Test.byFld;
                l *= i19;
                by1 -= (byte)fFld;
                switch (((i20 % 2) * 5) + 76) {
                case 78:
                    i11 = s2;
                    i21 += (-72 + (i20 * i20));
                    fFld = l;
                    i21 += (3 + (i20 * i20));
                    break;
                case 77:
                    Test.iArrFld = Test.iArrFld;
                    break;
                }
            }
        } while (++i19 < 260);
        long meth_res = l + i10 + i11 + Double.doubleToLongBits(d1) + s2 + i19 + i20 + i21 + by1 +
            FuzzerUtils.checkSum(lArr);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth1(int i7, int i8, short s) {

        int i22=51315, i24=12, i25=28, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -6);

        for (int i9 : Test.iArrFld) {
            i8 = i7;
            i8 = 5;
            Test.byFld >>= (byte)lMeth(Test.instanceCount);
        }
        i22 = 1;
        do {
            Test.iArrFld[i22 + 1] = (int)Test.instanceCount;
            Test.lFld = i8;
            i7 *= (int)fFld;
            Test.byFld += (byte)i7;
            Test.instanceCount = i7;
            Test.iFld |= i7;
            for (i24 = 1; i24 < 5; i24++) {
                if (i22 != 0) {
                    vMeth1_check_sum += i7 + i8 + s + i22 + i24 + i25 + FuzzerUtils.checkSum(iArr1);
                    return;
                }
                Test.iFld += i24;
                iArr1[i22] *= -13;
            }
        } while (++i22 < 322);
        vMeth1_check_sum += i7 + i8 + s + i22 + i24 + i25 + FuzzerUtils.checkSum(iArr1);
    }

    public void mainTest(String[] strArr1) {

        double d2=-2.17747, dArr1[]=new double[N];
        int i26=-79, i27=12, i28=13, i29=-218, i30=-49002, i31=53931, i32=0, i33=9284, iArr2[]=new int[N];
        long lArr1[]=new long[N];
        short sArr[]=new short[N];

        FuzzerUtils.init(dArr1, 84.12275);
        FuzzerUtils.init(lArr1, -640339899L);
        FuzzerUtils.init(iArr2, -798);
        FuzzerUtils.init(sArr, (short)-15214);

        vMeth();
        vMeth1(Test.iFld, Test.iFld, (short)(23533));
        dArr1 = dArr1;
        dArr1 = dArr1;
        Test.iFld -= (int)d2;
        Test.iFld -= (int)Test.instanceCount;
        i26 = 1;
        do {
            for (i27 = 2; i27 < 66; i27++) {
                Test.lFld = Test.lFld;
                Test.iArrFld[i26] += (int)-5773248591991943553L;
            }
            i28 /= (int)((long)(fFld) | 1);
            for (i29 = 3; i29 < 66; i29++) {
                i31 = 1;
                do {
                    i28 *= i27;
                    i28 = -64;
                    Test.iFld += (((i31 * Test.instanceCount) + i27) - i27);
                    Test.iArrFld = Test.iArrFld;
                    Test.instanceCount = Test.instanceCount;
                    Test.lFld *= (long)d2;
                } while (++i31 < 2);
                for (i32 = 2; i32 > 1; --i32) {
                    i30 = (int)d2;
                    i30 |= i28;
                    lArr1[i32 - 1] *= i29;
                    switch ((i29 % 4) + 65) {
                    case 65:
                        iArr2[(i31 >>> 1) % N] = (int)-168L;
                        break;
                    case 66:
                        if (Test.bFld) break;
                        Test.iFld += i32;
                        sArr[i29] -= (short)i26;
                    case 67:
                        i28 -= (int)fFld;
                    case 68:
                        i28 += (i32 * i32);
                        break;
                    }
                }
            }
        } while (++i26 < 380);

        FuzzerUtils.out.println("d2 i26 i27 = " + Double.doubleToLongBits(d2) + "," + i26 + "," + i27);
        FuzzerUtils.out.println("i28 i29 i30 = " + i28 + "," + i29 + "," + i30);
        FuzzerUtils.out.println("i31 i32 i33 = " + i31 + "," + i32 + "," + i33);
        FuzzerUtils.out.println("dArr1 lArr1 iArr2 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1)) + "," +
            FuzzerUtils.checkSum(lArr1) + "," + FuzzerUtils.checkSum(iArr2));
        FuzzerUtils.out.println("sArr = " + FuzzerUtils.checkSum(sArr));

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.iFld = " + Test.instanceCount + "," + (Test.bFld ? 1
            : 0) + "," + Test.iFld);
        FuzzerUtils.out.println("Test.byFld Test.lFld fFld = " + Test.byFld + "," + Test.lFld + "," +
            Float.floatToIntBits(fFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 mainTest
//DEBUG  lMeth ->  lMeth vMeth1 mainTest
//DEBUG  vMeth2 ->  vMeth2 lMeth vMeth1 mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
