// Generated by Java* Fuzzer test generator (1.0.001). Thu Aug 29 13:37:31 2019
public class Test {

    public static final int N = 400;

public Test setinstanceCount(long tmp) { Test.instanceCount = tmp; return this; };
public Test setbFld(boolean tmp) { Test.bFld = tmp; return this; };
public Test setdArrFld(double tmp[]) { Test.dArrFld = tmp; return this; };
public Test setOFld2(Cls3 tmp) { Test.OFld2 = tmp; return this; };
    public static long instanceCount=5202433637276581042L;
    public static boolean bFld=false;
    public static double dArrFld[]=new double[N];
    public static Cls3 OFld2=new Cls3();

    static {
        FuzzerUtils.init(Test.dArrFld, 75.128220);
    }

    public static long vMeth_check_sum = 0;

    public static void vMeth(int i, int i1, int i2) {

        int i3=-5, i4=20, i5=79, i18=14, i19=147, i20=-180, i21=176;

        for (i3 = 20; i3 < 323; i3++) {
            i5 = 5;
            while (--i5 > 0) {
                boolean b=false;
                Cls2 O=new Cls2();
                i2 = (int)Test.instanceCount;
                O.OFld1.iArrFld1[i3] = -144;
                if (b) continue;
            }
            for (i18 = i3; i18 < 5; ++i18) {
                Cls.fFld *= Cls.sFld;
                for (i20 = 1; i20 < 1; ++i20) {
                    Test.dArrFld[i18 + 1] = Cls.fFld;
                    Cls.dFld1 = i19;
                    Cls.dFld1 = i5;
                    i21 += (232 + (i20 * i20));
                    Test.instanceCount *= (long)Cls.fFld;
                    Cls1.instanceCount += i20;
                    Cls2.instanceCount += (-37L + (i20 * i20));
                }
            }
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + i5 + i18 + i19 + i20 + i21;
    }

    public void mainTest(String[] strArr1) {

        int i22=5, i23=-6, i24=146, i25=-40005, i26=-27, i27=-14, i28=-14;
        double d=123.69601;

        FuzzerUtils.init(Test.OFld2.OFld3.OFld4.lArrFld1, -5770698157318374239L);
        FuzzerUtils.init(Test.OFld2.fArrFld, 2.336F);
        FuzzerUtils.init(Cls.OFld.lArrFld2, 11L);

        vMeth(Cls.iFld, 5, Cls.iFld);
        for (i22 = 18; i22 < 288; ++i22) {
            if (Test.bFld) break;
            for (i24 = 4; 93 > i24; i24++) {
                Test.OFld2.OFld3.OFld4.lArrFld1[i24] = i24;
                for (i26 = 1; i26 < 2; ++i26) {
                    Cls.instanceCount -= i24;
                    Test.instanceCount = Cls3.instanceCount;
                    switch (((75 >>> 1) % 3) + 68) {
                    case 68:
                        Test.instanceCount = Cls2.instanceCount;
                        Cls2.instanceCount = (long)Cls.dFld1;
                        break;
                    case 69:
                        if (false) break;
                        Cls1.instanceCount >>= Cls1.instanceCount;
                        break;
                    case 70:
                        Cls.fFld = Test.instanceCount;
                    default:
                        Cls3.instanceCount -= (long)Cls.dFld1;
                    }
                    if (false) {
                        i25 |= Cls.sFld;
                    } else if (Test.bFld) {
                        Test.OFld2.fArrFld[i24 - 1] = i22;
                    } else {
                        Cls.iFld += (i26 * Cls.iFld);
                        if (Test.bFld) continue;
                        if (Test.bFld) break;
                    }
                }
                Cls.fFld = i24;
                Cls.dFld1 -= 243;
                for (d = i22; d < 2; ++d) {
                    i23 += i27;
                    Cls3.instanceCount >>= i26;
                    switch ((i24 % 7) + 71) {
                    case 71:
                        i27 += (int)(d - Cls3.instanceCount);
                        break;
                    case 72:
                    case 73:
                        Test.dArrFld[i24 - 1] += Cls1.instanceCount;
                        Test.OFld2.fArrFld[i24] *= (float)d;
                        break;
                    case 74:
                        i25 = (int)Test.instanceCount;
                    case 75:
                        Cls.OFld.lArrFld2[(int)(d)][i24] = i27;
                        break;
                    case 76:
                        i23 += (int)d;
                        break;
                    case 77:
                        Cls.fFld = i28;
                        break;
                    }
                }
            }
        }

        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);
        FuzzerUtils.out.println("i25 i26 i27 = " + i25 + "," + i26 + "," + i27);
        FuzzerUtils.out.println("d i28 Test.OFld2.OFld3.OFld4.lArrFld1 = " + Double.doubleToLongBits(d) + "," + i28 +
            "," + FuzzerUtils.checkSum(Test.OFld2.OFld3.OFld4.lArrFld1));
        FuzzerUtils.out.println("Test.OFld2.fArrFld Cls.OFld.lArrFld2 Test.OFld2.OFld3 = " +
            Double.doubleToLongBits(FuzzerUtils.checkSum(Test.OFld2.fArrFld)) + "," +
            FuzzerUtils.checkSum(Cls.OFld.lArrFld2) + "," + FuzzerUtils.checkSum(Test.OFld2.OFld3));
        FuzzerUtils.out.println("Test.OFld2.OFld3.OFld4 Cls Cls1 = " + FuzzerUtils.checkSum(Test.OFld2.OFld3.OFld4) +
            "," + Cls.instanceCount + "," + Cls1.instanceCount);
        FuzzerUtils.out.println("Cls2 Cls3 = " + Cls2.instanceCount + "," + Cls3.instanceCount);

        FuzzerUtils.out.println("Test.instanceCount Test.bFld Test.dArrFld = " + Test.instanceCount + "," + (Test.bFld
            ? 1 : 0) + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.dArrFld)));
        FuzzerUtils.out.println("Test.OFld2 Cls Cls1 = " + FuzzerUtils.checkSum(Test.OFld2) + "," + Cls.instanceCount +
            "," + Cls1.instanceCount);
        FuzzerUtils.out.println("Cls2 Cls3 = " + Cls2.instanceCount + "," + Cls3.instanceCount);

        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
inline class Cls {

    public static final int N = 400;

public Cls setinstanceCount(long tmp) { Cls.instanceCount = tmp; return this; };
public Cls setiFld(int tmp) { Cls.iFld = tmp; return this; };
public Cls setfFld(float tmp) { Cls.fFld = tmp; return this; };
public Cls setdFld1(double tmp) { Cls.dFld1 = tmp; return this; };
public Cls setsFld(short tmp) { Cls.sFld = tmp; return this; };
public Cls setlArrFld(long tmp[]) { Cls.lArrFld = tmp; return this; };
public Cls setiArrFld(int tmp[]) { Cls.iArrFld = tmp; return this; };
public Cls setiArrFld1(int tmp[]) { return __WithField(iArrFld1, tmp); };
public Cls setlArrFld1(long tmp[]) { return __WithField(lArrFld1, tmp); };
public Cls setOFld(Cls1 tmp) { Cls.OFld = tmp; return this; };
    public static long instanceCount=-5L;
    public static int iFld=61002;
    public static float fFld=1.615F;
    public static double dFld1=2.86710;
    public static short sFld=-18824;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];
    public int iArrFld1[]=new int[N];
    public long lArrFld1[]=new long[N];
    public static Cls1 OFld=new Cls1();

    static {
        FuzzerUtils.init(Cls.lArrFld, 6012567793152296121L);
        FuzzerUtils.init(Cls.iArrFld, 28905);
    }

    public static long Cls_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long lMeth_check_sum = 0;

    public static long lMeth() {

        int i8=24750, i9=17, i10=-10498, i11=4451;

        FuzzerUtils.init(Cls.OFld.sArrFld, (short)10255);

        Cls.OFld.sArrFld[(-12 >>> 1) % N][(Cls.iFld >>> 1) % N] += (short)(((Cls.fFld * Cls.OFld.dFld) - 176) -
            Test.instanceCount);
        Cls.instanceCount = 7L;
        Cls.instanceCount += (long)-2.766F;
        i8 = 1;
        do {
            for (i9 = 1; i9 < 4; i9++) {
                Cls.iFld = Cls.iFld;
                i11 = 1;
                do {
                    switch ((((i9 >>> 1) % 5) * 5) + 89) {
                    case 107:
                        Cls.iFld = 16404;
                        Cls.lArrFld[i11] -= i10;
                        break;
                    case 111:
                    case 93:
                        Cls.iFld = i9;
                        Cls.iFld /= (int)1.54571;
                        Cls.iArrFld[i8 + 1] -= (int)Cls.fFld;
                        break;
                    case 90:
                        i10 += i11;
                        Cls1.instanceCount = Test.instanceCount;
                        break;
                    case 108:
                        Cls1.instanceCount = Cls.iFld;
                    }
                } while (++i11 < 2);
            }
        } while (++i8 < 376);
        long meth_res = Double.doubleToLongBits(Cls.OFld.dFld) + i8 + i9 + i10 + i11 +
            FuzzerUtils.checkSum(Cls.OFld.sArrFld);
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public void vMeth1(float f) {

        int i12=-38136, i13=-1262;

        lMeth();
        switch (((Cls.iFld >>> 1) % 2) + 78) {
        case 78:
            Cls.dFld1 = Cls.iFld;
            Cls.dFld1 -= 4649;
            Cls.instanceCount = -192;
        case 79:
            Cls.sFld += (short)-2;
            break;
        }
        Cls.fFld += -1;
        for (i12 = 1; i12 < 269; i12 += 3) {
            Cls.iFld -= (int)Test.instanceCount;
            i13 = 98;
        }
        Cls.iArrFld[(Cls.iFld >>> 1) % N] -= (int)1545200149449441743L;
        Cls.iFld += (int)Test.instanceCount;
        Cls.instanceCount = -14;
        vMeth1_check_sum += Float.floatToIntBits(f) + i12 + i13;
    }

    public  Cls() {

        instanceCount++;
        int i6=0, i7=-8, i14=246, i15=64, i16=129, i17=63952;

        for (i6 = 4; i6 < 185; i6++) {
            try {
                i7 = (i6 % i6);
                i7 = (i6 % 15455);
                i7 = (i6 % i7);
            } catch (ArithmeticException a_e) {}
            vMeth1(Cls.fFld);
            Cls.dFld1 += i7;
            i7 >>= Cls.iFld;
            Test.instanceCount = i6;
            Cls1.instanceCount -= 5111;
            try {
                Cls.iArrFld[i6] = (i7 % i6);
                Cls.iFld = (i7 / i6);
                Cls.iArrFld[i6] = (Cls.iArrFld[i6 + 1] / Cls.iArrFld[i6 - 1]);
            } catch (ArithmeticException a_e) {}
            i7 += (i6 * i6);
            for (i14 = 1; i14 < 9; ++i14) {
                Cls.iArrFld = Cls.iArrFld;
                for (i16 = 1; i16 < 2; i16++) {
                    i15 = (int)Cls.dFld1;
                    Cls1.instanceCount = (long)Cls.fFld;
                    Cls.instanceCount = i7;
                }
            }
        }
        long meth_res = i6 + i7 + i14 + i15 + i16 + i17;
        Cls_check_sum += meth_res;
        return;
    }

}
///////////////////////////////////////////////////////////////////////
inline class Cls1 {

    public static final int N = 400;

public Cls1 setinstanceCount(long tmp) { Cls1.instanceCount = tmp; return this; };
public Cls1 setdFld(double tmp) { return __WithField(dFld, tmp); };
public Cls1 setsArrFld(short tmp[][]) { return __WithField(sArrFld, tmp); };
public Cls1 setlArrFld2(long tmp[][]) { return __WithField(lArrFld2, tmp); };
    public static long instanceCount=-2571082666L;
    public double dFld=0.67820;
    public short sArrFld[][]=new short[N][N];
    public long lArrFld2[][]=new long[N][N];

}
///////////////////////////////////////////////////////////////////////
inline class Cls2 {

    public static final int N = 400;

public Cls2 setinstanceCount(long tmp) { Cls2.instanceCount = tmp; return this; };
public Cls2 setOFld1(Cls tmp) { return __WithField(OFld1, tmp); };
public Cls2 setOFld4(Cls tmp) { return __WithField(OFld4, tmp); };
    public static long instanceCount=222L;
    public Cls OFld1=new Cls();
    public Cls OFld4=new Cls();

}
///////////////////////////////////////////////////////////////////////
inline class Cls3 {

    public static final int N = 400;

public Cls3 setinstanceCount(long tmp) { Cls3.instanceCount = tmp; return this; };
public Cls3 setfArrFld(float tmp[]) { return __WithField(fArrFld, tmp); };
public Cls3 setOFld3(Cls2 tmp) { return __WithField(OFld3, tmp); };
    public static long instanceCount=-234L;
    public float fArrFld[]=new float[N];
    public Cls2 OFld3=new Cls2();

}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  Cls ->  Cls Cls2 vMeth mainTest Cls3 Test
//DEBUG  vMeth1 ->  vMeth1 Cls Cls2 vMeth mainTest Cls3 Test
//DEBUG  lMeth ->  lMeth vMeth1 Cls Cls2 vMeth mainTest Cls3 Test
//DEBUG  Cls1 ->  Cls1 Cls lMeth vMeth1 Cls2 vMeth mainTest Cls3 Test
//DEBUG  Cls2 ->  Cls2 vMeth mainTest Cls3 Test
//DEBUG  Cls3 ->  Cls3 Test mainTest
//DEBUG  Depth = 6
//DEBUG  Classes = 5
//DEBUG  static objects = {Cls3: [, Test.OFld2], Cls1: [, Cls.OFld], Cls: [], Cls2: [], }
