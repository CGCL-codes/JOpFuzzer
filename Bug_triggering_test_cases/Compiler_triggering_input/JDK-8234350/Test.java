// Generated by Java* Fuzzer test generator (1.0.001). Sun Nov 17 18:03:00 2019
public class Test {

    public static final int N = 400;

    public static long instanceCount=13L;
    public static volatile float fFld=0.843F;
    public double dFld=-123.101356;
    public byte byFld=38;
    public static int iArrFld[]=new int[N];
    public static float fArrFld[][]=new float[N][N];
    public static volatile long lArrFld[]=new long[N];
    public volatile int iArrFld1[][]=new int[N][N];

    static {
        FuzzerUtils.init(Test.iArrFld, -56886);
        FuzzerUtils.init(Test.fArrFld, -7.213F);
        FuzzerUtils.init(Test.lArrFld, -185L);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2(long l) {

        int i11=0, i12=-54, i13=215, i14=-15385, i15=5;
        double d1=47.80969;
        float f3=-127.41F;

        Test.iArrFld[(i11 >>> 1) % N] -= (int)d1;
        for (i12 = 12; i12 < 204; i12++) {
            Test.instanceCount -= i13;
            Test.fFld += ((long)i12 | (long)i13);
            f3 = 1;
            while (++f3 < 8) {
                i13 |= (int)l;
                for (i14 = 1; i14 < 1; i14++) {
                    Test.fFld += (i14 * i14);
                    Test.instanceCount = i15;
                    i13 -= i12;
                    Test.iArrFld[(int)(f3 + 1)] = 10535;
                    i13 >>= i15;
                }
                i11 = i15;
                l = (long)Test.fFld;
                Test.instanceCount *= i11;
            }
        }
        vMeth2_check_sum += l + i11 + Double.doubleToLongBits(d1) + i12 + i13 + Float.floatToIntBits(f3) + i14 + i15;
    }

    public static void vMeth1(float f1, int i4, int i5) {

        int i6=-8, i7=-3, i8=-60054, i9=51548, i10=33;
        float f2=-34.574F;
        double d=1.805;
        short sArr[]=new short[N];

        FuzzerUtils.init(sArr, (short)16447);

        f1 = (--sArr[(140 >>> 1) % N]);
        i6 = 393;
        do {
            for (f2 = 4; 1 < f2; f2--) {
                for (i8 = 1; i8 < 2; i8++) {
                    f1 += i8;
                    Test.fArrFld = (Test.fArrFld = (Test.fArrFld = Test.fArrFld));
                    Test.instanceCount *= Test.iArrFld[i8 - 1];
                    Test.instanceCount += (((i8 * i8) + i6) - Test.instanceCount);
                    i5 += (i8 * i8);
                    f1 += (((i8 * Test.instanceCount) + i8) - i6);
                    i5 = (int)((i9 - d) + ((i9++) * (32651 + (-(i8 - d)))));
                }
                i4 = (i9++);
            }
            Test.instanceCount += (((i6 * i10) + i10) - i10);
            i10 <<= (-i4);
            vMeth2(Test.instanceCount);
        } while (--i6 > 0);
        vMeth1_check_sum += Float.floatToIntBits(f1) + i4 + i5 + i6 + Float.floatToIntBits(f2) + i7 + i8 + i9 +
            Double.doubleToLongBits(d) + i10 + FuzzerUtils.checkSum(sArr);
    }

    public static void vMeth(boolean b, int i, float f) {

        int i1=-4, i2=14, i16=10, i17=61615;
        byte by=116;

        for (i1 = 323; i1 > 3; i1 -= 2) {
            vMeth1(-102.85F, i2, i);
            if (i2 != 0) {
                vMeth_check_sum += (b ? 1 : 0) + i + Float.floatToIntBits(f) + i1 + i2 + i16 + i17 + by;
                return;
            }
            for (i16 = 1; i16 < 10; i16++) {
                Test.lArrFld[i16 - 1] = Test.instanceCount;
                i2 = by;
                i += (i16 - i2);
                i2 -= i16;
                if (b) {
                    Test.instanceCount += i16;
                    i = by;
                    i = i16;
                    i17 *= i1;
                }
                i2 *= 20;
            }
            Test.instanceCount += i1;
        }
        vMeth_check_sum += (b ? 1 : 0) + i + Float.floatToIntBits(f) + i1 + i2 + i16 + i17 + by;
    }

    public void mainTest(String[] strArr1) {

        boolean b1=true, b2=true;
        int i18=14, i19=3, i21=-8, i22=-110, i23=-39281, i24=-227, i25=48, i26=38, i27=-3;

        vMeth(b1, 168, -125.661F);
        for (i18 = 14; i18 < 391; i18++) {
            i19 = (int)1.653F;
            i19 += (int)Test.instanceCount;
            dFld += i18;
            i19 = i19;
            i19 = (int)-3244647853L;
            i21 = 1;
            do {
                i19 = (int)1L;
                dFld = -13L;
                Test.fArrFld[i18 - 1][i21] += 11;
                i19 = byFld;
                Test.iArrFld[i18 - 1] += (int)4L;
                i19 = i18;
                for (i22 = 1; 1 > i22; ++i22) {
                    i19 = i19;
                    i23 <<= i21;
                    iArrFld1 = iArrFld1;
                }
            } while (++i21 < 67);
            if (b2) {
                Test.instanceCount += i18;
            } else if (true) {
                if (false) {
                    for (i24 = i18; 67 > i24; i24++) {
                        Test.fArrFld[i24 - 1][i24 - 1] -= 2779;
                        iArrFld1[i24 - 1][i24 + 1] /= (int)(i19 | 1);
                    }
                    iArrFld1[i18] = Test.iArrFld;
                    i25 -= (int)dFld;
                } else if (b1) {
                    for (i26 = 67; i26 > 3; i26--) {
                        Test.instanceCount ^= Test.instanceCount;
                        i25 = -65362;
                        i23 += (i26 * Test.fFld);
                    }
                }
            } else if (b1) {
                Test.lArrFld[i18 + 1] -= Test.instanceCount;
            } else {
                byFld <<= (byte)i22;
            }
        }

        FuzzerUtils.out.println("b1 i18 i19 = " + (b1 ? 1 : 0) + "," + i18 + "," + i19);
        FuzzerUtils.out.println("i21 i22 i23 = " + i21 + "," + i22 + "," + i23);
        FuzzerUtils.out.println("i24 i25 i26 = " + i24 + "," + i25 + "," + i26);
        FuzzerUtils.out.println("i27 b2 = " + i27 + "," + (b2 ? 1 : 0));

        FuzzerUtils.out.println("Test.instanceCount Test.fFld dFld = " + Test.instanceCount + "," +
            Float.floatToIntBits(Test.fFld) + "," + Double.doubleToLongBits(dFld));
        FuzzerUtils.out.println("byFld Test.iArrFld Test.fArrFld = " + byFld + "," + FuzzerUtils.checkSum(Test.iArrFld)
            + "," + Double.doubleToLongBits(FuzzerUtils.checkSum(Test.fArrFld)));
        FuzzerUtils.out.println("Test.lArrFld iArrFld1 = " + FuzzerUtils.checkSum(Test.lArrFld) + "," +
            FuzzerUtils.checkSum(iArrFld1));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
