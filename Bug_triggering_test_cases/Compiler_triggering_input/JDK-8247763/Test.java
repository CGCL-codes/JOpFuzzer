// Generated by Java* Fuzzer test generator (1.0.001). Wed Jun  3 05:39:12 2020
public class Test {

    public static final int N = 400;

    public static long instanceCount=-62761L;
    public static byte byFld=-56;
    public static boolean bFld=false;
    public int iFld=-51968;
    public static double dFld=0.116118;
    public static long lArrFld[]=new long[N];
    public static int iArrFld[]=new int[N];

    static {
        FuzzerUtils.init(Test.lArrFld, 3845889587L);
        FuzzerUtils.init(Test.iArrFld, -56362);
    }

    public static long vMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;
    public static long vMeth2_check_sum = 0;

    public static void vMeth2() {

        float f=-9.791F;
        int i8=-179, i9=-4, i10=-29072, i11=121, iArr1[]=new int[N];

        FuzzerUtils.init(iArr1, -11563);

        for (f = 10; f < 238; ++f) {
            iArr1[(int)(f - 1)] *= i8;
            if (i8 != 0) {
                vMeth2_check_sum += Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
                return;
            }
        }
        i9 = 1;
        while (++i9 < 342) {
            i10 = 5;
            do {
                i8 = i8;
                i8 <<= -82;
                i8 += (((i10 * Test.instanceCount) + i9) - f);
                i11 = 1;
                while (++i11 < 1) {
                    i8 -= 29392;
                    Test.instanceCount = 1;
                    i8 /= (int)(i8 | 1);
                    i8 = i10;
                    i8 = i9;
                    i8 += i10;
                }
            } while (--i10 > 0);
        }
        vMeth2_check_sum += Float.floatToIntBits(f) + i8 + i9 + i10 + i11 + FuzzerUtils.checkSum(iArr1);
    }

    public static void vMeth1() {

        int i5=13, i6=0, i7=9477, i12=-112, i13=-116, iArr[]=new int[N];
        short s=6480;
        long l1=1380012646946067041L;
        float f1=61.504F;
        double dArr[]=new double[N];
        boolean bArr[][]=new boolean[N][N];

        FuzzerUtils.init(dArr, 1.48332);
        FuzzerUtils.init(iArr, 8);
        FuzzerUtils.init(bArr, true);

        dArr[(i5 >>> 1) % N] += (++s);
        l1 = 1;
        while (++l1 < 219) {
            for (i6 = 1; i6 < 7; ++i6) {
                i7 += (i6 * i7);
                Test.lArrFld[(int)(l1 + 1)] = (Test.byFld = (byte)i5);
                i7 += (53264 + (i6 * i6));
                if (Test.bFld) {
                    iArr[(-7 >>> 1) % N] = ((-(i7 - s)) - (i7--));
                    vMeth2();
                    Test.instanceCount += (i6 | (long)f1);
                } else {
                    if (Test.bFld) break;
                    bArr[(int)(l1 + 1)][i6 + 1] = Test.bFld;
                    for (i12 = 2; i12 > 1; i12--) {
                        i13 += (i12 * i12);
                        i5 = i13;
                    }
                }
            }
        }
        vMeth1_check_sum += i5 + s + l1 + i6 + i7 + Float.floatToIntBits(f1) + i12 + i13 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr)) + FuzzerUtils.checkSum(iArr) +
            FuzzerUtils.checkSum(bArr);
    }

    public static void vMeth(int i, int i1, int i2) {

        int i3=181, i4=6, i14=6;
        double d=-90.95969, dArr1[]=new double[N];
        long l2=3858865929091477518L;
        float f2=0.540F;

        FuzzerUtils.init(dArr1, -29.52010);

        for (long l : Test.lArrFld) {
            for (i3 = 1; i3 < 4; ++i3) {
                vMeth1();
                Test.iArrFld[i3 + 1] -= i;
                i4 = (int)Test.instanceCount;
                i4 = 246;
                i1 = i;
                l += i3;
                dArr1 = dArr1;
                for (d = 1; d < 2; ++d) {
                    i1 += (int)(((d * l2) + i14) - i1);
                    f2 *= 148;
                }
                i4 >>= i14;
                i14 <<= i1;
            }
            i = i2;
        }
        vMeth_check_sum += i + i1 + i2 + i3 + i4 + Double.doubleToLongBits(d) + i14 + l2 + Float.floatToIntBits(f2) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr1));
    }

    public void mainTest(String[] strArr1) {

        int i15=226, i16=54621, i17=233, i18=-6, i19=780, i20=-11, i21=-36035, i22=1, i23=105, i24=4552;
        float f3=0.671F, f4=-101.846F;

        vMeth(iFld, 139, 44064);
        i15 = 1;
        do {
            if (Test.bFld) continue;
            for (i16 = 1; i16 < 101; ++i16) {
                Test.iArrFld[i16 - 1] = i15;
                Test.instanceCount = i16;
                i17 %= (int)(i15 | 1);
                i17 = 28;
            }
        } while (++i15 < 248);
        f3 += -2061721519L;
        for (f4 = 324; f4 > 3; f4--) {
            for (i19 = 4; i19 < 78; ++i19) {
                f3 -= -11;
            }
        }
        i21 = 1;
        do {
            Test.byFld += (byte)(i21 + Test.instanceCount);
            f3 = Test.instanceCount;
            Test.iArrFld[i21 - 1] <<= (int)-229L;
            i22 = 1;
            while (++i22 < 81) {
                for (i23 = 1; i23 > 1; i23 -= 3) {
                    i17 += i22;
                    Test.instanceCount ^= i20;
                    Test.instanceCount -= Test.instanceCount;
                    f3 += i19;
                    switch (((i17 >>> 1) % 3) + 25) {
                    case 25:
                    case 26:
                        i17 = iFld;
                        switch (((i22 >>> 1) % 1) + 110) {
                        case 110:
                            i24 *= (int)Test.instanceCount;
                            Test.iArrFld = Test.iArrFld;
                            Test.lArrFld[i21] -= (long)1.976F;
                            Test.instanceCount = (long)Test.dFld;
                            break;
                        default:
                            try {
                                iFld = (i16 / 61904);
                                i24 = (172 % i17);
                                i18 = (131 % i16);
                            } catch (ArithmeticException a_e) {}
                        }
                        break;
                    case 27:
                        f3 += (((i23 * f4) + i21) - i17);
                    }
                }
            }
        } while (++i21 < 311);

        FuzzerUtils.out.println("i15 i16 i17 = " + i15 + "," + i16 + "," + i17);
        FuzzerUtils.out.println("f3 f4 i18 = " + Float.floatToIntBits(f3) + "," + Float.floatToIntBits(f4) + "," + i18);
        FuzzerUtils.out.println("i19 i20 i21 = " + i19 + "," + i20 + "," + i21);
        FuzzerUtils.out.println("i22 i23 i24 = " + i22 + "," + i23 + "," + i24);

        FuzzerUtils.out.println("Test.instanceCount Test.byFld Test.bFld = " + Test.instanceCount + "," + Test.byFld +
            "," + (Test.bFld ? 1 : 0));
        FuzzerUtils.out.println("iFld Test.dFld Test.lArrFld = " + iFld + "," + Double.doubleToLongBits(Test.dFld) +
            "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.iArrFld = " + FuzzerUtils.checkSum(Test.iArrFld));

        FuzzerUtils.out.println("vMeth2_check_sum: " + vMeth2_check_sum);
        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 vMeth mainTest
//DEBUG  vMeth2 ->  vMeth2 vMeth1 vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
