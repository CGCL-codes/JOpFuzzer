// Generated by Java* Fuzzer test generator (1.0.001). Sun Mar 21 03:48:24 2021
public class Test {

    public static final int N = 400;

    public static long instanceCount=-9L;
    public static short sFld=-17132;
    public static byte byFld=-38;
    public static double dFld=0.4910;
    public int iArrFld[]=new int[N];
    public static long lArrFld[]=new long[N];
    public static byte byArrFld[]=new byte[N];

    static {
        FuzzerUtils.init(Test.lArrFld, -11L);
        FuzzerUtils.init(Test.byArrFld, (byte)120);
    }

    public static long vMeth_check_sum = 0;
    public static long lMeth_check_sum = 0;
    public static long vMeth1_check_sum = 0;

    public static void vMeth1(int i12, int i13) {

        int i15=148, i16=53207, i17=-38249, i18=-5, i19=160, iArr[]=new int[N];
        double d=16.117611;
        byte by=-40;
        float f=109.639F;
        boolean b=true;

        FuzzerUtils.init(iArr, 21128);

        for (int i14 : iArr) {
            for (i15 = 1; 4 > i15; ++i15) {
                d += i16;
                switch ((i15 % 3) + 125) {
                case 125:
                    Test.instanceCount += by;
                case 126:
                    for (i17 = 1; i17 < 2; i17++) {
                        iArr[i17 + 1] ^= i15;
                        i19 += i12;
                        i18 += i12;
                        Test.instanceCount = i14;
                        if (i16 != 0) {
                            vMeth1_check_sum += i12 + i13 + i15 + i16 + Double.doubleToLongBits(d) + by + i17 + i18 +
                                i19 + Float.floatToIntBits(f) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
                            return;
                        }
                        Test.instanceCount -= i16;
                        Test.byArrFld[(i17 >>> 1) % N] = (byte)f;
                        i14 ^= (int)Test.instanceCount;
                    }
                    if (b) break;
                    break;
                case 127:
                    i16 += (((i15 * i14) + i12) - i19);
                default:
                    if (b) continue;
                }
            }
        }
        vMeth1_check_sum += i12 + i13 + i15 + i16 + Double.doubleToLongBits(d) + by + i17 + i18 + i19 +
            Float.floatToIntBits(f) + (b ? 1 : 0) + FuzzerUtils.checkSum(iArr);
    }

    public static long lMeth(int i7) {

        int i8=15378, i9=-61548, i10=130, i11=-1, i20=-242, i21=9, i22=-50713;
        float f2=68.464F, fArr[]=new float[N];

        FuzzerUtils.init(fArr, 1.243F);

        for (i8 = 9; i8 < 186; ++i8) {
            for (i10 = 1; i10 < 9; ++i10) {
                vMeth1(i9, i10);
            }
        }
        for (float f1 : fArr) {
            i20 = 1;
            do {
                i11 *= i10;
            } while (++i20 < 4);
            Test.sFld = (short)-247;
            Test.instanceCount <<= i10;
            i21 = 1;
            while (++i21 < 4) {
                f1 += (((i21 * i10) + i7) - i21);
                i9 += (((i21 * i9) + Test.instanceCount) - Test.byFld);
                for (f2 = 1; f2 < 1; ++f2) {
                    fArr[i21 - 1] = i7;
                    i7 -= (int)Test.instanceCount;
                    i7 -= (int)f2;
                }
            }
        }
        long meth_res = i7 + i8 + i9 + i10 + i11 + i20 + i21 + Float.floatToIntBits(f2) + i22 +
            Double.doubleToLongBits(FuzzerUtils.checkSum(fArr));
        lMeth_check_sum += meth_res;
        return (long)meth_res;
    }

    public static void vMeth() {

        int i5=-17839, i6=-43352, iArr1[]=new int[N];
        boolean b1=true;
        double dArr[]=new double[N];

        FuzzerUtils.init(iArr1, 23229);
        FuzzerUtils.init(dArr, 59.16069);

        Test.instanceCount += -3;
        for (i5 = 10; i5 < 184; ++i5) {
            Test.instanceCount >>= (long)(-4.69F - lMeth(i5));
            b1 = b1;
        }
        i6 += i6;
        iArr1[(i5 >>> 1) % N] -= 14;
        Test.lArrFld[(i6 >>> 1) % N] += i5;
        i6 -= (int)Test.dFld;
        dArr[(i6 >>> 1) % N] = i6;
        i6 >>= i5;
        iArr1[(i6 >>> 1) % N] += i6;
        i6 *= i6;
        Test.lArrFld = Test.lArrFld;
        Test.instanceCount = i6;
        Test.instanceCount += i5;
        vMeth_check_sum += i5 + i6 + (b1 ? 1 : 0) + FuzzerUtils.checkSum(iArr1) +
            Double.doubleToLongBits(FuzzerUtils.checkSum(dArr));
    }

    public void mainTest(String[] strArr1) {

        int i=57657, i1=577, i2=6, i3=157, i4=12, i23=61271, i24=244;
        short s=-6429;
        boolean bArr[]=new boolean[N];
        float fArr1[]=new float[N];

        FuzzerUtils.init(bArr, true);
        FuzzerUtils.init(fArr1, 99.494F);

        for (i = 9; 379 > i; i++) {
            i2 = 1;
            do {
                for (i3 = 1; i3 > 1; i3 -= 2) {
                    Test.instanceCount = iArrFld[i3 + 1];
                    Test.instanceCount = (Test.instanceCount += i4);
                    Test.lArrFld[i] >>= (s + i4);
                    vMeth();
                    Test.instanceCount = i;
                    i4 &= (int)Test.instanceCount;
                }
                i1 = 23745;
                i1 += (i2 * i2);
                i4 = (int)Test.dFld;
                i1 <<= i3;
                Test.instanceCount += 169;
            } while (++i2 < 68);
            for (i23 = 68; i23 > 3; i23--) {
                bArr[i23 + 1] = true;
                i4 = i3;
                i24 += (((i23 * i23) + i) - i3);
                i4 <<= i;
                try {
                    i1 = (-42360 / i23);
                    i24 = (i4 % 29977);
                    iArrFld[i + 1] = (i4 % 15384);
                } catch (ArithmeticException a_e) {}
            }
        }
        iArrFld[(i23 >>> 1) % N] = (int)Test.dFld;
        fArr1[(i3 >>> 1) % N] *= i24;
        Test.dFld = i;

        FuzzerUtils.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
        FuzzerUtils.out.println("i3 i4 s = " + i3 + "," + i4 + "," + s);
        FuzzerUtils.out.println("i23 i24 bArr = " + i23 + "," + i24 + "," + FuzzerUtils.checkSum(bArr));
        FuzzerUtils.out.println("fArr1 = " + Double.doubleToLongBits(FuzzerUtils.checkSum(fArr1)));

        FuzzerUtils.out.println("Test.instanceCount Test.sFld Test.byFld = " + Test.instanceCount + "," + Test.sFld +
            "," + Test.byFld);
        FuzzerUtils.out.println("Test.dFld iArrFld Test.lArrFld = " + Double.doubleToLongBits(Test.dFld) + "," +
            FuzzerUtils.checkSum(iArrFld) + "," + FuzzerUtils.checkSum(Test.lArrFld));
        FuzzerUtils.out.println("Test.byArrFld = " + FuzzerUtils.checkSum(Test.byArrFld));

        FuzzerUtils.out.println("vMeth1_check_sum: " + vMeth1_check_sum);
        FuzzerUtils.out.println("lMeth_check_sum: " + lMeth_check_sum);
        FuzzerUtils.out.println("vMeth_check_sum: " + vMeth_check_sum);
    }
    public static void main(String[] strArr) {

        try {
            Test _instance = new Test();
            for (int i = 0; i < 10; i++ ) {
                _instance.mainTest(strArr);
            }
         } catch (Exception ex) {
            FuzzerUtils.out.println(ex.getClass().getCanonicalName());
         }
    }
}
///////////////////////////////////////////////////////////////////////
//DEBUG  Test ->  Test
//DEBUG  main ->  main
//DEBUG  mainTest ->  mainTest
//DEBUG  vMeth ->  vMeth mainTest
//DEBUG  lMeth ->  lMeth vMeth mainTest
//DEBUG  vMeth1 ->  vMeth1 lMeth vMeth mainTest
//DEBUG  Depth = 3
//DEBUG  Classes = 1
//DEBUG  static objects = {}
